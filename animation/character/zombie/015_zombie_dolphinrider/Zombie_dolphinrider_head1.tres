[gd_resource type="Animation" load_steps=28 format=3 uid="uid://daonvyu54idlk"]

[ext_resource type="Texture2D" uid="uid://brvu2a0dj7ujr" path="res://assets/reanim/Zombie_dolphinrider_innerarm_hand.png" id="0_fuck"]
[ext_resource type="Texture2D" uid="uid://c7cjwc2v85fq8" path="res://assets/reanim/Zombie_dolphinrider_innerarm_lower.png" id="1_fuck"]
[ext_resource type="Texture2D" uid="uid://7rp63r7hf0ll" path="res://assets/reanim/Zombie_dolphinrider_innerarm_upper.png" id="2_fuck"]
[ext_resource type="Texture2D" uid="uid://dahparam7w4qx" path="res://assets/reanim/Zombie_dolphinrider_innerleg_foot.png" id="3_fuck"]
[ext_resource type="Texture2D" uid="uid://dso0w5x240ovg" path="res://assets/reanim/Zombie_dolphinrider_innerleg_lower.png" id="4_fuck"]
[ext_resource type="Texture2D" uid="uid://8lf3oib5dsqt" path="res://assets/reanim/Zombie_dolphinrider_innerleg_upper.png" id="5_fuck"]
[ext_resource type="Texture2D" uid="uid://dyls55i2p1h6e" path="res://assets/reanim/Zombie_dolphinrider_dolphininwater.png" id="6_fuck"]
[ext_resource type="Texture2D" uid="uid://ctci5pveql0wh" path="res://assets/reanim/Zombie_dolphinrider_dolphinbody2.png" id="7_fuck"]
[ext_resource type="Texture2D" uid="uid://bfv7uuojjvqli" path="res://assets/reanim/Zombie_dolphinrider_dolphinfin2.png" id="8_fuck"]
[ext_resource type="Texture2D" uid="uid://bp4w3qbdj44t6" path="res://assets/reanim/Zombie_dolphinrider_dolphinjaw.png" id="9_fuck"]
[ext_resource type="Texture2D" uid="uid://ccvrcj5k4u21i" path="res://assets/reanim/Zombie_dolphinrider_dolphinbody1.png" id="10_fuck"]
[ext_resource type="Texture2D" uid="uid://cmqttdyw412mn" path="res://assets/reanim/Zombie_dolphinrider_dolphinfin1.png" id="11_fuck"]
[ext_resource type="Texture2D" uid="uid://dkj0lon114c3o" path="res://assets/reanim/Zombie_dolphinrider_body2.png" id="12_fuck"]
[ext_resource type="Texture2D" uid="uid://cli3edkc70xbo" path="res://assets/reanim/Zombie_dolphinrider_body1.png" id="13_fuck"]
[ext_resource type="Texture2D" uid="uid://da3jar2181s5p" path="res://assets/reanim/Zombie_dolphinrider_watershadow.png" id="14_fuck"]
[ext_resource type="Texture2D" uid="uid://b7ggvyaplipyr" path="res://assets/reanim/Zombie_dolphinrider_outerleg_foot1.png" id="15_fuck"]
[ext_resource type="Texture2D" uid="uid://feufmecp63cf" path="res://assets/reanim/Zombie_dolphinrider_outerleg_foot2.png" id="16_fuck"]
[ext_resource type="Texture2D" uid="uid://ym3cj03fvop4" path="res://assets/reanim/Zombie_dolphinrider_outerleg_lower.png" id="17_fuck"]
[ext_resource type="Texture2D" uid="uid://cnf5nehubebbk" path="res://assets/reanim/Zombie_dolphinrider_outerleg_upper.png" id="18_fuck"]
[ext_resource type="Texture2D" uid="uid://bnuw14xqml7jy" path="res://assets/reanim/Zombie_dolphinrider_whitewater1.png" id="19_fuck"]
[ext_resource type="Texture2D" uid="uid://c668afr7c0iii" path="res://assets/reanim/Zombie_dolphinrider_whitewater2.png" id="20_fuck"]
[ext_resource type="Texture2D" uid="uid://cp5nr8klvhh" path="res://assets/reanim/Zombie_dolphinrider_whitewater3.png" id="21_fuck"]
[ext_resource type="Texture2D" uid="uid://cjujyrb3tyc55" path="res://assets/reanim/Zombie_dolphinrider_jaw.png" id="22_fuck"]
[ext_resource type="Texture2D" uid="uid://c0qb3srcraxvi" path="res://assets/reanim/Zombie_dolphinrider_head.png" id="23_fuck"]
[ext_resource type="Texture2D" uid="uid://drj73i768ti4y" path="res://assets/reanim/Zombie_dolphinrider_outerarm_hand.png" id="24_fuck"]
[ext_resource type="Texture2D" uid="uid://chk8ojme1d2nr" path="res://assets/reanim/Zombie_dolphinrider_outerarm_lower.png" id="25_fuck"]
[ext_resource type="Texture2D" uid="uid://dso348ywf210h" path="res://assets/reanim/Zombie_dolphinrider_outerarm_upper.png" id="26_fuck"]

[resource]
resource_name = "Zombie_dolphinrider_head1"
length = 20.75
step = 0.083333
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Body/Anim_idle:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1.16667, 1.25, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [true, true, false, false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Body/Anim_idle:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Body/Anim_idle:rotation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Body/Anim_idle:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Body/Anim_idle:skew")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Body/Anim_idle:texture")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [null, null]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Body/Anim_idle:self_modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("Body/Anim_walkdolphin:visible")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0, 1.16667, 1.25, 4.41667, 4.5, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true, false, false]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("Body/Anim_walkdolphin:position")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0)]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("Body/Anim_walkdolphin:rotation")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("Body/Anim_walkdolphin:scale")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1)]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("Body/Anim_walkdolphin:skew")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("Body/Anim_walkdolphin:texture")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [null, null]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("Body/Anim_walkdolphin:self_modulate")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/14/type = "value"
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/path = NodePath("Body/Anim_walk:visible")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/keys = {
"times": PackedFloat32Array(0, 4.41667, 4.5, 7.66667, 7.75, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true, false, false]
}
tracks/15/type = "value"
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/path = NodePath("Body/Anim_walk:position")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0)]
}
tracks/16/type = "value"
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/path = NodePath("Body/Anim_walk:rotation")
tracks/16/interp = 1
tracks/16/loop_wrap = true
tracks/16/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/17/type = "value"
tracks/17/imported = false
tracks/17/enabled = true
tracks/17/path = NodePath("Body/Anim_walk:scale")
tracks/17/interp = 1
tracks/17/loop_wrap = true
tracks/17/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1)]
}
tracks/18/type = "value"
tracks/18/imported = false
tracks/18/enabled = true
tracks/18/path = NodePath("Body/Anim_walk:skew")
tracks/18/interp = 1
tracks/18/loop_wrap = true
tracks/18/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/19/type = "value"
tracks/19/imported = false
tracks/19/enabled = true
tracks/19/path = NodePath("Body/Anim_walk:texture")
tracks/19/interp = 1
tracks/19/loop_wrap = true
tracks/19/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [null, null]
}
tracks/20/type = "value"
tracks/20/imported = false
tracks/20/enabled = true
tracks/20/path = NodePath("Body/Anim_walk:self_modulate")
tracks/20/interp = 1
tracks/20/loop_wrap = true
tracks/20/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/21/type = "value"
tracks/21/imported = false
tracks/21/enabled = true
tracks/21/path = NodePath("Body/Anim_jumpinpool:visible")
tracks/21/interp = 1
tracks/21/loop_wrap = true
tracks/21/keys = {
"times": PackedFloat32Array(0, 7.66667, 7.75, 11.4167, 11.5, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true, false, false]
}
tracks/22/type = "value"
tracks/22/imported = false
tracks/22/enabled = true
tracks/22/path = NodePath("Body/Anim_jumpinpool:position")
tracks/22/interp = 1
tracks/22/loop_wrap = true
tracks/22/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0)]
}
tracks/23/type = "value"
tracks/23/imported = false
tracks/23/enabled = true
tracks/23/path = NodePath("Body/Anim_jumpinpool:rotation")
tracks/23/interp = 1
tracks/23/loop_wrap = true
tracks/23/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/24/type = "value"
tracks/24/imported = false
tracks/24/enabled = true
tracks/24/path = NodePath("Body/Anim_jumpinpool:scale")
tracks/24/interp = 1
tracks/24/loop_wrap = true
tracks/24/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1)]
}
tracks/25/type = "value"
tracks/25/imported = false
tracks/25/enabled = true
tracks/25/path = NodePath("Body/Anim_jumpinpool:skew")
tracks/25/interp = 1
tracks/25/loop_wrap = true
tracks/25/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/26/type = "value"
tracks/26/imported = false
tracks/26/enabled = true
tracks/26/path = NodePath("Body/Anim_jumpinpool:texture")
tracks/26/interp = 1
tracks/26/loop_wrap = true
tracks/26/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [null, null]
}
tracks/27/type = "value"
tracks/27/imported = false
tracks/27/enabled = true
tracks/27/path = NodePath("Body/Anim_jumpinpool:self_modulate")
tracks/27/interp = 1
tracks/27/loop_wrap = true
tracks/27/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/28/type = "value"
tracks/28/imported = false
tracks/28/enabled = true
tracks/28/path = NodePath("Body/Anim_ride:visible")
tracks/28/interp = 1
tracks/28/loop_wrap = true
tracks/28/keys = {
"times": PackedFloat32Array(0, 11.4167, 11.5, 11.8333, 11.9167, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true, false, false]
}
tracks/29/type = "value"
tracks/29/imported = false
tracks/29/enabled = true
tracks/29/path = NodePath("Body/Anim_ride:position")
tracks/29/interp = 1
tracks/29/loop_wrap = true
tracks/29/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0)]
}
tracks/30/type = "value"
tracks/30/imported = false
tracks/30/enabled = true
tracks/30/path = NodePath("Body/Anim_ride:rotation")
tracks/30/interp = 1
tracks/30/loop_wrap = true
tracks/30/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/31/type = "value"
tracks/31/imported = false
tracks/31/enabled = true
tracks/31/path = NodePath("Body/Anim_ride:scale")
tracks/31/interp = 1
tracks/31/loop_wrap = true
tracks/31/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1)]
}
tracks/32/type = "value"
tracks/32/imported = false
tracks/32/enabled = true
tracks/32/path = NodePath("Body/Anim_ride:skew")
tracks/32/interp = 1
tracks/32/loop_wrap = true
tracks/32/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/33/type = "value"
tracks/33/imported = false
tracks/33/enabled = true
tracks/33/path = NodePath("Body/Anim_ride:texture")
tracks/33/interp = 1
tracks/33/loop_wrap = true
tracks/33/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [null, null]
}
tracks/34/type = "value"
tracks/34/imported = false
tracks/34/enabled = true
tracks/34/path = NodePath("Body/Anim_ride:self_modulate")
tracks/34/interp = 1
tracks/34/loop_wrap = true
tracks/34/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/35/type = "value"
tracks/35/imported = false
tracks/35/enabled = true
tracks/35/path = NodePath("Body/Anim_dolphinjump:visible")
tracks/35/interp = 1
tracks/35/loop_wrap = true
tracks/35/keys = {
"times": PackedFloat32Array(0, 11.8333, 11.9167, 13.75, 13.8333, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true, false, false]
}
tracks/36/type = "value"
tracks/36/imported = false
tracks/36/enabled = true
tracks/36/path = NodePath("Body/Anim_dolphinjump:position")
tracks/36/interp = 1
tracks/36/loop_wrap = true
tracks/36/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8), Vector2(-25.7, -27.8)]
}
tracks/37/type = "value"
tracks/37/imported = false
tracks/37/enabled = true
tracks/37/path = NodePath("Body/Anim_dolphinjump:rotation")
tracks/37/interp = 1
tracks/37/loop_wrap = true
tracks/37/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values
}
tracks/38/type = "value"
tracks/38/imported = false
tracks/38/enabled = true
tracks/38/path = NodePath("Body/Anim_dolphinjump:scale")
tracks/38/interp = 1
tracks/38/loop_wrap = true
tracks/38/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999), Vector2(0.999, 0.999)]
}
tracks/39/type = "value"
tracks/39/imported = false
tracks/39/enabled = true
tracks/39/path = NodePath("Body/Anim_dolphinjump:skew")
tracks/39/interp = 1
tracks/39/loop_wrap = true
tracks/39/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07]
}
tracks/40/type = "value"
tracks/40/imported = false
tracks/40/enabled = true
tracks/40/path = NodePath("Body/Anim_dolphinjump:texture")
tracks/40/interp = 1
tracks/40/loop_wrap = true
tracks/40/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [null, null]
}
tracks/41/type = "value"
tracks/41/imported = false
tracks/41/enabled = true
tracks/41/path = NodePath("Body/Anim_dolphinjump:self_modulate")
tracks/41/interp = 1
tracks/41/loop_wrap = true
tracks/41/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/42/type = "value"
tracks/42/imported = false
tracks/42/enabled = true
tracks/42/path = NodePath("Body/Anim_eat:visible")
tracks/42/interp = 1
tracks/42/loop_wrap = true
tracks/42/keys = {
"times": PackedFloat32Array(0, 13.75, 13.8333, 17.25, 17.3333, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true, false, false]
}
tracks/43/type = "value"
tracks/43/imported = false
tracks/43/enabled = true
tracks/43/path = NodePath("Body/Anim_eat:position")
tracks/43/interp = 1
tracks/43/loop_wrap = true
tracks/43/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0)]
}
tracks/44/type = "value"
tracks/44/imported = false
tracks/44/enabled = true
tracks/44/path = NodePath("Body/Anim_eat:rotation")
tracks/44/interp = 1
tracks/44/loop_wrap = true
tracks/44/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/45/type = "value"
tracks/45/imported = false
tracks/45/enabled = true
tracks/45/path = NodePath("Body/Anim_eat:scale")
tracks/45/interp = 1
tracks/45/loop_wrap = true
tracks/45/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1)]
}
tracks/46/type = "value"
tracks/46/imported = false
tracks/46/enabled = true
tracks/46/path = NodePath("Body/Anim_eat:skew")
tracks/46/interp = 1
tracks/46/loop_wrap = true
tracks/46/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/47/type = "value"
tracks/47/imported = false
tracks/47/enabled = true
tracks/47/path = NodePath("Body/Anim_eat:texture")
tracks/47/interp = 1
tracks/47/loop_wrap = true
tracks/47/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [null, null]
}
tracks/48/type = "value"
tracks/48/imported = false
tracks/48/enabled = true
tracks/48/path = NodePath("Body/Anim_eat:self_modulate")
tracks/48/interp = 1
tracks/48/loop_wrap = true
tracks/48/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/49/type = "value"
tracks/49/imported = false
tracks/49/enabled = true
tracks/49/path = NodePath("Body/Anim_swim:visible")
tracks/49/interp = 1
tracks/49/loop_wrap = true
tracks/49/keys = {
"times": PackedFloat32Array(0, 17.25, 17.3333, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true]
}
tracks/50/type = "value"
tracks/50/imported = false
tracks/50/enabled = true
tracks/50/path = NodePath("Body/Anim_swim:position")
tracks/50/interp = 1
tracks/50/loop_wrap = true
tracks/50/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0)]
}
tracks/51/type = "value"
tracks/51/imported = false
tracks/51/enabled = true
tracks/51/path = NodePath("Body/Anim_swim:rotation")
tracks/51/interp = 1
tracks/51/loop_wrap = true
tracks/51/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/52/type = "value"
tracks/52/imported = false
tracks/52/enabled = true
tracks/52/path = NodePath("Body/Anim_swim:scale")
tracks/52/interp = 1
tracks/52/loop_wrap = true
tracks/52/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1)]
}
tracks/53/type = "value"
tracks/53/imported = false
tracks/53/enabled = true
tracks/53/path = NodePath("Body/Anim_swim:skew")
tracks/53/interp = 1
tracks/53/loop_wrap = true
tracks/53/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/54/type = "value"
tracks/54/imported = false
tracks/54/enabled = true
tracks/54/path = NodePath("Body/Anim_swim:texture")
tracks/54/interp = 1
tracks/54/loop_wrap = true
tracks/54/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [null, null]
}
tracks/55/type = "value"
tracks/55/imported = false
tracks/55/enabled = true
tracks/55/path = NodePath("Body/Anim_swim:self_modulate")
tracks/55/interp = 1
tracks/55/loop_wrap = true
tracks/55/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/56/type = "value"
tracks/56/imported = false
tracks/56/enabled = true
tracks/56/path = NodePath("Body/Anim_death:visible")
tracks/56/interp = 1
tracks/56/loop_wrap = true
tracks/56/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [false, false]
}
tracks/57/type = "value"
tracks/57/imported = false
tracks/57/enabled = true
tracks/57/path = NodePath("Body/Anim_death:position")
tracks/57/interp = 1
tracks/57/loop_wrap = true
tracks/57/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0)]
}
tracks/58/type = "value"
tracks/58/imported = false
tracks/58/enabled = true
tracks/58/path = NodePath("Body/Anim_death:rotation")
tracks/58/interp = 1
tracks/58/loop_wrap = true
tracks/58/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/59/type = "value"
tracks/59/imported = false
tracks/59/enabled = true
tracks/59/path = NodePath("Body/Anim_death:scale")
tracks/59/interp = 1
tracks/59/loop_wrap = true
tracks/59/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1)]
}
tracks/60/type = "value"
tracks/60/imported = false
tracks/60/enabled = true
tracks/60/path = NodePath("Body/Anim_death:skew")
tracks/60/interp = 1
tracks/60/loop_wrap = true
tracks/60/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/61/type = "value"
tracks/61/imported = false
tracks/61/enabled = true
tracks/61/path = NodePath("Body/Anim_death:texture")
tracks/61/interp = 1
tracks/61/loop_wrap = true
tracks/61/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [null, null]
}
tracks/62/type = "value"
tracks/62/imported = false
tracks/62/enabled = true
tracks/62/path = NodePath("Body/Anim_death:self_modulate")
tracks/62/interp = 1
tracks/62/loop_wrap = true
tracks/62/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/63/type = "value"
tracks/63/imported = false
tracks/63/enabled = true
tracks/63/path = NodePath("Body/_ground:visible")
tracks/63/interp = 1
tracks/63/loop_wrap = true
tracks/63/keys = {
"times": PackedFloat32Array(0, 1.16667, 1.25, 7.66667, 7.75, 17.25, 17.3333, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true, false, false, true, true]
}
tracks/64/type = "value"
tracks/64/imported = false
tracks/64/enabled = true
tracks/64/path = NodePath("Body/_ground:position")
tracks/64/interp = 1
tracks/64/loop_wrap = true
tracks/64/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(-59.8, 110.1), Vector2(-58.7, 110.1), Vector2(-57.6, 110.1), Vector2(-56.6, 110.1), Vector2(-55.5, 110.1), Vector2(-52.7, 110.1), Vector2(-49.9, 110.1), Vector2(-47.2, 110.1), Vector2(-45.9, 110.1), Vector2(-44.6, 110.1), Vector2(-43.3, 110.1), Vector2(-42.1, 110.1), Vector2(-40.9, 110.1), Vector2(-39.7, 110.1), Vector2(-38.5, 110.1), Vector2(-37.3, 110.1), Vector2(-36.1, 110.1), Vector2(-35, 110.1), Vector2(-33.8, 110.1), Vector2(-32.6, 110.1), Vector2(-31.2, 110.1), Vector2(-29.8, 110.1), Vector2(-28.4, 110.1), Vector2(-27, 110.1), Vector2(-25.6, 110.1), Vector2(-23.6, 110.1), Vector2(-21.5, 110.1), Vector2(-19.5, 110.1), Vector2(-17.4, 110.1), Vector2(-15.4, 110.1), Vector2(-13.3, 110.1), Vector2(-11.3, 110.1), Vector2(-9.2, 110.1), Vector2(-7.4, 110.1), Vector2(-5.6, 110.1), Vector2(-3.8, 110.1), Vector2(-2, 110.1), Vector2(-0.2, 110.1), Vector2(1.5, 110.1), Vector2(-59.8, 110.1), Vector2(-58.7, 110.1), Vector2(-57.6, 110.1), Vector2(-56.6, 110.1), Vector2(-55.5, 110.1), Vector2(-52.7, 110.1), Vector2(-49.9, 110.1), Vector2(-47.2, 110.1), Vector2(-45.9, 110.1), Vector2(-44.6, 110.1), Vector2(-43.3, 110.1), Vector2(-42.1, 110.1), Vector2(-40.9, 110.1), Vector2(-39.7, 110.1), Vector2(-38.5, 110.1), Vector2(-37.3, 110.1), Vector2(-36.1, 110.1), Vector2(-35, 110.1), Vector2(-33.8, 110.1), Vector2(-32.6, 110.1), Vector2(-31.2, 110.1), Vector2(-29.8, 110.1), Vector2(-28.4, 110.1), Vector2(-27, 110.1), Vector2(-25.6, 110.1), Vector2(-23.6, 110.1), Vector2(-21.5, 110.1), Vector2(-19.5, 110.1), Vector2(-17.4, 110.1), Vector2(-15.4, 110.1), Vector2(-13.3, 110.1), Vector2(-11.3, 110.1), Vector2(-9.2, 110.1), Vector2(-7.4, 110.1), Vector2(-5.6, 110.1), Vector2(-3.8, 110.1), Vector2(-2, 110.1), Vector2(-0.2, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(1.5, 110.1), Vector2(-59.8, 110.1), Vector2(-59, 110.1), Vector2(-58.1, 110.1), Vector2(-57.2, 110.1), Vector2(-56.3, 110.1), Vector2(-55.5, 110.1), Vector2(-52.7, 110.1), Vector2(-49.9, 110.1), Vector2(-47.2, 110.1), Vector2(-45.9, 110.1), Vector2(-44.6, 110.1), Vector2(-43.3, 110.1), Vector2(-42.1, 110.1), Vector2(-40.9, 110.1), Vector2(-39.7, 110.1), Vector2(-38.5, 110.1), Vector2(-37.3, 110.1), Vector2(-36.4, 110.1), Vector2(-35.4, 110.1), Vector2(-34.5, 110.1), Vector2(-33.6, 110.1), Vector2(-32.6, 110.1), Vector2(-31.2, 110.1), Vector2(-29.8, 110.1), Vector2(-28.4, 110.1), Vector2(-27, 110.1), Vector2(-25.6, 110.1), Vector2(-24, 110.1), Vector2(-22.3, 110.1), Vector2(-20.7, 110.1), Vector2(-19.1, 110.1), Vector2(-17.4, 110.1), Vector2(-15.4, 110.1), Vector2(-13.3, 110.1), Vector2(-11.3, 110.1), Vector2(-9.2, 110.1), Vector2(-7.4, 110.1), Vector2(-5.6, 110.1), Vector2(-3.8, 110.1), Vector2(-2, 110.1), Vector2(-0.2, 110.1), Vector2(1.5, 110.1)]
}
tracks/65/type = "value"
tracks/65/imported = false
tracks/65/enabled = true
tracks/65/path = NodePath("Body/_ground:rotation")
tracks/65/interp = 1
tracks/65/loop_wrap = true
tracks/65/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/66/type = "value"
tracks/66/imported = false
tracks/66/enabled = true
tracks/66/path = NodePath("Body/_ground:scale")
tracks/66/interp = 1
tracks/66/loop_wrap = true
tracks/66/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1)]
}
tracks/67/type = "value"
tracks/67/imported = false
tracks/67/enabled = true
tracks/67/path = NodePath("Body/_ground:skew")
tracks/67/interp = 1
tracks/67/loop_wrap = true
tracks/67/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/68/type = "value"
tracks/68/imported = false
tracks/68/enabled = true
tracks/68/path = NodePath("Body/_ground:texture")
tracks/68/interp = 1
tracks/68/loop_wrap = true
tracks/68/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [null, null]
}
tracks/69/type = "value"
tracks/69/imported = false
tracks/69/enabled = true
tracks/69/path = NodePath("Body/_ground:self_modulate")
tracks/69/interp = 1
tracks/69/loop_wrap = true
tracks/69/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/70/type = "value"
tracks/70/imported = false
tracks/70/enabled = true
tracks/70/path = NodePath("Body/Zombie_dolphinrider_innerarm_hand:visible")
tracks/70/interp = 1
tracks/70/loop_wrap = true
tracks/70/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [true, true]
}
tracks/71/type = "value"
tracks/71/imported = false
tracks/71/enabled = true
tracks/71/path = NodePath("Body/Zombie_dolphinrider_innerarm_hand:position")
tracks/71/interp = 1
tracks/71/loop_wrap = true
tracks/71/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(16.5, 86.8), Vector2(16.5, 87.5), Vector2(16.4, 88), Vector2(16.4, 88.7), Vector2(16.4, 89.3), Vector2(16.4, 89.9), Vector2(16.3, 90.5), Vector2(16.3, 91.1), Vector2(16.3, 90.4), Vector2(16.3, 89.8), Vector2(16.3, 89.3), Vector2(16.3, 88.6), Vector2(16.4, 88), Vector2(16.4, 87.3), Vector2(16.5, 86.8), Vector2(15.2, 85.7), Vector2(15, 85.2), Vector2(14.8, 84.7), Vector2(14.5, 84.2), Vector2(14.3, 83.7), Vector2(13.7, 81.6), Vector2(12.9, 79.6), Vector2(12.3, 77.5), Vector2(12.2, 76.2), Vector2(12, 74.8), Vector2(11.9, 73.6), Vector2(11.9, 72.1), Vector2(11.5, 78.3), Vector2(11, 84.5), Vector2(10.6, 90.6), Vector2(10.2, 97), Vector2(11.5, 95.2), Vector2(12.8, 93.5), Vector2(14.2, 91.8), Vector2(15.4, 90.1), Vector2(17.3, 88.3), Vector2(19.3, 86.6), Vector2(21.3, 84.9), Vector2(23.3, 83.2), Vector2(25.4, 81.5), Vector2(27.9, 79.2), Vector2(30.5, 77.1), Vector2(33, 74.8), Vector2(35.4, 72.6), Vector2(29.8, 78.1), Vector2(24.2, 83.6), Vector2(18.7, 89.3), Vector2(13.1, 95.1), Vector2(13.4, 93.5), Vector2(13.8, 92), Vector2(14.2, 90.4), Vector2(14.4, 88.9), Vector2(14.9, 87.3), Vector2(15.2, 85.7), Vector2(19.8, 88.8), Vector2(19.7, 88.3), Vector2(19.5, 88), Vector2(19.3, 87.5), Vector2(19.2, 87.1), Vector2(18.8, 86.2), Vector2(18.6, 85.3), Vector2(18.2, 84.5), Vector2(18, 83.6), Vector2(16.5, 79.2), Vector2(15.4, 75.2), Vector2(14.6, 71.8), Vector2(12.5, 75.7), Vector2(10.3, 79.9), Vector2(8.4, 84), Vector2(7.8, 90), Vector2(10.3, 92.6), Vector2(13.1, 95.3), Vector2(14.1, 95.3), Vector2(15.1, 95.3), Vector2(17.6, 93.8), Vector2(20.2, 92.4), Vector2(22.7, 91.1), Vector2(25.3, 89.8), Vector2(28, 88.6), Vector2(30.3, 87.3), Vector2(32.5, 86), Vector2(34.7, 84.7), Vector2(36.9, 83.3), Vector2(32.8, 87.7), Vector2(28.8, 92.3), Vector2(24.9, 96.8), Vector2(18.4, 100), Vector2(14.9, 98), Vector2(16, 96.2), Vector2(17, 94.4), Vector2(18, 92.7), Vector2(19.1, 90.9), Vector2(19.8, 88.8), Vector2(16.5, 86.8), Vector2(16.5, 87.8), Vector2(16.5, 88.8), Vector2(16.5, 89.8), Vector2(16.4, 90.9), Vector2(16.5, 91.8), Vector2(16.6, 92.8), Vector2(17.7, 87.8), Vector2(19, 83.3), Vector2(20.3, 79.2), Vector2(21.5, 75), Vector2(22.6, 71.1), Vector2(25.4, 61.8), Vector2(27.8, 52.8), Vector2(24.6, 58.5), Vector2(21.1, 64.7), Vector2(19.4, 70.2), Vector2(17.4, 77.5), Vector2(16.5, 86.8), Vector2(20.3, 80), Vector2(24.1, 73.3), Vector2(28.2, 66.8), Vector2(23.2, 59.5), Vector2(18.4, 52.5), Vector2(13.9, 45.8), Vector2(12.3, 29.3), Vector2(10.9, 13), Vector2(9.7, -3.1), Vector2(8.6, -5.8), Vector2(7.6, -8.7), Vector2(6.2, -8.2), Vector2(4.7, -7.7), Vector2(3.1, -7.3), Vector2(1.6, -6.8), Vector2(-5.4, 18.7), Vector2(-11.1, 44.1), Vector2(-15.3, 69), Vector2(-34.2, 88.6), Vector2(-42.2, 110), Vector2(-43, 109.6), Vector2(-43.8, 109), Vector2(-44, 107.4), Vector2(-44.2, 105.8), Vector2(-44.4, 104.3), Vector2(-44.6, 102.6), Vector2(-44.6, 102.6), Vector2(-44.7, 101.2), Vector2(-44.6, 99.8), Vector2(-44.7, 101.2), Vector2(-44.6, 102.6), Vector2(-44.5, 104.1), Vector2(-44.2, 105.6), Vector2(-52.9, 74.2), Vector2(-61.6, 42.7), Vector2(-76.6, 21.1), Vector2(-91.4, -0.5), Vector2(-97.4, 4.8), Vector2(-103.1, 10.6), Vector2(-108.6, 16.5), Vector2(-119.3, 48), Vector2(-130.1, 79.6), Vector2(-127.3, 83.1), Vector2(-124, 86.8), Vector2(-120.2, 90.6), Vector2(-115.9, 94.2), Vector2(-117.3, 106.9), Vector2(-116.7, 120.1), Vector2(-116.3, 124.1), Vector2(-116, 128.1), Vector2(-129.3, 126.2), Vector2(-137.5, 126.3), Vector2(-145, 127.5), Vector2(-152.7, 128.5), Vector2(21.1, 68.7), Vector2(21.9, 68.3), Vector2(22.9, 67.8), Vector2(23.7, 67.3), Vector2(24.6, 66.9), Vector2(25.5, 66.5), Vector2(26.3, 65.8), Vector2(27.5, 65.7), Vector2(28.6, 65.3), Vector2(29.7, 65), Vector2(30.9, 64.7), Vector2(32, 64.3), Vector2(31.3, 64.3), Vector2(30.6, 64.3), Vector2(29.9, 64.3), Vector2(29.3, 64.3), Vector2(29.3, 64.6), Vector2(29.4, 64.9), Vector2(28, 65.1), Vector2(26.4, 65.2), Vector2(24.9, 65.4), Vector2(23.3, 65.6), Vector2(21.9, 65.8), Vector2(20.2, 66), Vector2(18.8, 66.3), Vector2(19.8, 63.5), Vector2(20.5, 61), Vector2(21.1, 58.6), Vector2(21.4, 56.5), Vector2(21.5, 54.5), Vector2(21.2, 52.6), Vector2(20.7, 50.9), Vector2(18.7, 53.8), Vector2(16.8, 56.5), Vector2(14.8, 59.3), Vector2(12.8, 62.1), Vector2(11.9, 59.3), Vector2(9.9, 57), Vector2(12.7, 60), Vector2(15.6, 63), Vector2(18.3, 66), Vector2(21.1, 68.7), Vector2(21.1, 68.7), Vector2(21.9, 68.3), Vector2(22.9, 67.8), Vector2(23.7, 67.3), Vector2(24.6, 66.9), Vector2(25.5, 66.5), Vector2(26.3, 65.8), Vector2(27.5, 65.7), Vector2(28.6, 65.3), Vector2(29.7, 65), Vector2(30.9, 64.7), Vector2(32, 64.3), Vector2(31.5, 65.2), Vector2(31.2, 65.8), Vector2(30.7, 66.7), Vector2(30.2, 67.3), Vector2(28.9, 67.2), Vector2(27.7, 67.1), Vector2(26.4, 67), Vector2(25.1, 66.8), Vector2(23.8, 66.7), Vector2(22.5, 66.6), Vector2(21.2, 66.3), Vector2(19.9, 66.3), Vector2(18.8, 66.3), Vector2(18, 65.5), Vector2(17.3, 64.7), Vector2(16.5, 63.9), Vector2(15.8, 63.2), Vector2(15.1, 62.4), Vector2(14.3, 61.6), Vector2(13.7, 60.9), Vector2(12.5, 62.7), Vector2(10.9, 64.8), Vector2(9.2, 66.9), Vector2(7.3, 69.3), Vector2(9.7, 69.2), Vector2(12.1, 69), Vector2(14.5, 69), Vector2(16.6, 68.8), Vector2(19, 68.8), Vector2(21.1, 68.7)]
}
tracks/72/type = "value"
tracks/72/imported = false
tracks/72/enabled = true
tracks/72/path = NodePath("Body/Zombie_dolphinrider_innerarm_hand:rotation")
tracks/72/interp = 1
tracks/72/loop_wrap = true
tracks/72/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.005236, 0.008727, 0.013963, 0.022689, 0.02618, 0.031416, 0.040143, 0.031416, 0.02618, 0.022689, 0.013963, 0.008727, 0.005236, 0.0, -0.022689, -0.038397, -0.055851, -0.073304, -0.092502, -0.068068, -0.041888, -0.020944, 0.005236, 0.031416, 0.061087, 0.090757, 0.05236, 0.017453, -0.015708, -0.05236, 0.022689, 0.10472, 0.18326, 0.263545, 0.267035, 0.267035, 0.272271, 0.275762, 0.279253, 0.296706, 0.314159, 0.333358, 0.352557, 0.267035, 0.185005, 0.101229, 0.020944, 0.013963, 0.005236, 0.0, -0.006981, -0.012217, -0.022689, -0.16057, -0.181514, -0.204204, -0.226893, -0.251327, -0.274017, -0.296706, -0.321141, -0.34383, -0.120428, 0.101229, 0.326377, 0.418879, 0.511381, 0.607375, 0.415388, 0.165806, -0.076794, -0.111701, -0.148353, -0.190241, -0.235619, -0.282743, -0.326377, -0.371755, -0.366519, -0.361283, -0.356047, -0.352557, -0.401426, -0.453786, -0.507891, -0.42586, -0.202458, -0.191986, -0.18326, -0.174533, -0.169297, -0.16057, 0.0, 0.013963, 0.031416, 0.048869, 0.061087, 0.07854, 0.095993, 0.298451, 0.502655, 0.705113, 0.914553, 1.12574, 1.34739, 1.56731, 1.37357, 1.1781, 0.783653, 0.389208, 0.0, 0.132645, 0.267035, 0.403171, 0.232129, 0.061087, -0.106465, -0.230383, -0.356047, -0.483456, -0.561996, -0.640536, -0.637045, -0.631809, -0.628319, -0.623083, -0.98262, -1.34216, -1.69995, -0.703368, 0.289725, 0.287979, 0.289725, 0.310669, 0.336849, 0.359538, 0.385718, 0.385718, 0.383972, 0.385718, 0.383972, 0.385718, 0.357792, 0.331613, 0.406662, 0.481711, 0.441568, 0.404916, 0.249582, 0.097738, -0.050615, -0.148353, -0.249582, -0.457276, -0.668461, -0.881391, -1.09083, -0.671952, -0.253073, -0.260054, -0.272271, -0.312414, 1.34739, 1.34739, 1.34565, 1.34565, 1.37357, 1.39626, 1.42244, 1.44688, 1.46957, 1.494, 1.4748, 1.45211, 1.43117, 1.40848, 1.38405, 1.35961, 1.32994, 1.30376, 1.27584, 1.34739, 1.41546, 1.37707, 1.33518, 1.29503, 1.2514, 1.21126, 1.16937, 1.12748, 1.28631, 1.44688, 1.60221, 1.75929, 1.91986, 2.07869, 2.23926, 2.2218, 2.20435, 2.18864, 2.17293, 1.85529, 1.54287, 1.49575, 1.44688, 1.39626, 1.34565, 1.34565, 1.37357, 1.39626, 1.42244, 1.44688, 1.46957, 1.494, 1.4748, 1.45211, 1.43117, 1.40848, 1.38405, 1.3439, 1.30027, 1.26013, 1.21475, 1.20777, 1.19555, 1.18682, 1.17635, 1.16762, 1.15541, 1.14668, 1.13796, 1.12748, 1.1205, 1.11178, 1.10305, 1.09432, 1.0856, 1.07687, 1.0664, 1.21999, 1.37357, 1.52193, 1.67377, 1.61967, 1.56556, 1.5132, 1.45735, 1.39975, 1.34565]
}
tracks/73/type = "value"
tracks/73/imported = false
tracks/73/enabled = true
tracks/73/path = NodePath("Body/Zombie_dolphinrider_innerarm_hand:scale")
tracks/73/interp = 1
tracks/73/loop_wrap = true
tracks/73/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.799, 0.799), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.795, 0.795), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.792, 0.792), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.791, 0.791), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.788, 0.788), Vector2(0.787, 0.787), Vector2(0.786, 0.786), Vector2(0.786, 0.786), Vector2(0.785, 0.785), Vector2(0.786, 0.786), Vector2(0.787, 0.787), Vector2(0.788, 0.788), Vector2(0.79, 0.79), Vector2(0.791, 0.791), Vector2(0.793, 0.793), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.797, 0.797), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.793, 0.793), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.79, 0.79), Vector2(0.791, 0.791), Vector2(0.789, 0.789), Vector2(0.789, 0.789), Vector2(0.789, 0.789), Vector2(0.79, 0.79), Vector2(0.787, 0.787), Vector2(0.785, 0.785), Vector2(0.784, 0.784), Vector2(0.781, 0.781), Vector2(0.781, 0.781), Vector2(0.78, 0.78), Vector2(0.781, 0.781), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.781, 0.781), Vector2(0.781, 0.781), Vector2(0.78, 0.78), Vector2(0.781, 0.781), Vector2(0.78, 0.78), Vector2(0.781, 0.781), Vector2(0.78, 0.78), Vector2(0.781, 0.781), Vector2(0.779, 0.779), Vector2(0.78, 0.78), Vector2(0.778, 0.778), Vector2(0.779, 0.779), Vector2(0.778, 0.778), Vector2(0.778, 0.778), Vector2(0.778, 0.778), Vector2(0.778, 0.778), Vector2(0.779, 0.779), Vector2(0.777, 0.777), Vector2(0.775, 0.775), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.771, 0.771), Vector2(0.771, 0.771), Vector2(0.77, 0.77), Vector2(0.771, 0.771), Vector2(0.768, 0.768), Vector2(0.767, 0.767), Vector2(0.768, 0.768), Vector2(0.769, 0.769), Vector2(0.769, 0.769), Vector2(0.768, 0.768), Vector2(0.768, 0.768), Vector2(0.768, 0.768), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.765, 0.765), Vector2(0.764, 0.764), Vector2(0.764, 0.764), Vector2(0.764, 0.764), Vector2(0.763, 0.763), Vector2(0.764, 0.764), Vector2(0.764, 0.764), Vector2(0.764, 0.764), Vector2(0.765, 0.765), Vector2(0.765, 0.765), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.768, 0.768), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.766, 0.766), Vector2(0.765, 0.765), Vector2(0.764, 0.764), Vector2(0.765, 0.765), Vector2(0.763, 0.763), Vector2(0.763, 0.763), Vector2(0.762, 0.762), Vector2(0.763, 0.763), Vector2(0.762, 0.762), Vector2(0.762, 0.762), Vector2(0.764, 0.764), Vector2(0.765, 0.765), Vector2(0.767, 0.767), Vector2(0.769, 0.769), Vector2(0.769, 0.769), Vector2(0.768, 0.768), Vector2(0.768, 0.768), Vector2(0.768, 0.768), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.765, 0.765), Vector2(0.764, 0.764), Vector2(0.763, 0.763), Vector2(0.763, 0.763), Vector2(0.763, 0.763), Vector2(0.763, 0.763), Vector2(0.764, 0.764), Vector2(0.764, 0.764), Vector2(0.765, 0.765), Vector2(0.765, 0.765), Vector2(0.766, 0.766), Vector2(0.767, 0.767), Vector2(0.768, 0.768), Vector2(0.766, 0.766), Vector2(0.765, 0.765), Vector2(0.765, 0.765), Vector2(0.764, 0.764), Vector2(0.763, 0.763), Vector2(0.762, 0.762), Vector2(0.762, 0.762), Vector2(0.762, 0.762), Vector2(0.762, 0.762), Vector2(0.762, 0.762), Vector2(0.762, 0.762), Vector2(0.763, 0.763), Vector2(0.764, 0.764), Vector2(0.765, 0.765), Vector2(0.767, 0.767), Vector2(0.768, 0.768), Vector2(0.769, 0.769)]
}
tracks/74/type = "value"
tracks/74/imported = false
tracks/74/enabled = true
tracks/74/path = NodePath("Body/Zombie_dolphinrider_innerarm_hand:skew")
tracks/74/interp = 1
tracks/74/loop_wrap = true
tracks/74/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, -4e-07, -4e-07, 3e-07, -1e-07, -1e-07, -4e-07, -1e-07, -1e-07, 3e-07, -4e-07, -4e-07, 0.0, 0.0, -3e-07, -2e-07, 5e-07, 2e-07, -4e-07, 2e-07, 1e-07, 0.0, 0.0, -1e-07, -5e-07, 1e-07, -1e-07, 3e-07, 0.0, 1e-07, 3e-07, -2e-07, -4e-07, -3e-07, 4e-07, 4e-07, 4e-07, 0.0, -3e-07, 0.0, 3e-07, -1e-07, -5e-07, 4e-07, -1e-07, 1e-07, 0.0, -4e-07, 0.0, 0.0, -3e-07, -3e-07, -3e-07, -3e-07, -2e-07, 5e-07, 2e-07, -4e-07, 3e-07, 0.0, 4e-07, 1e-07, 3e-07, 1e-07, -4e-07, 0.0, 5e-07, -4e-07, 4e-07, 3e-07, -5e-07, -1e-07, 0.0, 1e-07, -4e-07, -3e-07, 4e-07, -1e-07, -1e-07, -1e-07, -2e-07, 5e-07, 3e-07, 4e-07, 2e-07, -3e-07, -2e-07, -2e-07, 4e-07, 1e-07, 1e-07, -3e-07, 0.0, -4e-07, -1e-07, 2e-07, -5e-07, -2e-07, 1e-07, 3e-07, -2e-07, 0.0, -5e-07, 3e-07, 2e-07, -4e-07, 1e-07, 2e-07, -2e-07, 4e-07, 0.0, 0.0, 4e-07, 1e-07, -2e-07, -5e-07, -1e-07, -5e-07, -2e-07, -2e-07, 0.0, 2e-07, -2e-07, -2e-07, 5e-07, 5e-07, -4e-07, -2e-07, 3e-07, 3e-07, -3e-07, 3e-07, -3e-07, -4e-07, -5e-07, -2e-07, -2e-07, -2e-07, 4e-07, -2e-07, 4e-07, -2e-07, 5e-07, -4e-07, -3e-07, -1e-07, 3e-07, 4e-07, 1e-07, 4e-07, 5e-07, 0.0, -1e-07, -3e-07, -1e-07, -3e-07, 2e-07, 2e-07, 3e-07, -1e-07, -4e-07, 1e-07, 2e-07, 2e-07, -2e-07, -2e-07, 1e-07, 4e-07, 3e-07, -1e-07, 2e-07, -2e-07, 2e-07, -1e-07, 0.0, -3e-07, 1e-07, 5e-07, -1e-07, -1e-07, -3e-07, 2e-07, 0.0, -2e-07, -1e-07, 3e-07, 1e-07, 5e-07, -4e-07, -3e-07, -4e-07, -1e-07, 2e-07, -1e-07, 1e-07, 1e-07, 4e-07, 1e-07, -2e-07, -2e-07, -1e-07, 0.0, 0.0, 1e-07, -1e-07, 4e-07, -2e-07, -2e-07, 1e-07, 4e-07, 3e-07, -1e-07, 2e-07, -2e-07, 2e-07, -1e-07, 0.0, -3e-07, 1e-07, -5e-07, 3e-07, -3e-07, 1e-07, -2e-07, -5e-07, -1e-07, -1e-07, 2e-07, -1e-07, 3e-07, -3e-07, -3e-07, 4e-07, -3e-07, 1e-07, 4e-07, -2e-07, 1e-07, 2e-07, 1e-07, 1e-07, 1e-07, -3e-07, -5e-07, 3e-07, 4e-07, -1e-07, 0.0, -2e-07]
}
tracks/75/type = "value"
tracks/75/imported = false
tracks/75/enabled = true
tracks/75/path = NodePath("Body/Zombie_dolphinrider_innerarm_hand:texture")
tracks/75/interp = 1
tracks/75/loop_wrap = true
tracks/75/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("0_fuck"), ExtResource("0_fuck")]
}
tracks/76/type = "value"
tracks/76/imported = false
tracks/76/enabled = true
tracks/76/path = NodePath("Body/Zombie_dolphinrider_innerarm_hand:self_modulate")
tracks/76/interp = 1
tracks/76/loop_wrap = true
tracks/76/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/77/type = "value"
tracks/77/imported = false
tracks/77/enabled = true
tracks/77/path = NodePath("Body/Zombie_dolphinrider_innerarm_lower:visible")
tracks/77/interp = 1
tracks/77/loop_wrap = true
tracks/77/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [true, true]
}
tracks/78/type = "value"
tracks/78/imported = false
tracks/78/enabled = true
tracks/78/path = NodePath("Body/Zombie_dolphinrider_innerarm_lower:position")
tracks/78/interp = 1
tracks/78/loop_wrap = true
tracks/78/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(23.1, 71.6), Vector2(22.8, 72.2), Vector2(22.4, 72.9), Vector2(22, 73.5), Vector2(21.7, 74.2), Vector2(21.3, 74.8), Vector2(20.9, 75.4), Vector2(20.6, 76.3), Vector2(21, 75.7), Vector2(21.4, 75), Vector2(21.7, 74.3), Vector2(22, 73.7), Vector2(22.4, 73.1), Vector2(22.8, 72.3), Vector2(23.1, 71.6), Vector2(25.2, 69.9), Vector2(25.5, 69.3), Vector2(25.8, 68.7), Vector2(26.1, 68.1), Vector2(26.4, 67.6), Vector2(27.1, 65.9), Vector2(27.7, 64.5), Vector2(28.3, 63), Vector2(28.9, 62.3), Vector2(29.5, 61.8), Vector2(30.1, 61), Vector2(30.7, 60.4), Vector2(27.5, 65), Vector2(24.3, 70), Vector2(21, 75.2), Vector2(17.7, 80.8), Vector2(18.8, 79.7), Vector2(20, 78.7), Vector2(21.1, 77.6), Vector2(22.1, 76.6), Vector2(23.7, 74.8), Vector2(25.4, 73.2), Vector2(27, 71.6), Vector2(28.8, 69.8), Vector2(30.5, 68.1), Vector2(32.4, 66.3), Vector2(34.2, 64.5), Vector2(36, 62.7), Vector2(37.8, 60.9), Vector2(33.5, 65.5), Vector2(29.2, 70.1), Vector2(24.8, 74.8), Vector2(20.3, 79.6), Vector2(21.1, 78), Vector2(21.9, 76.4), Vector2(22.7, 74.8), Vector2(23.5, 73.2), Vector2(24.4, 71.6), Vector2(25.2, 69.9), Vector2(27.5, 71.8), Vector2(27.4, 71.2), Vector2(27.1, 70.4), Vector2(27, 69.6), Vector2(26.8, 68.9), Vector2(26.4, 67.7), Vector2(26, 66.6), Vector2(25.6, 65.5), Vector2(25.3, 64.3), Vector2(26.1, 62.5), Vector2(26.8, 61), Vector2(27.5, 59.5), Vector2(24.7, 64.1), Vector2(21.9, 68.8), Vector2(19.3, 73.5), Vector2(17.9, 78.4), Vector2(18.5, 78.8), Vector2(19.5, 78.7), Vector2(20.8, 78.5), Vector2(22, 78), Vector2(24, 76.3), Vector2(26.1, 74.6), Vector2(28.2, 72.9), Vector2(30.3, 71.2), Vector2(32.3, 69.5), Vector2(34.4, 68.7), Vector2(36.4, 67.8), Vector2(38.3, 66.8), Vector2(40.2, 65.9), Vector2(35.7, 69.8), Vector2(31.1, 73.6), Vector2(26.5, 77.6), Vector2(21, 81.5), Vector2(21.1, 81), Vector2(22.4, 79.2), Vector2(23.6, 77.3), Vector2(24.8, 75.5), Vector2(26.1, 73.7), Vector2(27.5, 71.8), Vector2(23.1, 71.6), Vector2(23.1, 72.8), Vector2(23, 73.8), Vector2(23, 75), Vector2(23, 76.2), Vector2(23.1, 77.2), Vector2(23, 78.3), Vector2(26.4, 75.6), Vector2(30, 73.2), Vector2(33.6, 71.4), Vector2(35.9, 70.3), Vector2(37.9, 69.5), Vector2(41.4, 66.2), Vector2(43.3, 63.5), Vector2(41, 64.5), Vector2(37.6, 65.7), Vector2(33.5, 66), Vector2(28.4, 67.7), Vector2(23.1, 71.6), Vector2(26.6, 66.2), Vector2(30.1, 60.7), Vector2(33.7, 55.4), Vector2(26.6, 47.6), Vector2(19.8, 40.1), Vector2(13.1, 32.8), Vector2(9.2, 18.1), Vector2(5.6, 3.5), Vector2(2.4, -10.6), Vector2(0.8, -12.7), Vector2(-0.7, -15), Vector2(-2.2, -14.5), Vector2(-3.5, -14), Vector2(-5, -13.6), Vector2(-6.5, -13.2), Vector2(-14.6, 14), Vector2(-22.1, 41), Vector2(-29.1, 68.1), Vector2(-37.2, 81.1), Vector2(-35.8, 97.8), Vector2(-37.4, 98), Vector2(-39, 98), Vector2(-36.8, 96.3), Vector2(-34.7, 94.8), Vector2(-32.8, 93.4), Vector2(-30.7, 92.2), Vector2(-30.7, 92.2), Vector2(-29.2, 91.6), Vector2(-27.6, 91), Vector2(-29.1, 91.6), Vector2(-30.7, 92.2), Vector2(-30.8, 93.3), Vector2(-30.9, 94.5), Vector2(-38.8, 64.2), Vector2(-46.7, 33.8), Vector2(-62, 11.5), Vector2(-77.3, -10.5), Vector2(-85.6, -7.1), Vector2(-93.9, -3.2), Vector2(-102.1, 0.6), Vector2(-115.9, 29.5), Vector2(-129.7, 58.9), Vector2(-131, 64.5), Vector2(-131.6, 70.7), Vector2(-131.4, 77.3), Vector2(-130.4, 84.3), Vector2(-127, 94.8), Vector2(-122.7, 105.7), Vector2(-122.5, 109.8), Vector2(-122.2, 113.8), Vector2(-128.3, 109.5), Vector2(-123.5, 122.8), Vector2(-130.4, 124.6), Vector2(-137.5, 126.4), Vector2(36.3, 66.6), Vector2(36.9, 66.1), Vector2(37.6, 65.5), Vector2(38.2, 64.9), Vector2(38.9, 64.3), Vector2(39.5, 63.6), Vector2(40.2, 63.1), Vector2(41.4, 62.5), Vector2(42.5, 62), Vector2(43.5, 61.4), Vector2(44.5, 60.8), Vector2(45.5, 60.1), Vector2(44.7, 59.8), Vector2(43.9, 59.4), Vector2(43.1, 59), Vector2(42.2, 58.6), Vector2(41.6, 58.7), Vector2(41.1, 58.6), Vector2(40.6, 59.7), Vector2(40.1, 60.6), Vector2(39.6, 61.8), Vector2(39.1, 62.9), Vector2(38.5, 64), Vector2(38, 65.1), Vector2(37.5, 66.2), Vector2(37.4, 65.7), Vector2(36.9, 65.1), Vector2(36.4, 64.8), Vector2(35.7, 64.3), Vector2(34.8, 63.9), Vector2(33.8, 63.6), Vector2(32.5, 63.2), Vector2(30.8, 65.8), Vector2(28.9, 68.3), Vector2(27.1, 71), Vector2(25.4, 73.6), Vector2(26.8, 73.2), Vector2(28.2, 72.8), Vector2(31.3, 71), Vector2(33.8, 69.2), Vector2(35.4, 67.7), Vector2(36.3, 66.6), Vector2(36.3, 66.6), Vector2(36.9, 66.1), Vector2(37.6, 65.5), Vector2(38.2, 64.9), Vector2(38.9, 64.3), Vector2(39.5, 63.6), Vector2(40.2, 63.1), Vector2(41.4, 62.5), Vector2(42.5, 62), Vector2(43.5, 61.4), Vector2(44.5, 60.8), Vector2(45.5, 60.1), Vector2(44.9, 60.3), Vector2(44.1, 60.5), Vector2(43.5, 60.8), Vector2(42.7, 61), Vector2(42.1, 61.6), Vector2(41.6, 62.2), Vector2(41, 62.6), Vector2(40.5, 63.2), Vector2(40, 63.8), Vector2(39.3, 64.4), Vector2(38.7, 65), Vector2(38, 65.7), Vector2(37.5, 66.2), Vector2(37.1, 65.7), Vector2(36.8, 65.2), Vector2(36.3, 64.6), Vector2(35.9, 64.1), Vector2(35.5, 63.6), Vector2(35, 63), Vector2(34.6, 62.5), Vector2(32, 65.2), Vector2(29.2, 68), Vector2(26.5, 70.7), Vector2(23.8, 73.3), Vector2(26.1, 72), Vector2(28.2, 70.8), Vector2(30.3, 69.7), Vector2(32.3, 68.5), Vector2(34.3, 67.5), Vector2(36.3, 66.6)]
}
tracks/79/type = "value"
tracks/79/imported = false
tracks/79/enabled = true
tracks/79/path = NodePath("Body/Zombie_dolphinrider_innerarm_lower:rotation")
tracks/79/interp = 1
tracks/79/loop_wrap = true
tracks/79/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.003491, -0.012217, -0.020944, -0.029671, -0.038397, -0.047124, -0.059341, -0.047124, -0.038397, -0.029671, -0.020944, -0.012217, -0.003491, 0.0, 0.164061, 0.191986, 0.223402, 0.249582, 0.282743, 0.366519, 0.450295, 0.537561, 0.586431, 0.633555, 0.682424, 0.729548, 0.560251, 0.394444, 0.226893, 0.059341, 0.061087, 0.061087, 0.062832, 0.066323, 0.048869, 0.031416, 0.013963, 0.0, -0.017453, -0.041888, -0.068068, -0.094248, -0.122173, -0.07854, -0.038397, 0.0, 0.043633, 0.061087, 0.083776, 0.101229, 0.122173, 0.141372, 0.164061, 0.02618, 0.022689, 0.022689, 0.017453, 0.019199, 0.017453, 0.022689, 0.022689, 0.02618, 0.162316, 0.298451, 0.436332, 0.427606, 0.418879, 0.410152, 0.307178, 0.148353, -0.005236, 0.0, 0.010472, -0.015708, -0.041888, -0.068068, -0.094248, -0.123918, -0.137881, -0.155334, -0.169297, -0.18675, -0.21293, -0.23911, -0.270526, -0.221657, -0.027925, -0.015708, -0.003491, 0.001745, 0.013963, 0.02618, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001745, 0.005236, 0.205949, 0.410152, 0.614356, 0.82205, 1.03323, 1.3439, 1.64934, 1.43117, 1.20777, 0.804597, 0.401426, 0.0, -0.033161, -0.069813, -0.109956, -0.279253, -0.45204, -0.624828, -0.825541, -1.02625, -1.22871, -1.30725, -1.38579, -1.38056, -1.37707, -1.37183, -1.36834, -1.59523, -1.82212, -2.05076, -1.05767, -0.059341, -0.059341, -0.059341, 0.061087, 0.188496, 0.314159, 0.441568, 0.441568, 0.511381, 0.581195, 0.511381, 0.441568, 0.411898, 0.387463, 0.459022, 0.537561, 0.499164, 0.460767, 0.315905, 0.171042, 0.031416, -0.038397, -0.109956, -0.37001, -0.628319, -0.890118, -1.15017, -0.834267, -0.520108, -0.527089, -0.537561, -0.15708, 1.16413, 1.20253, 1.24093, 1.24093, 1.24267, 1.24267, 1.24267, 1.24267, 1.24617, 1.24442, 1.22522, 1.20253, 1.18159, 1.1589, 1.13621, 1.10828, 1.08036, 1.05418, 1.02625, 1.028, 1.02625, 1.07687, 1.12923, 1.17635, 1.22871, 1.27758, 1.32994, 1.37707, 1.49575, 1.61094, 1.72788, 1.84656, 1.9635, 2.08218, 2.19911, 2.18341, 2.16595, 2.1485, 2.13454, 2.16944, 2.20435, 1.9635, 1.7209, 1.48353, 1.24093, 1.24093, 1.24267, 1.24267, 1.24267, 1.24267, 1.24617, 1.24442, 1.22522, 1.20253, 1.18159, 1.1589, 1.13621, 1.09432, 1.05069, 1.01055, 0.965167, 1.01055, 1.05942, 1.10305, 1.15017, 1.19555, 1.24267, 1.28631, 1.33343, 1.37707, 1.39626, 1.41372, 1.42942, 1.44688, 1.46084, 1.47829, 1.49575, 1.53065, 1.56556, 1.59698, 1.63537, 1.5708, 1.50447, 1.4399, 1.37357, 1.309, 1.24093]
}
tracks/80/type = "value"
tracks/80/imported = false
tracks/80/enabled = true
tracks/80/path = NodePath("Body/Zombie_dolphinrider_innerarm_lower:scale")
tracks/80/interp = 1
tracks/80/loop_wrap = true
tracks/80/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.798, 0.874), Vector2(0.798, 0.874), Vector2(0.799, 0.874), Vector2(0.797, 0.873), Vector2(0.797, 0.873), Vector2(0.797, 0.873), Vector2(0.798, 0.874), Vector2(0.796, 0.872), Vector2(0.796, 0.872), Vector2(0.796, 0.872), Vector2(0.796, 0.872), Vector2(0.797, 0.873), Vector2(0.797, 0.873), Vector2(0.798, 0.874), Vector2(0.799, 0.875), Vector2(0.798, 0.874), Vector2(0.798, 0.874), Vector2(0.798, 0.874), Vector2(0.798, 0.874), Vector2(0.798, 0.874), Vector2(0.798, 0.873), Vector2(0.797, 0.873), Vector2(0.797, 0.873), Vector2(0.797, 0.873), Vector2(0.797, 0.872), Vector2(0.796, 0.872), Vector2(0.796, 0.872), Vector2(0.795, 0.871), Vector2(0.796, 0.872), Vector2(0.797, 0.872), Vector2(0.797, 0.873), Vector2(0.798, 0.874), Vector2(0.799, 0.874), Vector2(0.8, 0.876), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.798, 0.874), Vector2(0.797, 0.873), Vector2(0.797, 0.873), Vector2(0.796, 0.872), Vector2(0.796, 0.871), Vector2(0.795, 0.871), Vector2(0.796, 0.871), Vector2(0.794, 0.869), Vector2(0.793, 0.869), Vector2(0.794, 0.869), Vector2(0.793, 0.869), Vector2(0.794, 0.869), Vector2(0.795, 0.87), Vector2(0.795, 0.87), Vector2(0.795, 0.87), Vector2(0.794, 0.87), Vector2(0.794, 0.869), Vector2(0.794, 0.869), Vector2(0.793, 0.869), Vector2(0.793, 0.869), Vector2(0.792, 0.867), Vector2(0.791, 0.866), Vector2(0.79, 0.865), Vector2(0.79, 0.865), Vector2(0.789, 0.881), Vector2(0.79, 0.898), Vector2(0.791, 0.916), Vector2(0.791, 0.891), Vector2(0.792, 0.868), Vector2(0.794, 0.869), Vector2(0.795, 0.871), Vector2(0.796, 0.872), Vector2(0.798, 0.874), Vector2(0.799, 0.875), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.798, 0.874), Vector2(0.797, 0.872), Vector2(0.797, 0.873), Vector2(0.795, 0.871), Vector2(0.796, 0.872), Vector2(0.799, 0.87), Vector2(0.804, 0.87), Vector2(0.799, 0.87), Vector2(0.795, 0.871), Vector2(0.795, 0.871), Vector2(0.797, 0.873), Vector2(0.8, 0.876), Vector2(0.803, 0.875), Vector2(0.806, 0.875), Vector2(0.809, 0.874), Vector2(0.807, 0.872), Vector2(0.806, 0.871), Vector2(0.806, 0.87), Vector2(0.803, 0.868), Vector2(0.802, 0.867), Vector2(0.802, 0.867), Vector2(0.801, 0.865), Vector2(0.802, 0.866), Vector2(0.801, 0.865), Vector2(0.801, 0.865), Vector2(0.8, 0.864), Vector2(0.8, 0.865), Vector2(0.799, 0.863), Vector2(0.797, 0.861), Vector2(0.796, 0.86), Vector2(0.793, 0.857), Vector2(0.793, 0.857), Vector2(0.793, 0.856), Vector2(0.793, 0.857), Vector2(0.792, 0.855), Vector2(0.791, 0.854), Vector2(0.79, 0.854), Vector2(0.791, 0.854), Vector2(0.791, 0.854), Vector2(0.789, 0.852), Vector2(0.79, 0.853), Vector2(0.789, 0.852), Vector2(0.791, 0.854), Vector2(0.789, 0.853), Vector2(0.79, 0.854), Vector2(0.789, 0.852), Vector2(0.789, 0.853), Vector2(0.788, 0.851), Vector2(0.789, 0.852), Vector2(0.787, 0.861), Vector2(0.787, 0.871), Vector2(0.787, 0.882), Vector2(0.788, 0.914), Vector2(0.788, 0.946), Vector2(0.786, 0.943), Vector2(0.784, 0.942), Vector2(0.783, 0.94), Vector2(0.783, 0.94), Vector2(0.78, 0.937), Vector2(0.78, 0.937), Vector2(0.779, 0.935), Vector2(0.78, 0.937), Vector2(0.778, 0.934), Vector2(0.777, 0.934), Vector2(0.777, 0.933), Vector2(0.779, 0.935), Vector2(0.779, 0.935), Vector2(0.778, 0.934), Vector2(0.778, 0.933), Vector2(0.777, 0.933), Vector2(0.777, 0.933), Vector2(0.777, 0.932), Vector2(0.777, 0.933), Vector2(0.776, 0.932), Vector2(0.776, 0.931), Vector2(0.776, 0.931), Vector2(0.775, 0.931), Vector2(0.776, 0.932), Vector2(0.774, 0.93), Vector2(0.774, 0.929), Vector2(0.773, 0.929), Vector2(0.774, 0.929), Vector2(0.773, 0.928), Vector2(0.774, 0.929), Vector2(0.774, 0.929), Vector2(0.774, 0.93), Vector2(0.775, 0.93), Vector2(0.776, 0.931), Vector2(0.777, 0.932), Vector2(0.777, 0.933), Vector2(0.779, 0.935), Vector2(0.778, 0.934), Vector2(0.778, 0.934), Vector2(0.777, 0.934), Vector2(0.777, 0.933), Vector2(0.776, 0.932), Vector2(0.776, 0.932), Vector2(0.776, 0.932), Vector2(0.775, 0.931), Vector2(0.774, 0.93), Vector2(0.774, 0.929), Vector2(0.774, 0.93), Vector2(0.773, 0.929), Vector2(0.774, 0.93), Vector2(0.774, 0.93), Vector2(0.776, 0.933), Vector2(0.778, 0.933), Vector2(0.779, 0.935), Vector2(0.779, 0.935), Vector2(0.778, 0.934), Vector2(0.778, 0.933), Vector2(0.777, 0.933), Vector2(0.777, 0.933), Vector2(0.777, 0.932), Vector2(0.777, 0.933), Vector2(0.776, 0.932), Vector2(0.776, 0.931), Vector2(0.776, 0.931), Vector2(0.775, 0.931), Vector2(0.776, 0.932), Vector2(0.774, 0.929), Vector2(0.773, 0.929), Vector2(0.773, 0.928), Vector2(0.773, 0.928), Vector2(0.773, 0.928), Vector2(0.773, 0.928), Vector2(0.774, 0.929), Vector2(0.775, 0.93), Vector2(0.775, 0.931), Vector2(0.776, 0.932), Vector2(0.777, 0.932), Vector2(0.778, 0.933), Vector2(0.779, 0.935), Vector2(0.778, 0.933), Vector2(0.777, 0.933), Vector2(0.777, 0.932), Vector2(0.776, 0.932), Vector2(0.776, 0.931), Vector2(0.775, 0.93), Vector2(0.775, 0.93), Vector2(0.774, 0.929), Vector2(0.774, 0.929), Vector2(0.774, 0.929), Vector2(0.773, 0.928), Vector2(0.774, 0.929), Vector2(0.775, 0.93), Vector2(0.776, 0.931), Vector2(0.777, 0.932), Vector2(0.777, 0.933), Vector2(0.779, 0.935)]
}
tracks/81/type = "value"
tracks/81/imported = false
tracks/81/enabled = true
tracks/81/path = NodePath("Body/Zombie_dolphinrider_innerarm_lower:skew")
tracks/81/interp = 1
tracks/81/loop_wrap = true
tracks/81/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 3e-07, -3e-07, 0.0, 4e-07, -2e-07, 1e-07, -2e-07, 1e-07, -2e-07, 4e-07, 0.0, -3e-07, 3e-07, 0.0, -1e-07, 2e-07, 1e-07, 1e-07, 3e-07, 1e-07, -1e-07, 4e-07, -4e-07, -5e-07, -3e-07, -4e-07, -3e-07, 4e-07, -2e-07, 2e-07, -5e-07, -5e-07, -1e-07, -5e-07, 2e-07, -1e-07, -4e-07, 0.0, -3e-07, 1e-07, 2e-07, 2e-07, 0.0, 2e-07, -2e-07, 0.0, 2e-07, -5e-07, -2e-07, 1e-07, 0.0, -3e-07, -1e-07, -1e-07, 3e-07, 3e-07, 3e-07, -4e-07, 3e-07, 3e-07, 3e-07, -1e-07, -4e-07, 3e-07, 3e-07, -3e-07, 0.0, 4e-07, -1e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 1e-07, 2e-07, 2e-07, -4e-07, 0.0, -3e-07, 1e-07, -2e-07, -2e-07, -1e-07, 0.0, 2e-07, -3e-07, 0.0, 3e-07, 3e-07, -4e-07, -1e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 3e-07, 0.0, -2e-07, 4e-07, -1e-07, 1e-07, -1e-07, 0.0785393, 0.158825, 0.0785398, -2e-07, -2e-07, -3e-07, 0.0, 0.0506143, 0.10472, 0.162316, 0.162316, 0.164061, 0.164061, 0.162316, 0.162316, 0.164061, 0.162316, 0.164061, 0.162315, 0.162316, 0.162316, 0.164061, 0.162316, 0.165807, 0.164061, 0.165807, 0.16057, 0.16057, 0.16057, 0.165806, 0.165806, 0.162316, 0.164061, 0.164061, 0.162316, 0.164061, 0.162316, 0.164061, 0.165806, 0.164061, 0.165806, 0.162316, 0.162316, 0.164061, 0.129154, 0.0925027, 0.0558505, -0.0523601, -0.16057, -0.162315, -0.162315, -0.162316, -0.162316, -0.162316, -0.162316, -0.162316, -0.162316, -0.16057, -0.162316, -0.160571, -0.162316, -0.162316, -0.162315, -0.162315, -0.162315, -0.162315, -0.164061, -0.162316, -0.162316, -0.162316, -0.162316, -0.162316, -0.162315, -0.162316, -0.160571, -0.162316, -0.162316, -0.162316, -0.162316, -0.162316, -0.165806, -0.16057, -0.164061, -0.162316, -0.165806, -0.162316, -0.162316, -0.158825, -0.158825, -0.162315, -0.16057, -0.165807, -0.162316, -0.162316, -0.162316, -0.162315, -0.162316, -0.162315, -0.162316, -0.164061, -0.158825, -0.162316, -0.162316, -0.162316, -0.162315, -0.162315, -0.162315, -0.162315, -0.164061, -0.162316, -0.162316, -0.162316, -0.162316, -0.162316, -0.162315, -0.162315, -0.162315, -0.165807, -0.16057, -0.162316, -0.162316, -0.162316, -0.162316, -0.162316, -0.165806, -0.162316, -0.164061, -0.162316, -0.162315, -0.162316, -0.164061, -0.164061, -0.160571, -0.16057, -0.162316, -0.160571, -0.16057, -0.157079, -0.162315, -0.162315, -0.160571, -0.162316, -0.162316, -0.162316, -0.162316]
}
tracks/82/type = "value"
tracks/82/imported = false
tracks/82/enabled = true
tracks/82/path = NodePath("Body/Zombie_dolphinrider_innerarm_lower:texture")
tracks/82/interp = 1
tracks/82/loop_wrap = true
tracks/82/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("1_fuck"), ExtResource("1_fuck")]
}
tracks/83/type = "value"
tracks/83/imported = false
tracks/83/enabled = true
tracks/83/path = NodePath("Body/Zombie_dolphinrider_innerarm_lower:self_modulate")
tracks/83/interp = 1
tracks/83/loop_wrap = true
tracks/83/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/84/type = "value"
tracks/84/imported = false
tracks/84/enabled = true
tracks/84/path = NodePath("Body/Zombie_dolphinrider_innerarm_upper:visible")
tracks/84/interp = 1
tracks/84/loop_wrap = true
tracks/84/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [true, true]
}
tracks/85/type = "value"
tracks/85/imported = false
tracks/85/enabled = true
tracks/85/path = NodePath("Body/Zombie_dolphinrider_innerarm_upper:position")
tracks/85/interp = 1
tracks/85/loop_wrap = true
tracks/85/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(22.6, 57), Vector2(22.1, 57.7), Vector2(21.6, 58.4), Vector2(21.2, 59), Vector2(20.6, 59.7), Vector2(20.2, 60.4), Vector2(19.7, 61), Vector2(19.2, 61.7), Vector2(19.8, 61), Vector2(20.2, 60.4), Vector2(20.7, 59.7), Vector2(21.2, 59), Vector2(21.8, 58.3), Vector2(22.2, 57.7), Vector2(22.6, 57), Vector2(24.3, 56.1), Vector2(24.8, 55.5), Vector2(25.3, 54.8), Vector2(25.8, 54.1), Vector2(26.3, 53.5), Vector2(27.4, 52.1), Vector2(28.4, 50.8), Vector2(29.5, 49.5), Vector2(30.3, 48.9), Vector2(31.1, 48.3), Vector2(31.9, 47.8), Vector2(32.6, 47.3), Vector2(28.3, 52.1), Vector2(24, 57), Vector2(19.6, 62), Vector2(15.3, 67.2), Vector2(16.4, 66.1), Vector2(17.5, 65), Vector2(18.6, 63.9), Vector2(19.7, 62.6), Vector2(20.7, 61.1), Vector2(21.8, 59.6), Vector2(22.9, 58.3), Vector2(23.9, 56.8), Vector2(24.8, 55.6), Vector2(25.8, 54), Vector2(26.7, 52.5), Vector2(27.7, 50.9), Vector2(28.8, 49.3), Vector2(26, 53.2), Vector2(23.3, 57.3), Vector2(20.7, 61.3), Vector2(17.9, 65.5), Vector2(19.1, 63.9), Vector2(20, 62.3), Vector2(21.2, 60.8), Vector2(22.2, 59.3), Vector2(23.2, 57.6), Vector2(24.3, 56.1), Vector2(24.8, 58.3), Vector2(25.1, 57.4), Vector2(25.4, 56.6), Vector2(25.7, 55.9), Vector2(25.9, 55), Vector2(26.7, 53.5), Vector2(27.5, 52), Vector2(28.3, 50.6), Vector2(29.2, 49.3), Vector2(30.4, 48.3), Vector2(31.6, 47.1), Vector2(32.6, 46.1), Vector2(28.7, 50.5), Vector2(24.8, 54.9), Vector2(20.9, 59.3), Vector2(19.1, 64.4), Vector2(18.4, 65), Vector2(18.3, 64), Vector2(19.1, 63.8), Vector2(20.1, 63.6), Vector2(21.3, 62.3), Vector2(22.4, 61), Vector2(23.6, 59.7), Vector2(24.7, 58.5), Vector2(26.1, 57.4), Vector2(27.8, 56.3), Vector2(29.6, 55.2), Vector2(31.2, 54), Vector2(32.9, 52.9), Vector2(29.8, 56.3), Vector2(26.8, 59.6), Vector2(23.9, 63.1), Vector2(18, 67.5), Vector2(19.4, 67.1), Vector2(20.5, 65.3), Vector2(21.5, 63.6), Vector2(22.6, 61.8), Vector2(23.7, 60), Vector2(24.8, 58.3), Vector2(22.6, 57), Vector2(21.5, 58.4), Vector2(20.4, 59.9), Vector2(19.4, 61.5), Vector2(18.3, 63), Vector2(17.3, 64.6), Vector2(16.3, 66.3), Vector2(21.3, 63.4), Vector2(26.7, 60.6), Vector2(31.9, 58.1), Vector2(36.8, 57.2), Vector2(41.8, 56.6), Vector2(47.8, 54.5), Vector2(53.9, 52.9), Vector2(48.6, 53.1), Vector2(43.3, 53.9), Vector2(36.3, 54.4), Vector2(29.3, 55.5), Vector2(22.6, 57), Vector2(19.1, 60.3), Vector2(19.3, 66.3), Vector2(24.5, 71.9), Vector2(14.5, 56.6), Vector2(6.1, 40.8), Vector2(-0.5, 24.7), Vector2(-4.7, 16.7), Vector2(-7.4, 8.5), Vector2(-8.7, 0), Vector2(-9.5, -1.4), Vector2(-10.2, -2.8), Vector2(-10.8, -1.5), Vector2(-11.5, -0.3), Vector2(-11.9, 0.7), Vector2(-12.5, 1.9), Vector2(-18.5, 29.3), Vector2(-24.5, 56.6), Vector2(-30.6, 83.5), Vector2(-44.8, 88.7), Vector2(-47.5, 88), Vector2(-46.2, 86.5), Vector2(-45, 85.1), Vector2(-44.4, 84.5), Vector2(-43.8, 84), Vector2(-43.3, 83.3), Vector2(-42.7, 82.8), Vector2(-42.7, 82.8), Vector2(-42.4, 83.2), Vector2(-42.1, 83.7), Vector2(-42.3, 83.3), Vector2(-42.7, 82.8), Vector2(-43, 84.3), Vector2(-43.4, 85.8), Vector2(-51.1, 56.3), Vector2(-58.9, 26.8), Vector2(-73.9, 3.1), Vector2(-89.1, -20.1), Vector2(-97.8, -15.7), Vector2(-106.5, -11.4), Vector2(-115.3, -6.8), Vector2(-127.1, 18.9), Vector2(-138.8, 44.5), Vector2(-142.3, 56.9), Vector2(-144.2, 69.8), Vector2(-144.3, 82.8), Vector2(-142.5, 95.1), Vector2(-139.4, 105.1), Vector2(-136.1, 115), Vector2(-136, 119), Vector2(-135.9, 123), Vector2(-141.7, 120.8), Vector2(-146.2, 118.3), Vector2(-149.3, 116), Vector2(-151, 114.3), Vector2(22.7, 54.5), Vector2(23.4, 53.8), Vector2(24.1, 53), Vector2(24.8, 52.4), Vector2(25.5, 51.5), Vector2(26.1, 50.9), Vector2(26.7, 50.1), Vector2(27.9, 49.6), Vector2(29, 49.2), Vector2(30.1, 48.8), Vector2(31.3, 48.4), Vector2(32.4, 48), Vector2(30.8, 48.1), Vector2(29.2, 48.5), Vector2(27.8, 48.9), Vector2(26.4, 49.4), Vector2(25.4, 49.5), Vector2(24.4, 49.4), Vector2(24.1, 50.1), Vector2(23.8, 50.8), Vector2(23.6, 51.5), Vector2(23.3, 52.1), Vector2(23.1, 52.9), Vector2(22.9, 53.6), Vector2(22.7, 54.5), Vector2(24.2, 52.7), Vector2(25.7, 51.1), Vector2(27.3, 49.8), Vector2(29, 48.6), Vector2(30.8, 47.8), Vector2(32.5, 47.1), Vector2(34.4, 46.7), Vector2(30.6, 48.9), Vector2(26.8, 51), Vector2(23, 53.2), Vector2(19.3, 55.5), Vector2(19.1, 55.8), Vector2(19, 55.9), Vector2(19.9, 55.4), Vector2(20.8, 54.9), Vector2(21.8, 54.6), Vector2(22.7, 54.5), Vector2(22.7, 54.5), Vector2(23.4, 53.8), Vector2(24.1, 53), Vector2(24.8, 52.4), Vector2(25.5, 51.5), Vector2(26.1, 50.9), Vector2(26.7, 50.1), Vector2(27.9, 49.6), Vector2(29, 49.2), Vector2(30.1, 48.8), Vector2(31.3, 48.4), Vector2(32.4, 48), Vector2(30.1, 49.1), Vector2(27.9, 50.6), Vector2(26.2, 52.1), Vector2(24.6, 54), Vector2(24.3, 54), Vector2(23.8, 53.9), Vector2(23.5, 54), Vector2(23.3, 54), Vector2(23.1, 54), Vector2(22.9, 54.1), Vector2(22.8, 54.3), Vector2(22.7, 54.4), Vector2(22.7, 54.5), Vector2(23.9, 53), Vector2(25.1, 51.7), Vector2(26.5, 50.4), Vector2(27.7, 49.3), Vector2(29.1, 48.1), Vector2(30.4, 47.2), Vector2(32, 46.4), Vector2(28.8, 48.6), Vector2(25.6, 51.1), Vector2(22.5, 53.4), Vector2(19.3, 55.5), Vector2(19.7, 55), Vector2(20.3, 54.8), Vector2(20.9, 54.5), Vector2(21.5, 54.4), Vector2(22.1, 54.3), Vector2(22.7, 54.5)]
}
tracks/86/type = "value"
tracks/86/imported = false
tracks/86/enabled = true
tracks/86/path = NodePath("Body/Zombie_dolphinrider_innerarm_upper:rotation")
tracks/86/interp = 1
tracks/86/loop_wrap = true
tracks/86/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.003491, -0.012217, -0.020944, -0.029671, -0.038397, -0.047124, -0.059341, -0.047124, -0.038397, -0.029671, -0.020944, -0.012217, -0.003491, 0.0, 0.034907, 0.048869, 0.066323, 0.083776, 0.102974, 0.144862, 0.188496, 0.233874, 0.258309, 0.279253, 0.301942, 0.326377, 0.226893, 0.127409, 0.02618, -0.069813, -0.068068, -0.068068, -0.068068, -0.071558, -0.116937, -0.16057, -0.207694, -0.251327, -0.298451, -0.34383, -0.392699, -0.443314, -0.492183, -0.387463, -0.286234, -0.18326, -0.083776, -0.061087, -0.041888, -0.020944, -0.003491, 0.013963, 0.034907, -0.099484, -0.073304, -0.050615, -0.029671, -0.006981, 0.061087, 0.1309, 0.200713, 0.272271, 0.324631, 0.380482, 0.436332, 0.363028, 0.293215, 0.221657, 0.179769, 0.08203, -0.013963, -0.038397, -0.062832, -0.122173, -0.18675, -0.247837, -0.308923, -0.3735, -0.378736, -0.387463, -0.39619, -0.404916, -0.305433, -0.207694, -0.111701, -0.155334, -0.057596, -0.064577, -0.073304, -0.08203, -0.090757, -0.099484, 0.0, -0.064577, -0.129154, -0.195477, -0.260054, -0.326377, -0.392699, -0.230383, -0.073304, 0.08203, 0.293215, 0.502655, 0.752237, 1.00531, 0.836013, 0.670206, 0.446804, 0.223402, 0.0, -0.549779, -1.10479, -1.65632, -1.26711, -0.872665, -0.479966, -0.855211, -1.22871, -1.60221, -1.67901, -1.76104, -1.81514, -1.87099, -1.93208, -1.98793, -2.11534, -2.24275, -2.36841, -1.2706, -0.167552, -0.169297, -0.169297, -0.221657, -0.277507, -0.331613, -0.387463, -0.387463, -0.42586, -0.464258, -0.42586, -0.387463, -0.413643, -0.441568, -0.417134, -0.392699, -0.378736, -0.368264, -0.445059, -0.520108, -0.598648, -0.47822, -0.357792, -0.750492, -1.14843, -1.54287, -1.93382, -1.80642, -1.68424, -1.6825, -1.68424, -1.33692, -0.991347, -0.645772, -0.300197, -0.300197, -0.287979, -0.274017, -0.26529, -0.253073, -0.23911, -0.230383, -0.221657, -0.21293, -0.204204, -0.198968, -0.191986, -0.312414, -0.436332, -0.558505, -0.682424, -0.680678, -0.682424, -0.628319, -0.570723, -0.518363, -0.462512, -0.408407, -0.352557, -0.300197, -0.15708, -0.015708, 0.118682, 0.261799, 0.403171, 0.546288, 0.68766, 0.589921, 0.493928, 0.397935, 0.301942, 0.219911, 0.141372, 0.027925, -0.076794, -0.18675, -0.300197, -0.300197, -0.287979, -0.274017, -0.26529, -0.253073, -0.23911, -0.230383, -0.221657, -0.21293, -0.204204, -0.198968, -0.191986, -0.361283, -0.535816, -0.710349, -0.883137, -0.816814, -0.753982, -0.689405, -0.623083, -0.558505, -0.492183, -0.427606, -0.364774, -0.300197, -0.204204, -0.10821, -0.012217, 0.07854, 0.174533, 0.270526, 0.368264, 0.350811, 0.333358, 0.319395, 0.301942, 0.200713, 0.101229, 0.0, -0.099484, -0.198968, -0.300197]
}
tracks/87/type = "value"
tracks/87/imported = false
tracks/87/enabled = true
tracks/87/path = NodePath("Body/Zombie_dolphinrider_innerarm_upper:scale")
tracks/87/interp = 1
tracks/87/loop_wrap = true
tracks/87/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.799, 0.874), Vector2(0.798, 0.874), Vector2(0.799, 0.875), Vector2(0.798, 0.874), Vector2(0.798, 0.874), Vector2(0.798, 0.874), Vector2(0.798, 0.874), Vector2(0.798, 0.874), Vector2(0.798, 0.874), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.798, 0.874), Vector2(0.798, 0.874), Vector2(0.798, 0.874), Vector2(0.799, 0.875), Vector2(0.798, 0.874), Vector2(0.797, 0.873), Vector2(0.797, 0.873), Vector2(0.798, 0.874), Vector2(0.797, 0.873), Vector2(0.797, 0.873), Vector2(0.797, 0.873), Vector2(0.797, 0.873), Vector2(0.797, 0.873), Vector2(0.798, 0.874), Vector2(0.798, 0.874), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.8, 0.876), Vector2(0.799, 0.876), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.798, 0.874), Vector2(0.797, 0.873), Vector2(0.798, 0.873), Vector2(0.797, 0.873), Vector2(0.797, 0.872), Vector2(0.797, 0.873), Vector2(0.796, 0.872), Vector2(0.795, 0.871), Vector2(0.796, 0.871), Vector2(0.795, 0.871), Vector2(0.796, 0.872), Vector2(0.797, 0.873), Vector2(0.797, 0.872), Vector2(0.797, 0.872), Vector2(0.796, 0.872), Vector2(0.796, 0.872), Vector2(0.796, 0.871), Vector2(0.795, 0.871), Vector2(0.796, 0.872), Vector2(0.794, 0.869), Vector2(0.793, 0.868), Vector2(0.792, 0.867), Vector2(0.792, 0.867), Vector2(0.791, 0.867), Vector2(0.792, 0.867), Vector2(0.793, 0.868), Vector2(0.793, 0.868), Vector2(0.794, 0.869), Vector2(0.795, 0.87), Vector2(0.796, 0.872), Vector2(0.797, 0.873), Vector2(0.798, 0.874), Vector2(0.799, 0.876), Vector2(0.8, 0.876), Vector2(0.8, 0.876), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.799, 0.875), Vector2(0.798, 0.874), Vector2(0.799, 0.875), Vector2(0.798, 0.874), Vector2(0.798, 0.874), Vector2(0.798, 0.874), Vector2(0.796, 0.872), Vector2(0.797, 0.873), Vector2(0.795, 0.919), Vector2(0.796, 0.969), Vector2(0.794, 0.919), Vector2(0.796, 0.871), Vector2(0.796, 0.872), Vector2(0.798, 0.874), Vector2(0.8, 0.876), Vector2(0.824, 0.874), Vector2(0.85, 0.874), Vector2(0.876, 0.874), Vector2(0.874, 0.873), Vector2(0.873, 0.872), Vector2(0.873, 0.872), Vector2(0.871, 0.87), Vector2(0.871, 0.87), Vector2(0.871, 0.869), Vector2(0.87, 0.868), Vector2(0.87, 0.869), Vector2(0.87, 0.867), Vector2(0.869, 0.867), Vector2(0.869, 0.867), Vector2(0.87, 0.868), Vector2(0.867, 0.865), Vector2(0.866, 0.864), Vector2(0.866, 0.864), Vector2(0.864, 0.862), Vector2(0.863, 0.861), Vector2(0.826, 0.86), Vector2(0.79, 0.86), Vector2(0.789, 0.859), Vector2(0.789, 0.859), Vector2(0.788, 0.858), Vector2(0.789, 0.859), Vector2(0.789, 0.859), Vector2(0.787, 0.857), Vector2(0.788, 0.858), Vector2(0.787, 0.857), Vector2(0.789, 0.859), Vector2(0.787, 0.857), Vector2(0.788, 0.858), Vector2(0.787, 0.856), Vector2(0.787, 0.857), Vector2(0.786, 0.856), Vector2(0.787, 0.857), Vector2(0.785, 0.873), Vector2(0.784, 0.891), Vector2(0.785, 0.91), Vector2(0.784, 0.965), Vector2(0.785, 1.023), Vector2(0.783, 1.02), Vector2(0.782, 1.019), Vector2(0.782, 1.018), Vector2(0.781, 1.017), Vector2(0.78, 1.015), Vector2(0.779, 1.015), Vector2(0.779, 1.014), Vector2(0.779, 1.015), Vector2(0.778, 1.014), Vector2(0.777, 1.012), Vector2(0.776, 1.011), Vector2(0.777, 1.012), Vector2(0.777, 1.012), Vector2(0.776, 1.01), Vector2(0.776, 1.01), Vector2(0.775, 1.01), Vector2(0.775, 1.009), Vector2(0.775, 1.009), Vector2(0.775, 1.01), Vector2(0.775, 1.009), Vector2(0.774, 1.008), Vector2(0.774, 1.008), Vector2(0.774, 1.008), Vector2(0.774, 1.009), Vector2(0.773, 1.007), Vector2(0.773, 1.007), Vector2(0.772, 1.006), Vector2(0.773, 1.007), Vector2(0.772, 1.006), Vector2(0.773, 1.007), Vector2(0.773, 1.006), Vector2(0.773, 1.007), Vector2(0.774, 1.008), Vector2(0.774, 1.008), Vector2(0.775, 1.009), Vector2(0.776, 1.01), Vector2(0.777, 1.012), Vector2(0.776, 1.011), Vector2(0.776, 1.011), Vector2(0.776, 1.011), Vector2(0.775, 1.01), Vector2(0.775, 1.009), Vector2(0.774, 1.009), Vector2(0.775, 1.01), Vector2(0.774, 1.008), Vector2(0.773, 1.008), Vector2(0.773, 1.007), Vector2(0.774, 1.008), Vector2(0.773, 1.007), Vector2(0.773, 1.007), Vector2(0.774, 1.008), Vector2(0.775, 1.009), Vector2(0.775, 1.01), Vector2(0.777, 1.012), Vector2(0.777, 1.012), Vector2(0.776, 1.01), Vector2(0.776, 1.01), Vector2(0.775, 1.01), Vector2(0.775, 1.009), Vector2(0.775, 1.009), Vector2(0.775, 1.01), Vector2(0.775, 1.009), Vector2(0.774, 1.008), Vector2(0.774, 1.008), Vector2(0.774, 1.008), Vector2(0.774, 1.009), Vector2(0.773, 1.007), Vector2(0.772, 1.006), Vector2(0.772, 1.006), Vector2(0.773, 1.007), Vector2(0.772, 1.006), Vector2(0.772, 1.006), Vector2(0.773, 1.007), Vector2(0.773, 1.007), Vector2(0.774, 1.008), Vector2(0.774, 1.009), Vector2(0.775, 1.009), Vector2(0.776, 1.01), Vector2(0.777, 1.012), Vector2(0.776, 1.011), Vector2(0.776, 1.01), Vector2(0.776, 1.01), Vector2(0.775, 1.01), Vector2(0.775, 1.009), Vector2(0.774, 1.009), Vector2(0.774, 1.009), Vector2(0.773, 1.008), Vector2(0.773, 1.007), Vector2(0.773, 1.007), Vector2(0.774, 1.008), Vector2(0.774, 1.008), Vector2(0.774, 1.009), Vector2(0.775, 1.01), Vector2(0.776, 1.01), Vector2(0.776, 1.01), Vector2(0.777, 1.012)]
}
tracks/88/type = "value"
tracks/88/imported = false
tracks/88/enabled = true
tracks/88/path = NodePath("Body/Zombie_dolphinrider_innerarm_upper:skew")
tracks/88/interp = 1
tracks/88/loop_wrap = true
tracks/88/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 3e-07, -3e-07, 0.0, 4e-07, -2e-07, 1e-07, -2e-07, 1e-07, -2e-07, 4e-07, 0.0, -3e-07, 3e-07, 0.0, -4e-07, 2e-07, -5e-07, -2e-07, 4e-07, 3e-07, -4e-07, 1e-07, -3e-07, -3e-07, 0.0, -4e-07, -2e-07, 0.0, -1e-07, -2e-07, 2e-07, 2e-07, 2e-07, -5e-07, -1e-07, -3e-07, -2e-07, -4e-07, -3e-07, 1e-07, -1e-07, 4e-07, 2e-07, -1e-07, 0.0, 4e-07, 2e-07, 5e-07, 1e-07, 0.0, 3e-07, -4e-07, -4e-07, 2e-07, 2e-07, 5e-07, 4e-07, -3e-07, -5e-07, -3e-07, -1e-07, 4e-07, 2e-07, -2e-07, 3e-07, 5e-07, 3e-07, -2e-07, -1e-07, 5e-07, 4e-07, -2e-07, 1e-07, 0.0, -2e-07, 3e-07, -3e-07, -5e-07, -4e-07, -1e-07, 3e-07, -4e-07, 4e-07, -2e-07, -1e-07, -3e-07, 1e-07, -2e-07, 2e-07, -5e-07, -1e-07, 2e-07, 0.0, -2e-07, -4e-07, 1e-07, -1e-07, 4e-07, -1e-07, -5e-07, 2e-07, 5e-07, 3e-07, -2e-07, -1e-07, -4e-07, -3e-07, 4e-07, 3e-07, 1e-07, 0.0, -0.143117, -0.284489, -0.424115, -0.420624, -0.424115, -0.424115, -0.424115, -0.424115, -0.424115, -0.427605, -0.424115, -0.427606, -0.427606, -0.424115, -0.424115, -0.42586, -0.424115, -0.424115, -0.420624, -0.424115, -0.26529, -0.10821, -0.109956, -0.106465, -0.10821, -0.108211, -0.108211, -0.106465, -0.10821, -0.106465, -0.108211, -0.109956, -0.108211, -0.106465, -0.108211, -0.109956, -0.108211, -0.10821, -0.108211, -0.109956, -0.106465, -0.108211, -0.109955, -0.106465, -0.10472, -0.10821, -0.10821, -0.10821, -0.109956, -0.10821, -0.109956, -0.109956, -0.109956, -0.10821, -0.10821, -0.108211, -0.109955, -0.108211, -0.10821, -0.109956, -0.108211, -0.10821, -0.109956, -0.109955, -0.106465, -0.108211, -0.109956, -0.108211, -0.108211, -0.10821, -0.109956, -0.10821, -0.104719, -0.109955, -0.106465, -0.108211, -0.109956, -0.109955, -0.10821, -0.10821, -0.109956, -0.104719, -0.10821, -0.109956, -0.10821, -0.108211, -0.10821, -0.10821, -0.109956, -0.108211, -0.109955, -0.108211, -0.101229, -0.109956, -0.109956, -0.10821, -0.10821, -0.108211, -0.109955, -0.108211, -0.10821, -0.109956, -0.108211, -0.10821, -0.109956, -0.109955, -0.106465, -0.108211, -0.109956, -0.109956, -0.106465, -0.10821, -0.109956, -0.106465, -0.108211, -0.109955, -0.108211, -0.109956, -0.10821, -0.106465, -0.10821, -0.10821, -0.108211, -0.108211, -0.102975, -0.108211, -0.10821, -0.10821, -0.109956, -0.106465, -0.109956, -0.108211, -0.108211, -0.10472, -0.10472, -0.104719, -0.106465, -0.10821]
}
tracks/89/type = "value"
tracks/89/imported = false
tracks/89/enabled = true
tracks/89/path = NodePath("Body/Zombie_dolphinrider_innerarm_upper:texture")
tracks/89/interp = 1
tracks/89/loop_wrap = true
tracks/89/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("2_fuck"), ExtResource("2_fuck")]
}
tracks/90/type = "value"
tracks/90/imported = false
tracks/90/enabled = true
tracks/90/path = NodePath("Body/Zombie_dolphinrider_innerarm_upper:self_modulate")
tracks/90/interp = 1
tracks/90/loop_wrap = true
tracks/90/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/91/type = "value"
tracks/91/imported = false
tracks/91/enabled = true
tracks/91/path = NodePath("Body/Zombie_dolphinrider_innerleg_foot:visible")
tracks/91/interp = 1
tracks/91/loop_wrap = true
tracks/91/keys = {
"times": PackedFloat32Array(0, 13.0833, 13.1667, 13.1667, 13.25, 13.25, 13.3333, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [true, true, false, false, true, true, false, false]
}
tracks/92/type = "value"
tracks/92/imported = false
tracks/92/enabled = true
tracks/92/path = NodePath("Body/Zombie_dolphinrider_innerleg_foot:position")
tracks/92/interp = 1
tracks/92/loop_wrap = true
tracks/92/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(27.8, 118.7), Vector2(27.9, 118.5), Vector2(28, 118.3), Vector2(28.2, 118), Vector2(28.2, 117.8), Vector2(28.3, 117.6), Vector2(28.4, 117.4), Vector2(28.6, 117.1), Vector2(28.4, 117.4), Vector2(28.3, 117.6), Vector2(28.2, 117.8), Vector2(28.1, 118.1), Vector2(27.9, 118.3), Vector2(27.9, 118.5), Vector2(27.8, 118.7), Vector2(29.3, 118.9), Vector2(30.5, 118.8), Vector2(31.6, 118.8), Vector2(32.6, 118.7), Vector2(33.8, 118.7), Vector2(36.5, 118.7), Vector2(39.2, 118.7), Vector2(42, 118.7), Vector2(43.2, 118.7), Vector2(44.4, 118.6), Vector2(45.7, 118.7), Vector2(46.9, 118.6), Vector2(47.9, 119.2), Vector2(48.9, 119.8), Vector2(49.9, 120.6), Vector2(50.9, 121.3), Vector2(50.4, 122.1), Vector2(50.1, 122.7), Vector2(50, 123.3), Vector2(50, 124.2), Vector2(49, 124.1), Vector2(47.9, 124.1), Vector2(46.9, 124), Vector2(45.9, 124), Vector2(44.8, 124), Vector2(40.3, 123.4), Vector2(35.9, 122.8), Vector2(31.9, 122.1), Vector2(27.9, 121.4), Vector2(23.4, 120.9), Vector2(19, 120.3), Vector2(18.8, 119.7), Vector2(18.7, 119.2), Vector2(20.5, 119.1), Vector2(22.3, 119), Vector2(24.1, 119), Vector2(25.8, 119), Vector2(27.7, 118.9), Vector2(29.3, 118.9), Vector2(29.3, 118.9), Vector2(30.5, 118.8), Vector2(31.6, 118.8), Vector2(32.6, 118.7), Vector2(33.8, 118.7), Vector2(36.5, 118.7), Vector2(39.2, 118.7), Vector2(42, 118.7), Vector2(43.2, 118.7), Vector2(44.4, 118.6), Vector2(45.7, 118.7), Vector2(46.9, 118.6), Vector2(47.9, 119.2), Vector2(48.9, 119.8), Vector2(49.9, 120.6), Vector2(50.9, 121.3), Vector2(50.4, 122.1), Vector2(50.1, 122.7), Vector2(50, 123.3), Vector2(50, 124.2), Vector2(49, 124.1), Vector2(47.9, 124.1), Vector2(46.9, 124), Vector2(45.9, 124), Vector2(44.8, 124), Vector2(40.3, 123.4), Vector2(35.9, 122.8), Vector2(31.9, 122.1), Vector2(27.9, 121.4), Vector2(23.4, 120.9), Vector2(19, 120.3), Vector2(18.8, 119.7), Vector2(18.7, 119.2), Vector2(20.5, 119.1), Vector2(22.3, 119), Vector2(24.1, 119), Vector2(25.8, 119), Vector2(27.7, 118.9), Vector2(29.3, 118.9), Vector2(27.8, 118.7), Vector2(28, 118), Vector2(28.3, 117.2), Vector2(28.5, 116.5), Vector2(28.8, 115.8), Vector2(29.1, 115), Vector2(29.5, 114.3), Vector2(29.4, 114.8), Vector2(29.4, 115.2), Vector2(29.3, 115.5), Vector2(29.2, 116), Vector2(29.1, 116.3), Vector2(29.6, 115.3), Vector2(30, 114.3), Vector2(29.5, 115.2), Vector2(29.1, 116), Vector2(28.5, 116.8), Vector2(28.1, 117.8), Vector2(27.8, 118.7), Vector2(29.7, 119.3), Vector2(32.1, 120.1), Vector2(35, 120.9), Vector2(29.4, 109.3), Vector2(25.3, 98), Vector2(22.4, 87.2), Vector2(9.6, 71.3), Vector2(-2.8, 55.5), Vector2(-15.1, 39.9), Vector2(-18, 35.8), Vector2(-20.8, 31.6), Vector2(-22, 30.9), Vector2(-23.1, 30.1), Vector2(-24.2, 29.4), Vector2(-25.2, 28.7), Vector2(-31.5, 62.6), Vector2(-37.8, 96.8), Vector2(-44.6, 117.7), Vector2(-43.4, 118.5), Vector2(-42.2, 119.3), Vector2(-41.1, 120.1), Vector2(-39.9, 121), Vector2(-36.8, 122.7), Vector2(-33.4, 124.5), Vector2(-29.9, 126.3), Vector2(-26.1, 128.2), Vector2(-26.1, 128.2), Vector2(-26.2, 127.6), Vector2(-26.3, 127), Vector2(-26.2, 127.6), Vector2(-26.1, 128.2), Vector2(-25.2, 129.1), Vector2(-24.4, 130.1), Vector2(-34.9, 100), Vector2(-45.5, 69.9), Vector2(-59.4, 47.5), Vector2(-73.4, 25.3), Vector2(-76.8, 27.7), Vector2(-79.8, 30), Vector2(-82.6, 32.1), Vector2(-91.4, 60.8), Vector2(-100, 89.3), Vector2(-98.3, 102.2), Vector2(-96.2, 114.8), Vector2(-94, 127.1), Vector2(-91.6, 138.8), Vector2(-91.6, 138.8), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1), Vector2(-111, 165.1)]
}
tracks/93/type = "value"
tracks/93/imported = false
tracks/93/enabled = true
tracks/93/path = NodePath("Body/Zombie_dolphinrider_innerleg_foot:rotation")
tracks/93/interp = 1
tracks/93/loop_wrap = true
tracks/93/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.008727, 0.022689, 0.031416, 0.043633, 0.054105, 0.066323, 0.07854, 0.066323, 0.054105, 0.043633, 0.031416, 0.022689, 0.008727, 0.0, -0.017453, -0.012217, -0.006981, -0.003491, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.003491, -0.006981, -0.059341, -0.113446, -0.169297, -0.225147, -0.321141, -0.418879, -0.514872, -0.614356, -0.645772, -0.677188, -0.712094, -0.741765, -0.774926, -0.668461, -0.558505, -0.453786, -0.345575, -0.26529, -0.190241, -0.113446, -0.040143, -0.033161, -0.029671, -0.02618, -0.024435, -0.020944, -0.017453, -0.017453, -0.012217, -0.006981, -0.003491, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.003491, -0.006981, -0.059341, -0.113446, -0.169297, -0.225147, -0.321141, -0.418879, -0.514872, -0.614356, -0.645772, -0.677188, -0.712094, -0.741765, -0.774926, -0.668461, -0.558505, -0.453786, -0.345575, -0.26529, -0.190241, -0.113446, -0.040143, -0.033161, -0.029671, -0.02618, -0.024435, -0.020944, -0.017453, 0.0, 0.034907, 0.075049, 0.109956, 0.148353, 0.185005, 0.223402, 0.193732, 0.165806, 0.139626, 0.123918, 0.113446, 0.162316, 0.21293, 0.171042, 0.127409, 0.083776, 0.040143, 0.0, -0.178024, -0.356047, -0.535816, -0.242601, 0.043633, 0.338594, 0.205949, 0.075049, -0.054105, 0.005236, 0.071558, 0.045379, 0.022689, 0.0, -0.020944, -0.012217, -0.006981, -0.001745, -0.020944, -0.038397, -0.059341, -0.080285, -0.190241, -0.303687, -0.413643, -0.527089, -0.527089, -0.514872, -0.500909, -0.514872, -0.527089, -0.553269, -0.581195, -0.506145, -0.431096, -0.469494, -0.507891, -0.657989, -0.811578, -0.961676, -1.06291, -1.16413, -1.33343, -1.49924, -1.66504, -1.83434, -1.83434, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348, -1.22348]
}
tracks/94/type = "value"
tracks/94/imported = false
tracks/94/enabled = true
tracks/94/path = NodePath("Body/Zombie_dolphinrider_innerleg_foot:scale")
tracks/94/interp = 1
tracks/94/loop_wrap = true
tracks/94/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.796, 0.8), Vector2(0.793, 0.8), Vector2(0.789, 0.799), Vector2(0.786, 0.799), Vector2(0.782, 0.799), Vector2(0.779, 0.799), Vector2(0.778, 0.799), Vector2(0.778, 0.799), Vector2(0.779, 0.799), Vector2(0.778, 0.799), Vector2(0.779, 0.799), Vector2(0.778, 0.799), Vector2(0.778, 0.799), Vector2(0.782, 0.799), Vector2(0.787, 0.799), Vector2(0.791, 0.799), Vector2(0.796, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.791, 0.791), Vector2(0.789, 0.789), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.786, 0.786), Vector2(0.786, 0.786), Vector2(0.786, 0.786), Vector2(0.785, 0.785), Vector2(0.784, 0.784), Vector2(0.784, 0.784), Vector2(0.784, 0.784), Vector2(0.784, 0.784), Vector2(0.783, 0.783), Vector2(0.784, 0.784), Vector2(0.783, 0.783), Vector2(0.784, 0.784), Vector2(0.783, 0.783), Vector2(0.784, 0.784), Vector2(0.782, 0.782), Vector2(0.783, 0.783), Vector2(0.782, 0.782), Vector2(0.782, 0.782), Vector2(0.781, 0.781), Vector2(0.78, 0.78), Vector2(0.781, 0.781), Vector2(0.781, 0.781), Vector2(0.783, 0.783), Vector2(0.782, 0.782), Vector2(0.782, 0.782), Vector2(0.781, 0.781), Vector2(0.781, 0.781), Vector2(0.781, 0.781), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78)]
}
tracks/95/type = "value"
tracks/95/imported = false
tracks/95/enabled = true
tracks/95/path = NodePath("Body/Zombie_dolphinrider_innerleg_foot:skew")
tracks/95/interp = 1
tracks/95/loop_wrap = true
tracks/95/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -4e-07, 3e-07, -1e-07, 2e-07, 2e-07, -5e-07, -2e-07, -5e-07, 2e-07, 2e-07, -1e-07, 3e-07, -4e-07, 0.0, -3e-07, -3e-07, -3e-07, 3e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3e-07, -3e-07, -2e-07, -4e-07, 1e-07, -5e-07, 4e-07, 0.0, -1e-07, 1e-07, 2e-07, 3e-07, -3e-07, 1e-07, -2e-07, -1e-07, -4e-07, 4e-07, -2e-07, 0.0, 1e-07, -4e-07, 4e-07, -3e-07, 4e-07, 1e-07, 4e-07, 0.0, -3e-07, -3e-07, -3e-07, -3e-07, 3e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3e-07, -3e-07, -2e-07, -4e-07, 1e-07, -5e-07, 4e-07, 0.0, -1e-07, 1e-07, 2e-07, 3e-07, -3e-07, 1e-07, -2e-07, -1e-07, -4e-07, 4e-07, -2e-07, 0.0, 1e-07, -4e-07, 4e-07, -3e-07, 4e-07, 1e-07, 4e-07, 0.0, -3e-07, 0.0, -4e-07, 2e-07, -3e-07, 0.0, -1e-07, 1e-07, -5e-07, 3e-07, 3e-07, 4e-07, 4e-07, -4e-07, 2e-07, 3e-07, 0.0, -2e-07, -4e-07, 0.0, 4e-07, -2e-07, -1e-07, 2e-07, 2e-07, -1e-07, -2e-07, 2e-07, -2e-07, 0.0, 5e-07, -4e-07, 3e-07, 0.0, 0.0, -3e-07, -3e-07, -3e-07, 0.0, -2e-07, -2e-07, -1e-07, 1e-07, -3e-07, 0.0, -4e-07, -4e-07, -1e-07, -5e-07, -1e-07, -4e-07, -4e-07, 4e-07, -5e-07, -3e-07, 4e-07, 2e-07, -1e-07, -1e-07, -4e-07, -5e-07, 4e-07, 5e-07, 2e-07, -1e-07, 0.0, 0.0, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07]
}
tracks/96/type = "value"
tracks/96/imported = false
tracks/96/enabled = true
tracks/96/path = NodePath("Body/Zombie_dolphinrider_innerleg_foot:texture")
tracks/96/interp = 1
tracks/96/loop_wrap = true
tracks/96/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("3_fuck"), ExtResource("3_fuck")]
}
tracks/97/type = "value"
tracks/97/imported = false
tracks/97/enabled = true
tracks/97/path = NodePath("Body/Zombie_dolphinrider_innerleg_foot:self_modulate")
tracks/97/interp = 1
tracks/97/loop_wrap = true
tracks/97/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0)]
}
tracks/98/type = "value"
tracks/98/imported = false
tracks/98/enabled = true
tracks/98/path = NodePath("Body/Zombie_dolphinrider_innerleg_lower:visible")
tracks/98/interp = 1
tracks/98/loop_wrap = true
tracks/98/keys = {
"times": PackedFloat32Array(0, 13.0833, 13.1667, 13.1667, 13.25, 13.25, 13.3333, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [true, true, false, false, true, true, false, false]
}
tracks/99/type = "value"
tracks/99/imported = false
tracks/99/enabled = true
tracks/99/path = NodePath("Body/Zombie_dolphinrider_innerleg_lower:position")
tracks/99/interp = 1
tracks/99/loop_wrap = true
tracks/99/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(35.4, 99.1), Vector2(35.5, 99.1), Vector2(35.6, 99), Vector2(35.8, 98.9), Vector2(36, 98.8), Vector2(36.1, 98.8), Vector2(36.3, 98.8), Vector2(36.5, 98.7), Vector2(36.3, 98.7), Vector2(36.1, 98.8), Vector2(36, 98.8), Vector2(35.9, 98.8), Vector2(35.7, 98.8), Vector2(35.5, 98.9), Vector2(35.4, 99.1), Vector2(36.5, 99.2), Vector2(37.6, 98.7), Vector2(38.6, 98.3), Vector2(39.6, 97.8), Vector2(40.6, 97.3), Vector2(41.5, 97.6), Vector2(42.3, 97.8), Vector2(43.2, 98.2), Vector2(43.9, 98.2), Vector2(44.6, 98.3), Vector2(45.1, 98.3), Vector2(45.9, 98.3), Vector2(43.5, 101.5), Vector2(41.5, 104.8), Vector2(40, 108.4), Vector2(39, 112), Vector2(38.4, 112.6), Vector2(37.6, 113.3), Vector2(37.1, 113.8), Vector2(36.5, 114.5), Vector2(35.2, 114), Vector2(34, 113.7), Vector2(32.8, 113.1), Vector2(31.5, 112.7), Vector2(30.1, 112.2), Vector2(27.5, 109.6), Vector2(25.1, 106.9), Vector2(23, 104.3), Vector2(21.2, 101.9), Vector2(24.2, 98.3), Vector2(28.4, 96), Vector2(32.7, 96.5), Vector2(37.3, 97.7), Vector2(36.9, 97.7), Vector2(36.8, 97.8), Vector2(36.6, 98.1), Vector2(36.5, 98.3), Vector2(36.6, 98.8), Vector2(36.5, 99.2), Vector2(36.5, 99.2), Vector2(37.6, 98.7), Vector2(38.6, 98.3), Vector2(39.6, 97.8), Vector2(40.6, 97.3), Vector2(41.5, 97.6), Vector2(42.3, 97.8), Vector2(43.2, 98.2), Vector2(43.9, 98.2), Vector2(44.6, 98.3), Vector2(45.1, 98.3), Vector2(45.9, 98.3), Vector2(43.5, 101.5), Vector2(41.5, 104.8), Vector2(40, 108.4), Vector2(39, 112), Vector2(38.4, 112.6), Vector2(37.6, 113.3), Vector2(37.1, 113.8), Vector2(36.5, 114.5), Vector2(35.2, 114), Vector2(34, 113.7), Vector2(32.8, 113.1), Vector2(31.5, 112.7), Vector2(30.1, 112.2), Vector2(27.5, 109.6), Vector2(25.1, 106.9), Vector2(23, 104.3), Vector2(21.2, 101.9), Vector2(24.2, 98.3), Vector2(28.4, 96), Vector2(32.7, 96.5), Vector2(37.3, 97.7), Vector2(36.9, 97.7), Vector2(36.8, 97.8), Vector2(36.6, 98.1), Vector2(36.5, 98.3), Vector2(36.6, 98.8), Vector2(36.5, 99.2), Vector2(35.4, 99.1), Vector2(36.1, 98.8), Vector2(36.9, 98.5), Vector2(37.6, 98.2), Vector2(38.4, 97.8), Vector2(39.2, 97.7), Vector2(39.9, 97.3), Vector2(37.2, 97.8), Vector2(34.8, 98.6), Vector2(32.5, 99.3), Vector2(30.8, 100.2), Vector2(29.2, 101.2), Vector2(26.5, 102.9), Vector2(24.1, 104.9), Vector2(25.9, 103.5), Vector2(28, 102.2), Vector2(30.2, 101), Vector2(32.7, 99.8), Vector2(35.4, 99.1), Vector2(24.4, 106.8), Vector2(22.6, 117.5), Vector2(26.5, 123.1), Vector2(20.9, 110.2), Vector2(16.2, 96.5), Vector2(12.4, 82.2), Vector2(1.3, 62.5), Vector2(-9.6, 43), Vector2(-20.3, 23.4), Vector2(-22, 18.9), Vector2(-23.8, 14.5), Vector2(-25.3, 13.9), Vector2(-26.8, 13.3), Vector2(-28.3, 12.7), Vector2(-29.9, 12), Vector2(-36.2, 46), Vector2(-42.5, 79.9), Vector2(-48.8, 113.9), Vector2(-47.8, 112.7), Vector2(-46.7, 111.5), Vector2(-46.1, 112.8), Vector2(-45.5, 114.2), Vector2(-43.8, 114.7), Vector2(-42, 115), Vector2(-40.2, 115.4), Vector2(-38.2, 115.9), Vector2(-38.2, 115.9), Vector2(-38.1, 115.2), Vector2(-38.1, 114.5), Vector2(-38.1, 115.2), Vector2(-38.2, 115.9), Vector2(-37.6, 117.3), Vector2(-37.1, 118.6), Vector2(-46.7, 87.7), Vector2(-56.4, 56.6), Vector2(-70.8, 34.7), Vector2(-85.3, 12.8), Vector2(-89.9, 17.4), Vector2(-94.1, 22), Vector2(-98, 26.4), Vector2(-107.6, 56.6), Vector2(-117, 86.6), Vector2(-114.8, 102.2), Vector2(-112.3, 117.6), Vector2(-109.5, 132.6), Vector2(-106.6, 147.4), Vector2(-106.6, 147.4), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2), Vector2(-118.2, 171.2)]
}
tracks/100/type = "value"
tracks/100/imported = false
tracks/100/enabled = true
tracks/100/path = NodePath("Body/Zombie_dolphinrider_innerleg_lower:rotation")
tracks/100/interp = 1
tracks/100/loop_wrap = true
tracks/100/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.005236, 0.013963, 0.017453, 0.02618, 0.031416, 0.040143, 0.048869, 0.040143, 0.031416, 0.02618, 0.017453, 0.013963, 0.005236, 0.0, -0.017453, -0.024435, -0.038397, -0.047124, -0.059341, -0.129154, -0.200713, -0.274017, -0.296706, -0.322886, -0.347321, -0.371755, -0.549779, -0.729548, -0.907571, -1.0856, -1.12748, -1.17112, -1.21126, -1.2514, -1.24093, -1.2322, -1.21824, -1.20602, -1.19555, -1.06116, -0.925024, -0.787143, -0.652753, -0.300197, 0.047124, 0.267035, 0.485202, 0.397935, 0.315905, 0.232129, 0.148353, 0.062832, -0.017453, -0.017453, -0.024435, -0.038397, -0.047124, -0.059341, -0.129154, -0.200713, -0.274017, -0.296706, -0.322886, -0.347321, -0.371755, -0.549779, -0.729548, -0.907571, -1.0856, -1.12748, -1.17112, -1.21126, -1.2514, -1.24093, -1.2322, -1.21824, -1.20602, -1.19555, -1.06116, -0.925024, -0.787143, -0.652753, -0.300197, 0.047124, 0.267035, 0.485202, 0.397935, 0.315905, 0.232129, 0.148353, 0.062832, -0.017453, 0.0, 0.02618, 0.05236, 0.083776, 0.109956, 0.136136, 0.165806, 0.040143, -0.076794, -0.200713, -0.282743, -0.37001, -0.541052, -0.712094, -0.567232, -0.42586, -0.282743, -0.137881, 0.0, -0.794125, -1.42942, -1.73486, -1.48178, -1.22697, -0.970403, -0.846485, -0.724312, -0.602139, -0.537561, -0.47473, -0.497419, -0.520108, -0.544543, -0.568977, -0.561996, -0.555015, -0.549779, -0.527089, -0.506145, -0.567232, -0.628319, -0.741765, -0.851721, -0.965167, -1.07512, -1.07512, -1.06116, -1.04894, -1.06116, -1.07512, -1.10479, -1.12923, -1.05592, -0.97913, -1.01753, -1.05592, -1.20951, -1.3631, -1.5132, -1.60919, -1.71217, -1.87972, -2.04553, -2.21308, -2.38237, -2.38237, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252, -2.42252]
}
tracks/101/type = "value"
tracks/101/imported = false
tracks/101/enabled = true
tracks/101/path = NodePath("Body/Zombie_dolphinrider_innerleg_lower:scale")
tracks/101/interp = 1
tracks/101/loop_wrap = true
tracks/101/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.818), Vector2(0.8, 0.837), Vector2(0.799, 0.856), Vector2(0.799, 0.874), Vector2(0.799, 0.874), Vector2(0.798, 0.873), Vector2(0.799, 0.874), Vector2(0.798, 0.891), Vector2(0.798, 0.91), Vector2(0.798, 0.929), Vector2(0.799, 0.949), Vector2(0.797, 0.947), Vector2(0.796, 0.946), Vector2(0.796, 0.945), Vector2(0.797, 0.946), Vector2(0.796, 0.945), Vector2(0.795, 0.945), Vector2(0.795, 0.945), Vector2(0.796, 0.945), Vector2(0.795, 0.944), Vector2(0.795, 0.944), Vector2(0.795, 0.944), Vector2(0.795, 0.944), Vector2(0.795, 0.945), Vector2(0.794, 0.943), Vector2(0.793, 0.942), Vector2(0.793, 0.942), Vector2(0.794, 0.943), Vector2(0.791, 0.94), Vector2(0.79, 0.939), Vector2(0.788, 0.936), Vector2(0.788, 0.936), Vector2(0.789, 0.912), Vector2(0.791, 0.89), Vector2(0.793, 0.867), Vector2(0.795, 0.845), Vector2(0.798, 0.822), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.818), Vector2(0.8, 0.837), Vector2(0.799, 0.856), Vector2(0.799, 0.874), Vector2(0.799, 0.874), Vector2(0.798, 0.873), Vector2(0.799, 0.874), Vector2(0.798, 0.891), Vector2(0.798, 0.91), Vector2(0.798, 0.929), Vector2(0.799, 0.949), Vector2(0.797, 0.947), Vector2(0.796, 0.946), Vector2(0.796, 0.945), Vector2(0.797, 0.946), Vector2(0.796, 0.945), Vector2(0.795, 0.945), Vector2(0.795, 0.945), Vector2(0.796, 0.945), Vector2(0.795, 0.944), Vector2(0.795, 0.944), Vector2(0.795, 0.944), Vector2(0.795, 0.944), Vector2(0.795, 0.945), Vector2(0.794, 0.943), Vector2(0.793, 0.942), Vector2(0.793, 0.942), Vector2(0.794, 0.943), Vector2(0.791, 0.94), Vector2(0.79, 0.939), Vector2(0.788, 0.936), Vector2(0.788, 0.936), Vector2(0.789, 0.912), Vector2(0.791, 0.89), Vector2(0.793, 0.867), Vector2(0.795, 0.845), Vector2(0.798, 0.822), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.795, 0.809), Vector2(0.796, 0.824), Vector2(0.795, 0.818), Vector2(0.796, 0.813), Vector2(0.798, 0.809), Vector2(0.799, 0.804), Vector2(0.8, 0.8), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.796, 0.837), Vector2(0.795, 0.878), Vector2(0.795, 0.92), Vector2(0.793, 0.918), Vector2(0.793, 0.917), Vector2(0.794, 0.919), Vector2(0.792, 0.917), Vector2(0.793, 0.918), Vector2(0.792, 0.916), Vector2(0.792, 0.916), Vector2(0.791, 0.916), Vector2(0.792, 0.916), Vector2(0.789, 0.913), Vector2(0.787, 0.91), Vector2(0.786, 0.909), Vector2(0.784, 0.907), Vector2(0.785, 0.908), Vector2(0.783, 0.907), Vector2(0.784, 0.908), Vector2(0.783, 0.906), Vector2(0.782, 0.905), Vector2(0.782, 0.905), Vector2(0.783, 0.906), Vector2(0.783, 0.906), Vector2(0.782, 0.905), Vector2(0.783, 0.906), Vector2(0.782, 0.905), Vector2(0.783, 0.906), Vector2(0.782, 0.905), Vector2(0.783, 0.906), Vector2(0.781, 0.904), Vector2(0.782, 0.905), Vector2(0.78, 0.903), Vector2(0.781, 0.904), Vector2(0.78, 0.902), Vector2(0.78, 0.902), Vector2(0.78, 0.902), Vector2(0.781, 0.903), Vector2(0.781, 0.904), Vector2(0.78, 0.903), Vector2(0.779, 0.902), Vector2(0.779, 0.901), Vector2(0.78, 0.902), Vector2(0.78, 0.902), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9), Vector2(0.778, 0.9)]
}
tracks/102/type = "value"
tracks/102/imported = false
tracks/102/enabled = true
tracks/102/path = NodePath("Body/Zombie_dolphinrider_innerleg_lower:skew")
tracks/102/interp = 1
tracks/102/loop_wrap = true
tracks/102/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, -4e-07, 3e-07, -1e-07, -1e-07, -4e-07, 2e-07, -4e-07, -1e-07, -1e-07, 3e-07, -4e-07, 0.0, 0.0, -3e-07, 4e-07, -2e-07, 1e-07, -2e-07, -4e-07, 1e-07, 3e-07, 0.0, 1e-07, 5e-07, -1e-07, 3e-07, 4e-07, -2e-07, 2e-07, 3e-07, 1e-07, -5e-07, -1e-07, -1e-07, -4e-07, 2e-07, -5e-07, 5e-07, -2e-07, -5e-07, -5e-07, -1e-07, 4e-07, -1e-07, 4e-07, -5e-07, 1e-07, -4e-07, -2e-07, 0.0, -1e-07, -3e-07, -3e-07, 4e-07, -2e-07, 1e-07, -2e-07, -4e-07, 1e-07, 3e-07, 0.0, 1e-07, 5e-07, -1e-07, 3e-07, 4e-07, -2e-07, 2e-07, 3e-07, 1e-07, -5e-07, -1e-07, -1e-07, -4e-07, 2e-07, -5e-07, 5e-07, -2e-07, -5e-07, -5e-07, -1e-07, 4e-07, -1e-07, 4e-07, -5e-07, 1e-07, -4e-07, -2e-07, 0.0, -1e-07, -3e-07, 0.0, -1e-07, -1e-07, -2e-07, -3e-07, -3e-07, 3e-07, -4e-07, -5e-07, 1e-07, -3e-07, 2e-07, -1e-07, -3e-07, 0.0, -3e-07, -3e-07, -0.0017453, 0.0, 2e-07, 4e-07, -2e-07, 5e-07, -4e-07, 0.0, 3e-07, 4e-07, 4e-07, -4e-07, 5e-07, 2e-07, -1e-07, 3e-07, -3e-07, 0.0, 3e-07, 3e-07, -4e-07, -5e-07, 0.0, 5e-07, 1e-07, 3e-07, -1e-07, 2e-07, 2e-07, -2e-07, 1e-07, -2e-07, 2e-07, -4e-07, 0.0, -2e-07, 3e-07, 1e-07, -2e-07, -2e-07, -1e-07, -4e-07, 5e-07, 0.0, 4e-07, 2e-07, -5e-07, -4e-07, -4e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/103/type = "value"
tracks/103/imported = false
tracks/103/enabled = true
tracks/103/path = NodePath("Body/Zombie_dolphinrider_innerleg_lower:texture")
tracks/103/interp = 1
tracks/103/loop_wrap = true
tracks/103/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("4_fuck"), ExtResource("4_fuck")]
}
tracks/104/type = "value"
tracks/104/imported = false
tracks/104/enabled = true
tracks/104/path = NodePath("Body/Zombie_dolphinrider_innerleg_lower:self_modulate")
tracks/104/interp = 1
tracks/104/loop_wrap = true
tracks/104/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0)]
}
tracks/105/type = "value"
tracks/105/imported = false
tracks/105/enabled = true
tracks/105/path = NodePath("Body/Zombie_dolphinrider_innerleg_upper:visible")
tracks/105/interp = 1
tracks/105/loop_wrap = true
tracks/105/keys = {
"times": PackedFloat32Array(0, 13.25, 13.3333, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [true, true, false, false]
}
tracks/106/type = "value"
tracks/106/imported = false
tracks/106/enabled = true
tracks/106/path = NodePath("Body/Zombie_dolphinrider_innerleg_upper:position")
tracks/106/interp = 1
tracks/106/loop_wrap = true
tracks/106/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(37.1, 69.6), Vector2(36.7, 70), Vector2(36.4, 70.3), Vector2(36, 70.8), Vector2(35.6, 71.2), Vector2(35.1, 71.6), Vector2(34.8, 72), Vector2(34.4, 72.5), Vector2(34.9, 72.1), Vector2(35.2, 71.6), Vector2(35.5, 71.2), Vector2(36, 70.8), Vector2(36.4, 70.4), Vector2(36.8, 70), Vector2(37.1, 69.6), Vector2(39.7, 69), Vector2(38.9, 69.3), Vector2(38.1, 69.5), Vector2(37.5, 69.8), Vector2(36.7, 70.2), Vector2(36.4, 70.5), Vector2(35.9, 70.8), Vector2(35.6, 71.3), Vector2(35.3, 71.6), Vector2(34.9, 71.8), Vector2(34.5, 72.2), Vector2(34.2, 72.7), Vector2(32.5, 74.3), Vector2(30.8, 76), Vector2(29, 77.7), Vector2(27.2, 79.3), Vector2(28.4, 77.8), Vector2(29.5, 76.6), Vector2(30.7, 75.3), Vector2(31.9, 74.3), Vector2(34, 73.3), Vector2(36, 72.5), Vector2(38.3, 71.8), Vector2(40.5, 71.3), Vector2(42.6, 70.8), Vector2(44.8, 69.7), Vector2(47, 68.8), Vector2(49.1, 68.1), Vector2(51.1, 67.9), Vector2(46.5, 67.8), Vector2(41.6, 68.5), Vector2(36.8, 71.3), Vector2(31.9, 74.8), Vector2(33.2, 73.8), Vector2(34.5, 72.8), Vector2(35.7, 72), Vector2(37, 71), Vector2(38.1, 70.1), Vector2(39.7, 69), Vector2(39.7, 69), Vector2(38.9, 69.3), Vector2(38.1, 69.5), Vector2(37.5, 69.8), Vector2(36.7, 70.2), Vector2(36.4, 70.5), Vector2(35.9, 70.8), Vector2(35.6, 71.3), Vector2(35.3, 71.6), Vector2(34.9, 71.8), Vector2(34.5, 72.2), Vector2(34.2, 72.7), Vector2(32.5, 74.3), Vector2(30.8, 76), Vector2(29, 77.7), Vector2(27.2, 79.3), Vector2(28.4, 77.8), Vector2(29.5, 76.6), Vector2(30.7, 75.3), Vector2(31.9, 74.3), Vector2(34, 73.3), Vector2(36, 72.5), Vector2(38.3, 71.8), Vector2(40.5, 71.3), Vector2(42.6, 70.8), Vector2(44.8, 69.7), Vector2(47, 68.8), Vector2(49.1, 68.1), Vector2(51.1, 67.9), Vector2(46.5, 67.8), Vector2(41.6, 68.5), Vector2(36.8, 71.3), Vector2(31.9, 74.8), Vector2(33.2, 73.8), Vector2(34.5, 72.8), Vector2(35.7, 72), Vector2(37, 71), Vector2(38.1, 70.1), Vector2(39.7, 69), Vector2(37.1, 69.6), Vector2(36.1, 70.3), Vector2(35, 71), Vector2(34, 71.8), Vector2(33.1, 72.7), Vector2(32.1, 73.5), Vector2(31.1, 74.3), Vector2(36.1, 71.2), Vector2(41.6, 69), Vector2(47.5, 67.8), Vector2(50.7, 68.8), Vector2(53.8, 70.4), Vector2(57.9, 72.5), Vector2(61.6, 75), Vector2(57.1, 72.2), Vector2(52.1, 70.3), Vector2(47, 69.2), Vector2(41.9, 69), Vector2(37.1, 69.6), Vector2(44.9, 71.7), Vector2(48.5, 76.7), Vector2(48.2, 80.7), Vector2(34.3, 66.9), Vector2(20.1, 55.9), Vector2(6.7, 47.4), Vector2(14.5, 28.6), Vector2(22.5, 17.5), Vector2(26, 12.6), Vector2(24.7, 11.1), Vector2(23.4, 9.7), Vector2(22.1, 10.8), Vector2(20.7, 12.1), Vector2(19.4, 13.3), Vector2(17.9, 14.5), Vector2(8.5, 37.6), Vector2(-2.9, 61.7), Vector2(-16.4, 87.3), Vector2(-12.8, 89.2), Vector2(-9.3, 91.1), Vector2(-9.9, 90.3), Vector2(-10.8, 89.3), Vector2(-10, 89.6), Vector2(-9, 89.7), Vector2(-8.1, 89.9), Vector2(-7.2, 90), Vector2(-7.2, 90), Vector2(-6.7, 89.8), Vector2(-6.5, 89.4), Vector2(-6.9, 89.7), Vector2(-7.2, 90), Vector2(-7.4, 90.5), Vector2(-7.5, 91.1), Vector2(-15.2, 62.5), Vector2(-23.1, 33.8), Vector2(-38.4, 10.7), Vector2(-53.8, -12.3), Vector2(-62.5, -11.8), Vector2(-71.5, -10.9), Vector2(-80.7, -9.6), Vector2(-94, 18.8), Vector2(-107.5, 47.5), Vector2(-116.1, 60.5), Vector2(-124.6, 75.1), Vector2(-126, 90.8), Vector2(-127.4, 106.5), Vector2(-123.9, 110.5), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3), Vector2(-132.4, 126.3)]
}
tracks/107/type = "value"
tracks/107/imported = false
tracks/107/enabled = true
tracks/107/path = NodePath("Body/Zombie_dolphinrider_innerleg_upper:rotation")
tracks/107/interp = 1
tracks/107/loop_wrap = true
tracks/107/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.012217, -0.024435, -0.038397, -0.055851, -0.068068, -0.08203, -0.099484, -0.08203, -0.068068, -0.055851, -0.038397, -0.024435, -0.012217, 0.0, 0.069813, 0.005236, -0.055851, -0.120428, -0.18675, -0.235619, -0.286234, -0.338594, -0.352557, -0.364774, -0.378736, -0.390954, -0.387463, -0.383972, -0.378736, -0.378736, -0.286234, -0.195477, -0.102974, -0.013963, 0.069813, 0.15708, 0.244346, 0.331613, 0.418879, 0.528835, 0.63879, 0.748746, 0.858702, 0.647517, 0.436332, 0.223402, 0.015708, 0.022689, 0.031416, 0.040143, 0.048869, 0.057596, 0.069813, 0.069813, 0.005236, -0.055851, -0.120428, -0.18675, -0.235619, -0.286234, -0.338594, -0.352557, -0.364774, -0.378736, -0.390954, -0.387463, -0.383972, -0.378736, -0.378736, -0.286234, -0.195477, -0.102974, -0.013963, 0.069813, 0.15708, 0.244346, 0.331613, 0.418879, 0.528835, 0.63879, 0.748746, 0.858702, 0.647517, 0.436332, 0.223402, 0.015708, 0.022689, 0.031416, 0.040143, 0.048869, 0.057596, 0.069813, 0.0, -0.041888, -0.090757, -0.137881, -0.18326, -0.230383, -0.279253, -0.050615, 0.171042, 0.39968, 0.560251, 0.719076, 0.879646, 1.04022, 0.830777, 0.621337, 0.415388, 0.205949, 0.0, 0.548033, 0.853466, 0.844739, 0.472984, 0.101229, -0.268781, 0.363028, 0.998328, 1.63363, 1.69297, 1.75929, 1.81689, 1.87623, 1.93382, 1.99666, 1.64236, 1.29503, 0.940732, 1.06291, 1.18682, 1.12923, 1.06465, 1.08909, 1.11178, 1.13796, 1.16064, 1.16064, 1.17635, 1.18682, 1.17635, 1.16064, 1.13446, 1.10654, 1.18159, 1.25664, 1.21999, 1.17984, 1.028, 0.879646, 0.726057, 0.624828, 0.523599, 0.240855, -0.038397, -0.1309, -0.228638, 0.176278, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689, 0.022689]
}
tracks/108/type = "value"
tracks/108/imported = false
tracks/108/enabled = true
tracks/108/path = NodePath("Body/Zombie_dolphinrider_innerleg_upper:scale")
tracks/108/interp = 1
tracks/108/loop_wrap = true
tracks/108/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.799, 0.797), Vector2(0.799, 0.797), Vector2(0.8, 0.798), Vector2(0.799, 0.797), Vector2(0.799, 0.796), Vector2(0.798, 0.796), Vector2(0.799, 0.797), Vector2(0.798, 0.796), Vector2(0.798, 0.795), Vector2(0.798, 0.795), Vector2(0.798, 0.796), Vector2(0.797, 0.795), Vector2(0.797, 0.795), Vector2(0.796, 0.794), Vector2(0.796, 0.794), Vector2(0.796, 0.794), Vector2(0.795, 0.806), Vector2(0.794, 0.819), Vector2(0.794, 0.832), Vector2(0.794, 0.847), Vector2(0.792, 0.845), Vector2(0.792, 0.845), Vector2(0.792, 0.844), Vector2(0.793, 0.845), Vector2(0.794, 0.837), Vector2(0.795, 0.83), Vector2(0.796, 0.822), Vector2(0.797, 0.814), Vector2(0.798, 0.807), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.799, 0.797), Vector2(0.799, 0.797), Vector2(0.8, 0.798), Vector2(0.799, 0.797), Vector2(0.799, 0.796), Vector2(0.798, 0.796), Vector2(0.799, 0.797), Vector2(0.798, 0.796), Vector2(0.798, 0.795), Vector2(0.798, 0.795), Vector2(0.798, 0.796), Vector2(0.797, 0.795), Vector2(0.797, 0.795), Vector2(0.796, 0.794), Vector2(0.796, 0.794), Vector2(0.796, 0.794), Vector2(0.795, 0.806), Vector2(0.794, 0.819), Vector2(0.794, 0.832), Vector2(0.794, 0.847), Vector2(0.792, 0.845), Vector2(0.792, 0.845), Vector2(0.792, 0.844), Vector2(0.793, 0.845), Vector2(0.794, 0.837), Vector2(0.795, 0.83), Vector2(0.796, 0.822), Vector2(0.797, 0.814), Vector2(0.798, 0.807), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.795, 0.803), Vector2(0.796, 0.811), Vector2(0.796, 0.808), Vector2(0.796, 0.805), Vector2(0.797, 0.803), Vector2(0.799, 0.802), Vector2(0.8, 0.8), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.793, 0.793), Vector2(0.791, 0.791), Vector2(0.789, 0.789), Vector2(0.789, 0.789), Vector2(0.787, 0.787), Vector2(0.788, 0.788), Vector2(0.787, 0.787), Vector2(0.788, 0.788), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.786, 0.786), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.788, 0.788), Vector2(0.786, 0.786), Vector2(0.787, 0.787), Vector2(0.786, 0.786), Vector2(0.786, 0.786), Vector2(0.785, 0.785), Vector2(0.786, 0.786), Vector2(0.784, 0.784), Vector2(0.783, 0.783), Vector2(0.784, 0.784), Vector2(0.784, 0.784), Vector2(0.786, 0.786), Vector2(0.784, 0.784), Vector2(0.784, 0.784), Vector2(0.784, 0.784), Vector2(0.784, 0.784), Vector2(0.783, 0.692), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783)]
}
tracks/109/type = "value"
tracks/109/imported = false
tracks/109/enabled = true
tracks/109/path = NodePath("Body/Zombie_dolphinrider_innerleg_upper:skew")
tracks/109/interp = 1
tracks/109/loop_wrap = true
tracks/109/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -3e-07, 4e-07, -2e-07, 5e-07, 2e-07, -5e-07, 2e-07, -5e-07, 2e-07, 5e-07, -2e-07, 4e-07, -3e-07, 0.0, 2e-07, 0.0, 5e-07, 3e-07, -2e-07, -4e-07, 0.0, 1e-07, -0.0174528, -0.0366517, -0.0523603, -0.0715582, -0.0698133, -0.0733043, -0.0750496, -0.0715589, -0.0715585, -0.069813, -0.0750496, -0.0733035, -0.069813, -0.0733042, -0.0733037, -0.0733043, -0.0733038, -0.0733041, -0.0750487, -0.0750489, -0.0733038, -0.075049, -0.0733035, -0.069813, -0.0698132, -0.0523596, -0.0436333, -0.034907, -0.0226891, -0.0087268, 2e-07, 2e-07, 0.0, 5e-07, 3e-07, -2e-07, -4e-07, 0.0, 1e-07, -0.0174528, -0.0366517, -0.0523603, -0.0715582, -0.0698133, -0.0733043, -0.0750496, -0.0715589, -0.0715585, -0.069813, -0.0750496, -0.0733035, -0.069813, -0.0733042, -0.0733037, -0.0733043, -0.0733038, -0.0733041, -0.0750487, -0.0750489, -0.0733038, -0.075049, -0.0733035, -0.069813, -0.0698132, -0.0523596, -0.0436333, -0.034907, -0.0226891, -0.0087268, 2e-07, 0.0, 1e-07, -1e-07, 0.0, 4e-07, -5e-07, 3e-07, 5e-07, 3e-07, 4e-07, -3e-07, -4e-07, -1e-07, 2e-07, -3e-07, 2e-07, 4e-07, -2e-07, 0.0, 4e-07, 0.0, 3e-07, 2e-07, 1e-07, 3e-07, 5e-07, 3e-07, 2e-07, 3e-07, -1e-07, -3e-07, -1e-07, -2e-07, -4e-07, -2e-07, 3e-07, 5e-07, 5e-07, -1e-07, 0.0, -2e-07, 4e-07, -3e-07, -3e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, 0.0, -3e-07, -1e-07, 0.0, 1e-07, -4e-07, -1e-07, -1e-07, 0.0, -1e-07, -2e-07, 4e-07, -2e-07, 3e-07, -1e-07, 0.158825, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07]
}
tracks/110/type = "value"
tracks/110/imported = false
tracks/110/enabled = true
tracks/110/path = NodePath("Body/Zombie_dolphinrider_innerleg_upper:texture")
tracks/110/interp = 1
tracks/110/loop_wrap = true
tracks/110/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("5_fuck"), ExtResource("5_fuck")]
}
tracks/111/type = "value"
tracks/111/imported = false
tracks/111/enabled = true
tracks/111/path = NodePath("Body/Zombie_dolphinrider_innerleg_upper:self_modulate")
tracks/111/interp = 1
tracks/111/loop_wrap = true
tracks/111/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0)]
}
tracks/112/type = "value"
tracks/112/imported = false
tracks/112/enabled = true
tracks/112/path = NodePath("Body/Zombie_dolphinrider_dolphininwater:visible")
tracks/112/interp = 1
tracks/112/loop_wrap = true
tracks/112/keys = {
"times": PackedFloat32Array(0, 10.0833, 10.1667, 12.1667, 12.25, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true, false, false]
}
tracks/113/type = "value"
tracks/113/imported = false
tracks/113/enabled = true
tracks/113/path = NodePath("Body/Zombie_dolphinrider_dolphininwater:position")
tracks/113/interp = 1
tracks/113/loop_wrap = true
tracks/113/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(-60.1, 94), Vector2(-60.1, 94.3), Vector2(-60.1, 94.5), Vector2(-60.1, 94.7), Vector2(-60.1, 94.5), Vector2(-60.1, 94.3), Vector2(-60.1, 94), Vector2(-60.1, 94), Vector2(-60.1, 95), Vector2(-60.1, 96), Vector2(-60.1, 95), Vector2(-60.1, 94), Vector2(-59.5, 93.3), Vector2(-58.8, 92.7), Vector2(-58.1, 91.9), Vector2(-57.5, 91.2), Vector2(-57.5, 91.2), Vector2(-55.9, 88), Vector2(-53.9, 84.5), Vector2(-55.8, 87.9), Vector2(-57.5, 91.2), Vector2(-57.7, 93.1), Vector2(-57.7, 95), Vector2(-64.4, 63.4), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2), Vector2(-74.7, 30.2)]
}
tracks/114/type = "value"
tracks/114/imported = false
tracks/114/enabled = true
tracks/114/path = NodePath("Body/Zombie_dolphinrider_dolphininwater:rotation")
tracks/114/interp = 1
tracks/114/loop_wrap = true
tracks/114/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.013963, 0.031416, 0.048869, 0.064577, 0.064577, 0.115192, 0.169297, 0.115192, 0.064577, 0.034907, 0.010472, 0.1309, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372, 0.141372]
}
tracks/115/type = "value"
tracks/115/imported = false
tracks/115/enabled = true
tracks/115/path = NodePath("Body/Zombie_dolphinrider_dolphininwater:scale")
tracks/115/interp = 1
tracks/115/loop_wrap = true
tracks/115/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.639, 0.639), Vector2(0.639, 0.639), Vector2(0.639, 0.639), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.64, 0.64), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638), Vector2(0.638, 0.638)]
}
tracks/116/type = "value"
tracks/116/imported = false
tracks/116/enabled = true
tracks/116/path = NodePath("Body/Zombie_dolphinrider_dolphininwater:skew")
tracks/116/interp = 1
tracks/116/loop_wrap = true
tracks/116/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4e-07, -1e-07, 2e-07, 2e-07, 2e-07, -3e-07, -1e-07, -3e-07, 2e-07, -4e-07, 0.0, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07]
}
tracks/117/type = "value"
tracks/117/imported = false
tracks/117/enabled = true
tracks/117/path = NodePath("Body/Zombie_dolphinrider_dolphininwater:texture")
tracks/117/interp = 1
tracks/117/loop_wrap = true
tracks/117/keys = {
"times": PackedFloat32Array(0, 10.0833, 10.1667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [null, null, ExtResource("6_fuck"), ExtResource("6_fuck")]
}
tracks/118/type = "value"
tracks/118/imported = false
tracks/118/enabled = true
tracks/118/path = NodePath("Body/Zombie_dolphinrider_dolphininwater:self_modulate")
tracks/118/interp = 1
tracks/118/loop_wrap = true
tracks/118/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0)]
}
tracks/119/type = "value"
tracks/119/imported = false
tracks/119/enabled = true
tracks/119/path = NodePath("Body/Layer 185:visible")
tracks/119/interp = 1
tracks/119/loop_wrap = true
tracks/119/keys = {
"times": PackedFloat32Array(0, 12, 12.0833, 13.1667, 13.25, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true, false, false]
}
tracks/120/type = "value"
tracks/120/imported = false
tracks/120/enabled = true
tracks/120/path = NodePath("Body/Layer 185:position")
tracks/120/interp = 1
tracks/120/loop_wrap = true
tracks/120/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(-1.6, 97.8), Vector2(-11.2, 64.5), Vector2(-26.3, 43), Vector2(-41.4, 21.6), Vector2(-45.5, 19.4), Vector2(-50.2, 17.3), Vector2(-55.3, 14.9), Vector2(-66, 40.5), Vector2(-77.1, 66.1), Vector2(-78, 77.1), Vector2(-79, 88), Vector2(-80.2, 98.8), Vector2(-81.4, 109.8), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4), Vector2(-88.7, 150.4)]
}
tracks/121/type = "value"
tracks/121/imported = false
tracks/121/enabled = true
tracks/121/path = NodePath("Body/Layer 185:rotation")
tracks/121/interp = 1
tracks/121/loop_wrap = true
tracks/121/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values
}
tracks/122/type = "value"
tracks/122/imported = false
tracks/122/enabled = true
tracks/122/path = NodePath("Body/Layer 185:scale")
tracks/122/interp = 1
tracks/122/loop_wrap = true
tracks/122/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(0.831, 0.796), Vector2(0.831, 0.796), Vector2(0.83, 0.795), Vector2(0.831, 0.796), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.831, 0.796), Vector2(0.829, 0.795), Vector2(0.829, 0.794), Vector2(0.829, 0.794), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795)]
}
tracks/123/type = "value"
tracks/123/imported = false
tracks/123/enabled = true
tracks/123/path = NodePath("Body/Layer 185:skew")
tracks/123/interp = 1
tracks/123/loop_wrap = true
tracks/123/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2e-07, 2e-07, 3e-07, -2e-07, -1e-07, 3e-07, -4e-07, -1e-07, 2e-07, 0.0, 2e-07, 4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07]
}
tracks/124/type = "value"
tracks/124/imported = false
tracks/124/enabled = true
tracks/124/path = NodePath("Body/Layer 185:texture")
tracks/124/interp = 1
tracks/124/loop_wrap = true
tracks/124/keys = {
"times": PackedFloat32Array(0, 12, 12.0833, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [null, null, ExtResource("7_fuck"), ExtResource("7_fuck")]
}
tracks/125/type = "value"
tracks/125/imported = false
tracks/125/enabled = true
tracks/125/path = NodePath("Body/Layer 185:self_modulate")
tracks/125/interp = 1
tracks/125/loop_wrap = true
tracks/125/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0)]
}
tracks/126/type = "value"
tracks/126/imported = false
tracks/126/enabled = true
tracks/126/path = NodePath("Body/Layer 1852:visible")
tracks/126/interp = 1
tracks/126/loop_wrap = true
tracks/126/keys = {
"times": PackedFloat32Array(0, 12, 12.0833, 13.1667, 13.25, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true, false, false]
}
tracks/127/type = "value"
tracks/127/imported = false
tracks/127/enabled = true
tracks/127/path = NodePath("Body/Layer 1852:position")
tracks/127/interp = 1
tracks/127/loop_wrap = true
tracks/127/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(-38, 100.8), Vector2(-47.7, 67.3), Vector2(-62.8, 43.5), Vector2(-77.9, 19.7), Vector2(-81.9, 23.2), Vector2(-85.5, 26.8), Vector2(-88.6, 29.8), Vector2(-97.5, 59), Vector2(-106.2, 88.3), Vector2(-105.3, 101.3), Vector2(-104.3, 114.3), Vector2(-103.3, 127.1), Vector2(-102.2, 139.8), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4), Vector2(-109.6, 180.4)]
}
tracks/128/type = "value"
tracks/128/imported = false
tracks/128/enabled = true
tracks/128/path = NodePath("Body/Layer 1852:rotation")
tracks/128/interp = 1
tracks/128/loop_wrap = true
tracks/128/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values
}
tracks/129/type = "value"
tracks/129/imported = false
tracks/129/enabled = true
tracks/129/path = NodePath("Body/Layer 1852:scale")
tracks/129/interp = 1
tracks/129/loop_wrap = true
tracks/129/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795)]
}
tracks/130/type = "value"
tracks/130/imported = false
tracks/130/enabled = true
tracks/130/path = NodePath("Body/Layer 1852:skew")
tracks/130/interp = 1
tracks/130/loop_wrap = true
tracks/130/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2e-07, 2e-07, 3e-07, -2e-07, -1e-07, 3e-07, -4e-07, -1e-07, 2e-07, 0.0, 2e-07, 4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07]
}
tracks/131/type = "value"
tracks/131/imported = false
tracks/131/enabled = true
tracks/131/path = NodePath("Body/Layer 1852:texture")
tracks/131/interp = 1
tracks/131/loop_wrap = true
tracks/131/keys = {
"times": PackedFloat32Array(0, 12.0833, 20.75),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [null, ExtResource("8_fuck"), ExtResource("8_fuck")]
}
tracks/132/type = "value"
tracks/132/imported = false
tracks/132/enabled = true
tracks/132/path = NodePath("Body/Layer 1852:self_modulate")
tracks/132/interp = 1
tracks/132/loop_wrap = true
tracks/132/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0)]
}
tracks/133/type = "value"
tracks/133/imported = false
tracks/133/enabled = true
tracks/133/path = NodePath("Body/Layer 1853:visible")
tracks/133/interp = 1
tracks/133/loop_wrap = true
tracks/133/keys = {
"times": PackedFloat32Array(0, 12, 12.0833, 13.1667, 13.25, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true, false, false]
}
tracks/134/type = "value"
tracks/134/imported = false
tracks/134/enabled = true
tracks/134/path = NodePath("Body/Layer 1853:position")
tracks/134/interp = 1
tracks/134/loop_wrap = true
tracks/134/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(-58.1, 93.4), Vector2(-67.7, 59.7), Vector2(-82.3, 34.6), Vector2(-96.8, 9.5), Vector2(-102.1, 16.2), Vector2(-106.5, 23), Vector2(-110, 29.3), Vector2(-118.8, 61), Vector2(-127.1, 92.8), Vector2(-125.8, 107.3), Vector2(-124.3, 121.9), Vector2(-122.6, 136.3), Vector2(-120.8, 150.5), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1), Vector2(-128.1, 191.1)]
}
tracks/135/type = "value"
tracks/135/imported = false
tracks/135/enabled = true
tracks/135/path = NodePath("Body/Layer 1853:rotation")
tracks/135/interp = 1
tracks/135/loop_wrap = true
tracks/135/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values
}
tracks/136/type = "value"
tracks/136/imported = false
tracks/136/enabled = true
tracks/136/path = NodePath("Body/Layer 1853:scale")
tracks/136/interp = 1
tracks/136/loop_wrap = true
tracks/136/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795)]
}
tracks/137/type = "value"
tracks/137/imported = false
tracks/137/enabled = true
tracks/137/path = NodePath("Body/Layer 1853:skew")
tracks/137/interp = 1
tracks/137/loop_wrap = true
tracks/137/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2e-07, 2e-07, 3e-07, -2e-07, -1e-07, 3e-07, -4e-07, -1e-07, 2e-07, 0.0, 2e-07, 4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07]
}
tracks/138/type = "value"
tracks/138/imported = false
tracks/138/enabled = true
tracks/138/path = NodePath("Body/Layer 1853:texture")
tracks/138/interp = 1
tracks/138/loop_wrap = true
tracks/138/keys = {
"times": PackedFloat32Array(0, 12, 12.0833, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [null, null, ExtResource("9_fuck"), ExtResource("9_fuck")]
}
tracks/139/type = "value"
tracks/139/imported = false
tracks/139/enabled = true
tracks/139/path = NodePath("Body/Layer 1853:self_modulate")
tracks/139/interp = 1
tracks/139/loop_wrap = true
tracks/139/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0)]
}
tracks/140/type = "value"
tracks/140/imported = false
tracks/140/enabled = true
tracks/140/path = NodePath("Body/Layer 1854:visible")
tracks/140/interp = 1
tracks/140/loop_wrap = true
tracks/140/keys = {
"times": PackedFloat32Array(0, 12, 12.0833, 13.1667, 13.25, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true, false, false]
}
tracks/141/type = "value"
tracks/141/imported = false
tracks/141/enabled = true
tracks/141/path = NodePath("Body/Layer 1854:position")
tracks/141/interp = 1
tracks/141/loop_wrap = true
tracks/141/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(-41.7, 46), Vector2(-51, 12.4), Vector2(-62.5, -11.3), Vector2(-74, -35), Vector2(-86.7, -31.3), Vector2(-98.8, -26.4), Vector2(-110.1, -20.6), Vector2(-124.6, 11.3), Vector2(-138.7, 44), Vector2(-141.1, 59.6), Vector2(-143.2, 75.6), Vector2(-145.1, 91.5), Vector2(-146.8, 107.7), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3), Vector2(-154.2, 148.3)]
}
tracks/142/type = "value"
tracks/142/imported = false
tracks/142/enabled = true
tracks/142/path = NodePath("Body/Layer 1854:rotation")
tracks/142/interp = 1
tracks/142/loop_wrap = true
tracks/142/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values
}
tracks/143/type = "value"
tracks/143/imported = false
tracks/143/enabled = true
tracks/143/path = NodePath("Body/Layer 1854:scale")
tracks/143/interp = 1
tracks/143/loop_wrap = true
tracks/143/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795)]
}
tracks/144/type = "value"
tracks/144/imported = false
tracks/144/enabled = true
tracks/144/path = NodePath("Body/Layer 1854:skew")
tracks/144/interp = 1
tracks/144/loop_wrap = true
tracks/144/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2e-07, 2e-07, 3e-07, -2e-07, -1e-07, 3e-07, -4e-07, -1e-07, 2e-07, 0.0, 2e-07, 4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07]
}
tracks/145/type = "value"
tracks/145/imported = false
tracks/145/enabled = true
tracks/145/path = NodePath("Body/Layer 1854:texture")
tracks/145/interp = 1
tracks/145/loop_wrap = true
tracks/145/keys = {
"times": PackedFloat32Array(0, 12.0833, 20.75),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [null, ExtResource("10_fuck"), ExtResource("10_fuck")]
}
tracks/146/type = "value"
tracks/146/imported = false
tracks/146/enabled = true
tracks/146/path = NodePath("Body/Layer 1854:self_modulate")
tracks/146/interp = 1
tracks/146/loop_wrap = true
tracks/146/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0)]
}
tracks/147/type = "value"
tracks/147/imported = false
tracks/147/enabled = true
tracks/147/path = NodePath("Body/Layer 1855:visible")
tracks/147/interp = 1
tracks/147/loop_wrap = true
tracks/147/keys = {
"times": PackedFloat32Array(0, 12, 12.0833, 13.1667, 13.25, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true, false, false]
}
tracks/148/type = "value"
tracks/148/imported = false
tracks/148/enabled = true
tracks/148/path = NodePath("Body/Layer 1855:position")
tracks/148/interp = 1
tracks/148/loop_wrap = true
tracks/148/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(-31.8, 100.5), Vector2(-41.5, 67), Vector2(-56.6, 43.6), Vector2(-71.7, 20.2), Vector2(-75.7, 22.7), Vector2(-79.5, 25.3), Vector2(-82.8, 27.4), Vector2(-92.1, 56), Vector2(-101.1, 84.7), Vector2(-100.5, 97.3), Vector2(-99.9, 109.9), Vector2(-99.3, 122.3), Vector2(-98.6, 134.8), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4), Vector2(-105.9, 175.4)]
}
tracks/149/type = "value"
tracks/149/imported = false
tracks/149/enabled = true
tracks/149/path = NodePath("Body/Layer 1855:rotation")
tracks/149/interp = 1
tracks/149/loop_wrap = true
tracks/149/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values
}
tracks/150/type = "value"
tracks/150/imported = false
tracks/150/enabled = true
tracks/150/path = NodePath("Body/Layer 1855:scale")
tracks/150/interp = 1
tracks/150/loop_wrap = true
tracks/150/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795)]
}
tracks/151/type = "value"
tracks/151/imported = false
tracks/151/enabled = true
tracks/151/path = NodePath("Body/Layer 1855:skew")
tracks/151/interp = 1
tracks/151/loop_wrap = true
tracks/151/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2e-07, 2e-07, 3e-07, -2e-07, -1e-07, 3e-07, -4e-07, -1e-07, 2e-07, 0.0, 2e-07, 4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07]
}
tracks/152/type = "value"
tracks/152/imported = false
tracks/152/enabled = true
tracks/152/path = NodePath("Body/Layer 1855:texture")
tracks/152/interp = 1
tracks/152/loop_wrap = true
tracks/152/keys = {
"times": PackedFloat32Array(0, 12, 12.0833, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [null, null, ExtResource("11_fuck"), ExtResource("11_fuck")]
}
tracks/153/type = "value"
tracks/153/imported = false
tracks/153/enabled = true
tracks/153/path = NodePath("Body/Layer 1855:self_modulate")
tracks/153/interp = 1
tracks/153/loop_wrap = true
tracks/153/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0)]
}
tracks/154/type = "value"
tracks/154/imported = false
tracks/154/enabled = true
tracks/154/path = NodePath("Body/Zombie_dolphinrider_body2:visible")
tracks/154/interp = 1
tracks/154/loop_wrap = true
tracks/154/keys = {
"times": PackedFloat32Array(0, 13.25, 13.3333, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [true, true, false, false]
}
tracks/155/type = "value"
tracks/155/imported = false
tracks/155/enabled = true
tracks/155/path = NodePath("Body/Zombie_dolphinrider_body2:position")
tracks/155/interp = 1
tracks/155/loop_wrap = true
tracks/155/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(40.4, 70.2), Vector2(40, 70.5), Vector2(39.6, 70.8), Vector2(39.2, 71.2), Vector2(38.8, 71.6), Vector2(38.5, 72), Vector2(38.1, 72.3), Vector2(37.7, 72.8), Vector2(38.1, 72.3), Vector2(38.5, 72), Vector2(38.9, 71.7), Vector2(39.3, 71.2), Vector2(39.6, 70.8), Vector2(40, 70.5), Vector2(40.4, 70.2), Vector2(41.6, 69.9), Vector2(41.9, 69.6), Vector2(42.1, 69.2), Vector2(42.4, 68.8), Vector2(42.8, 68.5), Vector2(43, 68), Vector2(43.4, 67.4), Vector2(43.8, 66.8), Vector2(43.5, 67.1), Vector2(43.5, 67.5), Vector2(43.3, 67.8), Vector2(43.5, 68.2), Vector2(41, 70.8), Vector2(38.6, 73.5), Vector2(36.4, 76.2), Vector2(34.1, 78.8), Vector2(34.8, 77.4), Vector2(35.4, 76.1), Vector2(36.1, 74.7), Vector2(36.4, 73.5), Vector2(37.5, 73.1), Vector2(38.7, 72.7), Vector2(39.8, 72.3), Vector2(41, 72), Vector2(42.2, 71.6), Vector2(42.5, 70.7), Vector2(42.9, 69.9), Vector2(43.3, 68.9), Vector2(44, 68.1), Vector2(41.4, 70.7), Vector2(38.9, 73.4), Vector2(36.5, 76.1), Vector2(34.1, 78.8), Vector2(35.4, 77.3), Vector2(36.7, 75.8), Vector2(38, 74.3), Vector2(39.3, 72.8), Vector2(40.5, 71.3), Vector2(41.6, 69.9), Vector2(41.6, 69.9), Vector2(41.9, 69.6), Vector2(42.1, 69.2), Vector2(42.4, 68.8), Vector2(42.8, 68.5), Vector2(43, 68), Vector2(43.4, 67.4), Vector2(43.8, 66.8), Vector2(43.5, 67.1), Vector2(43.5, 67.5), Vector2(43.3, 67.8), Vector2(43.5, 68.2), Vector2(41, 70.8), Vector2(38.6, 73.5), Vector2(36.4, 76.2), Vector2(34.1, 78.8), Vector2(34.8, 77.4), Vector2(35.4, 76.1), Vector2(36.1, 74.7), Vector2(36.4, 73.5), Vector2(37.5, 73.1), Vector2(38.7, 72.7), Vector2(39.8, 72.3), Vector2(41, 72), Vector2(42.2, 71.6), Vector2(42.6, 70.9), Vector2(43, 70.4), Vector2(43.5, 69.8), Vector2(44.2, 69.1), Vector2(41.5, 71.3), Vector2(39, 73.9), Vector2(36.5, 76.3), Vector2(34.1, 78.8), Vector2(35.4, 77.3), Vector2(36.7, 75.8), Vector2(38, 74.3), Vector2(39.3, 72.8), Vector2(40.5, 71.3), Vector2(41.6, 69.9), Vector2(40.4, 70.2), Vector2(40, 70.3), Vector2(39.6, 70.6), Vector2(39.3, 70.8), Vector2(38.9, 71.1), Vector2(38.5, 71.2), Vector2(38.3, 71.5), Vector2(42, 70.3), Vector2(45.8, 69.5), Vector2(49.6, 68.6), Vector2(52.1, 70), Vector2(54.7, 71.5), Vector2(57.3, 73), Vector2(59.8, 74.6), Vector2(55.6, 73), Vector2(51.6, 72), Vector2(47.8, 71.1), Vector2(43.9, 70.5), Vector2(40.4, 70.2), Vector2(40, 74), Vector2(39.5, 77.8), Vector2(39.1, 81.6), Vector2(30.3, 68.3), Vector2(21.6, 55.1), Vector2(12.9, 41.9), Vector2(13.3, 28.7), Vector2(14, 15.9), Vector2(14.9, 3.5), Vector2(13.5, 1.7), Vector2(12.1, 0), Vector2(10.7, 0.8), Vector2(9.3, 1.7), Vector2(7.9, 2.6), Vector2(6.5, 3.5), Vector2(-1.8, 30.2), Vector2(-10.2, 57), Vector2(-18.5, 83.6), Vector2(-19.3, 85.2), Vector2(-20.1, 86.7), Vector2(-20.2, 85.7), Vector2(-20.3, 84.5), Vector2(-19.2, 84.5), Vector2(-18.2, 84.4), Vector2(-17.2, 84.3), Vector2(-16.1, 84.3), Vector2(-16.1, 84.3), Vector2(-15.8, 83.2), Vector2(-15.5, 82.2), Vector2(-15.8, 83.3), Vector2(-16.1, 84.3), Vector2(-16.4, 85.1), Vector2(-16.8, 85.8), Vector2(-24.6, 56.5), Vector2(-32.2, 27.2), Vector2(-47.4, 4.4), Vector2(-62.6, -18.1), Vector2(-72.2, -16), Vector2(-81.9, -13.3), Vector2(-91.3, -10.6), Vector2(-104.7, 18.7), Vector2(-118.1, 48.2), Vector2(-120.1, 62.5), Vector2(-122.1, 76.7), Vector2(-124, 91), Vector2(-125.9, 105.3), Vector2(-127.6, 114.4), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8), Vector2(-130.8, 129.8)]
}
tracks/156/type = "value"
tracks/156/imported = false
tracks/156/enabled = true
tracks/156/path = NodePath("Body/Zombie_dolphinrider_body2:rotation")
tracks/156/interp = 1
tracks/156/loop_wrap = true
tracks/156/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.012217, -0.024435, -0.038397, -0.055851, -0.068068, -0.08203, -0.099484, -0.08203, -0.068068, -0.055851, -0.038397, -0.024435, -0.012217, 0.0, 0.034907, 0.048869, 0.066323, 0.083776, 0.102974, 0.1309, 0.162316, 0.195477, 0.162316, 0.127409, 0.095993, 0.066323, 0.010472, -0.038397, -0.090757, -0.146608, -0.10821, -0.073304, -0.038397, -0.006981, -0.015708, -0.024435, -0.033161, -0.041888, -0.054105, 0.017453, 0.092502, 0.171042, 0.246091, 0.144862, 0.048869, -0.047124, -0.146608, -0.113446, -0.08203, -0.05236, -0.020944, 0.005236, 0.034907, 0.034907, 0.048869, 0.066323, 0.083776, 0.102974, 0.1309, 0.162316, 0.195477, 0.162316, 0.127409, 0.095993, 0.066323, 0.010472, -0.038397, -0.090757, -0.146608, -0.10821, -0.073304, -0.038397, -0.006981, -0.015708, -0.024435, -0.033161, -0.041888, -0.054105, -0.003491, 0.040143, 0.087266, 0.137881, 0.066323, -0.003491, -0.073304, -0.146608, -0.113446, -0.08203, -0.05236, -0.020944, 0.005236, 0.034907, 0.0, 0.017453, 0.040143, 0.057596, 0.07854, 0.097738, 0.120428, 0.223402, 0.328122, 0.436332, 0.511381, 0.586431, 0.66148, 0.736529, 0.586431, 0.441568, 0.293215, 0.144862, 0.0, 0.0, 0.0, 0.0, 0.048869, 0.101229, 0.153589, 0.310669, 0.471239, 0.631809, 0.630064, 0.631809, 0.630064, 0.630064, 0.630064, 0.631809, 0.603884, 0.581195, 0.55676, 0.499164, 0.443314, 0.499164, 0.55676, 0.581195, 0.603884, 0.630064, 0.652753, 0.652753, 0.656244, 0.656244, 0.656244, 0.652753, 0.624828, 0.598648, 0.630064, 0.66497, 0.668461, 0.671952, 0.520108, 0.366519, 0.214675, 0.113446, 0.015708, -0.059341, -0.137881, -0.21293, -0.293215, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888, -0.041888]
}
tracks/157/type = "value"
tracks/157/imported = false
tracks/157/enabled = true
tracks/157/path = NodePath("Body/Zombie_dolphinrider_body2:scale")
tracks/157/interp = 1
tracks/157/loop_wrap = true
tracks/157/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.812, 0.799), Vector2(0.825, 0.799), Vector2(0.839, 0.799), Vector2(0.852, 0.799), Vector2(0.85, 0.799), Vector2(0.848, 0.799), Vector2(0.846, 0.798), Vector2(0.845, 0.798), Vector2(0.833, 0.798), Vector2(0.822, 0.799), Vector2(0.811, 0.799), Vector2(0.799, 0.799), Vector2(0.801, 0.799), Vector2(0.804, 0.799), Vector2(0.806, 0.799), Vector2(0.808, 0.799), Vector2(0.81, 0.8), Vector2(0.819, 0.799), Vector2(0.827, 0.799), Vector2(0.836, 0.799), Vector2(0.845, 0.799), Vector2(0.845, 0.799), Vector2(0.845, 0.799), Vector2(0.845, 0.798), Vector2(0.845, 0.798), Vector2(0.837, 0.798), Vector2(0.829, 0.799), Vector2(0.822, 0.799), Vector2(0.815, 0.799), Vector2(0.807, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.812, 0.799), Vector2(0.825, 0.799), Vector2(0.839, 0.799), Vector2(0.852, 0.799), Vector2(0.85, 0.799), Vector2(0.848, 0.799), Vector2(0.846, 0.798), Vector2(0.845, 0.798), Vector2(0.833, 0.798), Vector2(0.822, 0.799), Vector2(0.811, 0.799), Vector2(0.799, 0.799), Vector2(0.801, 0.799), Vector2(0.804, 0.799), Vector2(0.806, 0.799), Vector2(0.808, 0.799), Vector2(0.81, 0.8), Vector2(0.819, 0.799), Vector2(0.828, 0.799), Vector2(0.837, 0.799), Vector2(0.846, 0.799), Vector2(0.845, 0.799), Vector2(0.845, 0.799), Vector2(0.845, 0.798), Vector2(0.845, 0.798), Vector2(0.837, 0.798), Vector2(0.829, 0.799), Vector2(0.822, 0.799), Vector2(0.815, 0.799), Vector2(0.807, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.795, 0.795), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.792, 0.792), Vector2(0.793, 0.793), Vector2(0.791, 0.791), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.79, 0.79), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791)]
}
tracks/158/type = "value"
tracks/158/imported = false
tracks/158/enabled = true
tracks/158/path = NodePath("Body/Zombie_dolphinrider_body2:skew")
tracks/158/interp = 1
tracks/158/loop_wrap = true
tracks/158/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -3e-07, 4e-07, -2e-07, 5e-07, 2e-07, -5e-07, 2e-07, -5e-07, 2e-07, 5e-07, -2e-07, 4e-07, -3e-07, 0.0, -4e-07, 2e-07, -5e-07, -2e-07, 4e-07, -3e-07, -4e-07, -1e-07, 0.0314155, 0.0698132, 0.101229, 0.132645, 0.116937, 0.0959929, 0.0785397, 0.0628322, 0.0436328, 0.0296708, 0.0139624, -3e-07, 0.0296706, 0.0593416, 0.0907569, 0.120428, 0.157079, 0.109956, 0.055851, 0.0034909, -0.0471235, -0.017453, 0.0087269, 0.0349067, 0.0628322, 0.0488688, 0.0401421, 0.031416, 0.0174533, 0.0087266, -4e-07, -4e-07, 2e-07, -5e-07, -2e-07, 4e-07, -3e-07, -4e-07, -1e-07, 0.0314155, 0.0698132, 0.101229, 0.132645, 0.116937, 0.0959929, 0.0785397, 0.0628322, 0.0436328, 0.0296708, 0.0139624, -3e-07, 0.0296706, 0.0593416, 0.0907569, 0.120428, 0.157079, 0.1309, 0.10821, 0.0872669, 0.0610865, 0.061086, 0.0610869, 0.0610867, 0.0628322, 0.0488688, 0.0401421, 0.031416, 0.0174533, 0.0087266, -4e-07, 0.0, 3e-07, -4e-07, -1e-07, -2e-07, 4e-07, -3e-07, 1e-07, -1e-07, 3e-07, 5e-07, -4e-07, -2e-07, -1e-07, -4e-07, 3e-07, 3e-07, 3e-07, 0.0, 0.0, 0.0, 0.0, 2e-07, 1e-07, 0.0, -4e-07, -1e-07, 2e-07, -2e-07, 2e-07, -2e-07, -2e-07, -2e-07, 2e-07, -1e-07, -4e-07, 0.0, 2e-07, -4e-07, 2e-07, 0.0, -4e-07, -1e-07, -2e-07, 1e-07, 1e-07, -2e-07, -2e-07, -2e-07, 1e-07, -1e-07, -1e-07, -2e-07, 4e-07, 1e-07, -2e-07, 1e-07, 1e-07, 5e-07, 4e-07, 0.0, -2e-07, 0.0, -2e-07, -3e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07]
}
tracks/159/type = "value"
tracks/159/imported = false
tracks/159/enabled = true
tracks/159/path = NodePath("Body/Zombie_dolphinrider_body2:texture")
tracks/159/interp = 1
tracks/159/loop_wrap = true
tracks/159/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("12_fuck"), ExtResource("12_fuck")]
}
tracks/160/type = "value"
tracks/160/imported = false
tracks/160/enabled = true
tracks/160/path = NodePath("Body/Zombie_dolphinrider_body2:self_modulate")
tracks/160/interp = 1
tracks/160/loop_wrap = true
tracks/160/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0)]
}
tracks/161/type = "value"
tracks/161/imported = false
tracks/161/enabled = true
tracks/161/path = NodePath("Body/Zombie_dolphinrider_body1:visible")
tracks/161/interp = 1
tracks/161/loop_wrap = true
tracks/161/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [true, true]
}
tracks/162/type = "value"
tracks/162/imported = false
tracks/162/enabled = true
tracks/162/path = NodePath("Body/Zombie_dolphinrider_body1:position")
tracks/162/interp = 1
tracks/162/loop_wrap = true
tracks/162/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(23.6, 42), Vector2(22.8, 42.5), Vector2(22, 43.2), Vector2(21.3, 43.8), Vector2(20.5, 44.5), Vector2(19.7, 45.1), Vector2(18.9, 45.8), Vector2(18.1, 46.4), Vector2(18.9, 45.7), Vector2(19.7, 45.1), Vector2(20.4, 44.5), Vector2(21.3, 43.8), Vector2(22, 43.2), Vector2(22.8, 42.6), Vector2(23.6, 42), Vector2(25.9, 41.1), Vector2(26.6, 40.6), Vector2(27.4, 39.9), Vector2(28.1, 39.4), Vector2(28.9, 38.8), Vector2(30.5, 37.6), Vector2(32.2, 36.4), Vector2(34, 35), Vector2(35, 34.6), Vector2(36.1, 34.3), Vector2(37.2, 33.8), Vector2(38.5, 33.4), Vector2(32.5, 37.4), Vector2(26.8, 41.5), Vector2(21.2, 45.9), Vector2(15.8, 50.4), Vector2(16.7, 49.2), Vector2(17.6, 48), Vector2(18.4, 46.8), Vector2(19.3, 45.5), Vector2(21.2, 44.1), Vector2(23.2, 42.8), Vector2(25, 41.4), Vector2(27, 40), Vector2(28.9, 38.8), Vector2(30.9, 37.3), Vector2(33, 35.7), Vector2(35, 34), Vector2(37.3, 32.5), Vector2(31.7, 36.8), Vector2(26.1, 41.1), Vector2(20.8, 45.7), Vector2(15.8, 50.4), Vector2(17.5, 48.9), Vector2(19.1, 47.3), Vector2(20.8, 45.9), Vector2(22.4, 44.3), Vector2(24.1, 42.8), Vector2(25.9, 41.1), Vector2(25.9, 41.1), Vector2(26.6, 40.6), Vector2(27.4, 39.9), Vector2(28.1, 39.4), Vector2(28.9, 38.8), Vector2(30.5, 37.6), Vector2(32.2, 36.4), Vector2(34, 35), Vector2(35, 34.6), Vector2(36.1, 34.3), Vector2(37.2, 33.8), Vector2(38.5, 33.4), Vector2(32.5, 37.4), Vector2(26.8, 41.5), Vector2(21.2, 45.9), Vector2(15.8, 50.4), Vector2(16.7, 49.2), Vector2(17.6, 48), Vector2(18.4, 46.8), Vector2(19.3, 45.5), Vector2(21.2, 44.1), Vector2(23.2, 42.8), Vector2(25, 41.4), Vector2(27, 40), Vector2(28.9, 38.8), Vector2(30.9, 37.5), Vector2(33, 36.3), Vector2(35, 35), Vector2(37.3, 33.8), Vector2(31.7, 37.7), Vector2(26.2, 41.8), Vector2(20.8, 46), Vector2(15.8, 50.4), Vector2(17.5, 48.9), Vector2(19.1, 47.3), Vector2(20.8, 45.9), Vector2(22.4, 44.3), Vector2(24.1, 42.8), Vector2(25.9, 41.1), Vector2(23.6, 42), Vector2(22, 43.3), Vector2(20.4, 44.5), Vector2(18.9, 45.9), Vector2(17.3, 47.1), Vector2(15.8, 48.5), Vector2(14.3, 49.9), Vector2(20.5, 46.8), Vector2(27, 44), Vector2(33.8, 41.4), Vector2(40.5, 41), Vector2(47.6, 41), Vector2(54.9, 41.5), Vector2(62.1, 42.4), Vector2(54.1, 41.6), Vector2(46, 41), Vector2(38.4, 41), Vector2(30.9, 41.3), Vector2(23.6, 42), Vector2(19.7, 48.6), Vector2(16.1, 55.5), Vector2(12.6, 62.6), Vector2(9, 44.3), Vector2(6.3, 26.6), Vector2(4.2, 9.8), Vector2(-1.7, 1.4), Vector2(-7.3, -6.4), Vector2(-12.5, -13.9), Vector2(-13.9, -15.7), Vector2(-15.3, -17.5), Vector2(-16.7, -16.6), Vector2(-18.1, -15.7), Vector2(-19.5, -14.8), Vector2(-20.9, -13.9), Vector2(-28.6, 12.7), Vector2(-36.5, 39.4), Vector2(-44.3, 66.2), Vector2(-46.9, 71.6), Vector2(-49.4, 77.2), Vector2(-48.9, 74.6), Vector2(-48.5, 71.8), Vector2(-46.7, 70.8), Vector2(-45.1, 69.8), Vector2(-43.4, 68.8), Vector2(-41.8, 67.8), Vector2(-41.8, 67.8), Vector2(-43.1, 68.7), Vector2(-44.3, 69.6), Vector2(-43, 68.7), Vector2(-41.8, 67.8), Vector2(-42.4, 69.2), Vector2(-43.2, 70.7), Vector2(-50.6, 41.1), Vector2(-58, 11.7), Vector2(-72.8, -11.6), Vector2(-87.8, -35.3), Vector2(-98.3, -30.8), Vector2(-108.7, -26.4), Vector2(-118.8, -21.7), Vector2(-129.8, 3.5), Vector2(-140.7, 29.1), Vector2(-141.7, 41.6), Vector2(-142.6, 54), Vector2(-143.6, 66.5), Vector2(-144.6, 79), Vector2(-139, 87.3), Vector2(-132.5, 97), Vector2(-134.9, 99.6), Vector2(-137.4, 102), Vector2(-141.9, 101.5), Vector2(-146.5, 101.1), Vector2(-147.1, 101), Vector2(-147.9, 100.9), Vector2(25.9, 41.1), Vector2(26.6, 40.6), Vector2(27.4, 39.9), Vector2(28.1, 39.4), Vector2(28.9, 38.8), Vector2(30.5, 37.6), Vector2(32.2, 36.4), Vector2(34, 35), Vector2(35, 34.6), Vector2(36.1, 34.3), Vector2(37.2, 33.8), Vector2(38.5, 33.4), Vector2(33, 35.8), Vector2(27.8, 38.4), Vector2(22.7, 41.2), Vector2(17.8, 44.1), Vector2(17.4, 44.3), Vector2(17.1, 44.3), Vector2(17.7, 44.4), Vector2(18.3, 44.5), Vector2(19.9, 43.6), Vector2(21.3, 43), Vector2(22.8, 42.4), Vector2(24.3, 41.8), Vector2(25.9, 41.1), Vector2(27.4, 40), Vector2(29, 38.8), Vector2(30.6, 37.8), Vector2(32.3, 36.7), Vector2(33.9, 35.7), Vector2(35.6, 34.7), Vector2(37.3, 33.8), Vector2(32.2, 36.1), Vector2(27.2, 38.6), Vector2(22.3, 41.4), Vector2(17.8, 44.1), Vector2(19.1, 43.6), Vector2(20.4, 43.1), Vector2(21.8, 42.6), Vector2(23.1, 42.1), Vector2(24.4, 41.6), Vector2(25.9, 41.1), Vector2(25.9, 41.1), Vector2(26.6, 40.6), Vector2(27.4, 39.9), Vector2(28.1, 39.4), Vector2(28.9, 38.8), Vector2(30.5, 37.6), Vector2(32.2, 36.4), Vector2(34, 35), Vector2(35, 34.6), Vector2(36.1, 34.3), Vector2(37.2, 33.8), Vector2(38.5, 33.4), Vector2(33, 35.8), Vector2(27.8, 38.4), Vector2(22.7, 41.2), Vector2(17.8, 44.1), Vector2(17.4, 44.3), Vector2(17.1, 44.3), Vector2(17.7, 44.4), Vector2(18.3, 44.5), Vector2(19.9, 43.6), Vector2(21.3, 43), Vector2(22.8, 42.4), Vector2(24.3, 41.8), Vector2(25.9, 41.1), Vector2(27.4, 40), Vector2(29, 38.8), Vector2(30.6, 37.8), Vector2(32.3, 36.7), Vector2(33.9, 35.7), Vector2(35.6, 34.7), Vector2(37.3, 33.8), Vector2(32.2, 36.1), Vector2(27.2, 38.6), Vector2(22.3, 41.4), Vector2(17.8, 44.1), Vector2(19.1, 43.6), Vector2(20.4, 43.1), Vector2(21.8, 42.6), Vector2(23.1, 42.1), Vector2(24.4, 41.6), Vector2(25.9, 41.1)]
}
tracks/163/type = "value"
tracks/163/imported = false
tracks/163/enabled = true
tracks/163/path = NodePath("Body/Zombie_dolphinrider_body1:rotation")
tracks/163/interp = 1
tracks/163/loop_wrap = true
tracks/163/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.012217, -0.024435, -0.038397, -0.055851, -0.068068, -0.08203, -0.099484, -0.08203, -0.068068, -0.055851, -0.038397, -0.024435, -0.012217, 0.0, 0.034907, 0.048869, 0.066323, 0.083776, 0.102974, 0.144862, 0.188496, 0.233874, 0.258309, 0.279253, 0.301942, 0.326377, 0.226893, 0.127409, 0.02618, -0.069813, -0.05236, -0.038397, -0.020944, -0.006981, 0.013963, 0.034907, 0.057596, 0.07854, 0.102974, 0.148353, 0.197222, 0.246091, 0.296706, 0.202458, 0.109956, 0.017453, -0.069813, -0.050615, -0.033161, -0.015708, 0.0, 0.017453, 0.034907, 0.034907, 0.048869, 0.066323, 0.083776, 0.102974, 0.144862, 0.188496, 0.233874, 0.258309, 0.279253, 0.301942, 0.326377, 0.226893, 0.127409, 0.02618, -0.069813, -0.05236, -0.038397, -0.020944, -0.006981, 0.013963, 0.034907, 0.057596, 0.07854, 0.102974, 0.148353, 0.197222, 0.246091, 0.296706, 0.202458, 0.109956, 0.017453, -0.069813, -0.050615, -0.033161, -0.015708, 0.0, 0.017453, 0.034907, 0.0, -0.02618, -0.055851, -0.085521, -0.116937, -0.146608, -0.178024, -0.069813, 0.031416, 0.136136, 0.267035, 0.397935, 0.528835, 0.66148, 0.528835, 0.394444, 0.263545, 0.1309, 0.0, -0.099484, -0.198968, -0.300197, -0.102974, 0.087266, 0.284489, 0.1309, -0.012217, -0.165806, -0.164061, -0.165806, -0.164061, -0.164061, -0.164061, -0.165806, -0.151844, -0.139626, -0.129154, -0.225147, -0.322886, -0.26529, -0.20944, -0.174533, -0.143117, -0.111701, -0.080285, -0.080285, -0.137881, -0.198968, -0.137881, -0.080285, -0.10472, -0.13439, -0.10821, -0.087266, -0.073304, -0.061087, -0.155334, -0.247837, -0.34383, -0.274017, -0.204204, -0.178024, -0.151844, -0.129154, -0.10472, 0.144862, 0.397935, 0.397935, 0.397935, 0.228638, 0.062832, 0.048869, 0.034907, 0.034907, 0.048869, 0.066323, 0.083776, 0.102974, 0.144862, 0.188496, 0.233874, 0.258309, 0.279253, 0.301942, 0.326377, 0.226893, 0.127409, 0.02618, -0.069813, -0.076794, -0.087266, -0.094248, -0.10821, -0.076794, -0.047124, -0.020944, 0.005236, 0.034907, 0.069813, 0.109956, 0.144862, 0.18326, 0.219911, 0.258309, 0.296706, 0.202458, 0.109956, 0.017453, -0.069813, -0.050615, -0.033161, -0.015708, 0.0, 0.017453, 0.034907, 0.034907, 0.048869, 0.066323, 0.083776, 0.102974, 0.144862, 0.188496, 0.233874, 0.258309, 0.279253, 0.301942, 0.326377, 0.226893, 0.127409, 0.02618, -0.069813, -0.076794, -0.087266, -0.094248, -0.10821, -0.076794, -0.047124, -0.020944, 0.005236, 0.034907, 0.069813, 0.109956, 0.144862, 0.18326, 0.219911, 0.258309, 0.296706, 0.202458, 0.109956, 0.017453, -0.069813, -0.050615, -0.033161, -0.015708, 0.0, 0.017453, 0.034907]
}
tracks/164/type = "value"
tracks/164/imported = false
tracks/164/enabled = true
tracks/164/path = NodePath("Body/Zombie_dolphinrider_body1:scale")
tracks/164/interp = 1
tracks/164/loop_wrap = true
tracks/164/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.789, 0.789), Vector2(0.79, 0.79), Vector2(0.789, 0.789), Vector2(0.789, 0.789), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.844, 0.726), Vector2(0.902, 0.668), Vector2(0.85, 0.733), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8)]
}
tracks/165/type = "value"
tracks/165/imported = false
tracks/165/enabled = true
tracks/165/path = NodePath("Body/Zombie_dolphinrider_body1:skew")
tracks/165/interp = 1
tracks/165/loop_wrap = true
tracks/165/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -3e-07, 4e-07, -2e-07, 5e-07, 2e-07, -5e-07, 2e-07, -5e-07, 2e-07, 5e-07, -2e-07, 4e-07, -3e-07, 0.0, -4e-07, 2e-07, -5e-07, -2e-07, 4e-07, 3e-07, -4e-07, 1e-07, -3e-07, -3e-07, 0.0, -4e-07, -2e-07, 0.0, -1e-07, -2e-07, 1e-07, -2e-07, 0.0, -3e-07, -4e-07, -4e-07, -1e-07, -2e-07, 4e-07, 0.0, 2e-07, 4e-07, 0.0, 2e-07, -3e-07, 3e-07, -2e-07, 5e-07, -3e-07, 0.0, 0.0, 3e-07, -4e-07, -4e-07, 2e-07, -5e-07, -2e-07, 4e-07, 3e-07, -4e-07, 1e-07, -3e-07, -3e-07, 0.0, -4e-07, -2e-07, 0.0, -1e-07, -2e-07, 1e-07, -2e-07, 0.0, -3e-07, -4e-07, -4e-07, -1e-07, -2e-07, 4e-07, 0.0, 2e-07, 4e-07, 0.0, 2e-07, -3e-07, 3e-07, -2e-07, 5e-07, -3e-07, 0.0, 0.0, 3e-07, -4e-07, 0.0, 1e-07, 5e-07, -1e-07, -1e-07, 3e-07, 4e-07, -2e-07, -1e-07, -3e-07, 4e-07, 1e-07, -2e-07, -2e-07, -2e-07, 4e-07, -3e-07, -3e-07, 0.0, 2e-07, 5e-07, 4e-07, -4e-07, 5e-07, -3e-07, -3e-07, -3e-07, -3e-07, 1e-07, -3e-07, 1e-07, 1e-07, 1e-07, -3e-07, 4e-07, -3e-07, -4e-07, -5e-07, 1e-07, 0.0, 5e-07, 1e-07, 0.0, -1e-07, -1e-07, -1e-07, 0.0, 5e-07, 0.0, -1e-07, 2e-07, -4e-07, -4e-07, -5e-07, 2e-07, 5e-07, -3e-07, 3e-07, 1e-07, 3e-07, 5e-07, 4e-07, 4e-07, -4e-07, 2e-07, 3e-07, 1e-07, 1e-07, 1e-07, 1e-07, -1e-07, 2e-07, -4e-07, -4e-07, 2e-07, -5e-07, -2e-07, 4e-07, 3e-07, -4e-07, 1e-07, -3e-07, -3e-07, 0.0, -4e-07, -2e-07, 0.0, -1e-07, -2e-07, -5e-07, -5e-07, 2e-07, -4e-07, -5e-07, 1e-07, 0.0, 0.0, -4e-07, 2e-07, -3e-07, 3e-07, -4e-07, 5e-07, -3e-07, 0.0, 2e-07, -3e-07, 3e-07, -2e-07, 5e-07, -3e-07, 0.0, 0.0, 3e-07, -4e-07, -4e-07, 2e-07, -5e-07, -2e-07, 4e-07, 3e-07, -4e-07, 1e-07, -3e-07, -3e-07, 0.0, -4e-07, -2e-07, 0.0, -1e-07, -2e-07, -5e-07, -5e-07, 2e-07, -4e-07, -5e-07, 1e-07, 0.0, 0.0, -4e-07, 2e-07, -3e-07, 3e-07, -4e-07, 5e-07, -3e-07, 0.0, 2e-07, -3e-07, 3e-07, -2e-07, 5e-07, -3e-07, 0.0, 0.0, 3e-07, -4e-07]
}
tracks/166/type = "value"
tracks/166/imported = false
tracks/166/enabled = true
tracks/166/path = NodePath("Body/Zombie_dolphinrider_body1:texture")
tracks/166/interp = 1
tracks/166/loop_wrap = true
tracks/166/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("13_fuck"), ExtResource("13_fuck")]
}
tracks/167/type = "value"
tracks/167/imported = false
tracks/167/enabled = true
tracks/167/path = NodePath("Body/Zombie_dolphinrider_body1:self_modulate")
tracks/167/interp = 1
tracks/167/loop_wrap = true
tracks/167/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/168/type = "value"
tracks/168/imported = false
tracks/168/enabled = true
tracks/168/path = NodePath("Body/Zombie_dolphinrider_watershadow:visible")
tracks/168/interp = 1
tracks/168/loop_wrap = true
tracks/168/keys = {
"times": PackedFloat32Array(0, 13.0833, 13.1667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true]
}
tracks/169/type = "value"
tracks/169/imported = false
tracks/169/enabled = true
tracks/169/path = NodePath("Body/Zombie_dolphinrider_watershadow:position")
tracks/169/interp = 1
tracks/169/loop_wrap = true
tracks/169/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(-131.9, 134.8), Vector2(-131.9, 134.8), Vector2(-131.9, 135.5), Vector2(-131.9, 136.1), Vector2(-134.3, 134.8), Vector2(-136.7, 133.6), Vector2(-135.3, 134.6), Vector2(-133.8, 135.6), Vector2(39.9, 75.8), Vector2(39.9, 75.8), Vector2(39.9, 75.8), Vector2(39.9, 75.8), Vector2(39.9, 75.8), Vector2(39.9, 75.6), Vector2(39.8, 75.3), Vector2(39.8, 75.1), Vector2(39.8, 74.8), Vector2(39.7, 74.5), Vector2(39.7, 74.2), Vector2(39.6, 73.9), Vector2(38.5, 75), Vector2(37.5, 76.1), Vector2(36.5, 77.2), Vector2(35.5, 78.2), Vector2(36, 78), Vector2(36.5, 77.7), Vector2(37, 77.4), Vector2(37.4, 77.1), Vector2(37.9, 76.8), Vector2(38.4, 76.6), Vector2(38.9, 76.3), Vector2(39.4, 76.1), Vector2(39.9, 75.8), Vector2(40.1, 75.5), Vector2(40.5, 75.1), Vector2(40.8, 74.8), Vector2(41, 74.4), Vector2(41.4, 74), Vector2(41.7, 73.7), Vector2(42, 73.3), Vector2(40.2, 74.6), Vector2(38.5, 75.7), Vector2(37, 77), Vector2(35.5, 78.2), Vector2(36.2, 77.8), Vector2(37, 77.4), Vector2(37.6, 77), Vector2(38.4, 76.6), Vector2(39.1, 76.2), Vector2(39.9, 75.8), Vector2(39.9, 75.8), Vector2(39.9, 75.8), Vector2(39.9, 75.8), Vector2(39.9, 75.8), Vector2(39.9, 75.8), Vector2(39.9, 75.6), Vector2(39.8, 75.3), Vector2(39.8, 75.1), Vector2(39.8, 74.8), Vector2(39.7, 74.5), Vector2(39.7, 74.2), Vector2(39.6, 73.9), Vector2(38.5, 75), Vector2(37.5, 76.1), Vector2(36.5, 77.2), Vector2(35.5, 78.2), Vector2(36, 78), Vector2(36.5, 77.7), Vector2(37, 77.4), Vector2(37.4, 77.1), Vector2(37.9, 76.8), Vector2(38.4, 76.6), Vector2(38.9, 76.3), Vector2(39.4, 76.1), Vector2(39.9, 75.8), Vector2(40.1, 75.5), Vector2(40.5, 75.1), Vector2(40.8, 74.8), Vector2(41, 74.4), Vector2(41.4, 74), Vector2(41.7, 73.7), Vector2(42, 73.3), Vector2(40.2, 74.6), Vector2(38.5, 75.7), Vector2(37, 77), Vector2(35.5, 78.2), Vector2(36.2, 77.8), Vector2(37, 77.4), Vector2(37.6, 77), Vector2(38.4, 76.6), Vector2(39.1, 76.2), Vector2(39.9, 75.8)]
}
tracks/170/type = "value"
tracks/170/imported = false
tracks/170/enabled = true
tracks/170/path = NodePath("Body/Zombie_dolphinrider_watershadow:rotation")
tracks/170/interp = 1
tracks/170/loop_wrap = true
tracks/170/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005236, 0.013963, 0.022689, 0.031416, 0.040143, 0.045379, 0.055851, -0.008727, -0.076794, -0.146608, -0.214675, -0.190241, -0.164061, -0.143117, -0.116937, -0.094248, -0.068068, -0.047124, -0.020944, 0.0, 0.022689, 0.043633, 0.066323, 0.087266, 0.109956, 0.136136, 0.158825, 0.062832, -0.024435, -0.120428, -0.214675, -0.178024, -0.143117, -0.10472, -0.068068, -0.033161, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005236, 0.013963, 0.022689, 0.031416, 0.040143, 0.045379, 0.055851, -0.008727, -0.076794, -0.146608, -0.214675, -0.190241, -0.164061, -0.143117, -0.116937, -0.094248, -0.068068, -0.047124, -0.020944, 0.0, 0.022689, 0.043633, 0.066323, 0.087266, 0.109956, 0.136136, 0.158825, 0.062832, -0.024435, -0.120428, -0.214675, -0.178024, -0.143117, -0.10472, -0.068068, -0.033161, 0.0]
}
tracks/171/type = "value"
tracks/171/imported = false
tracks/171/enabled = true
tracks/171/path = NodePath("Body/Zombie_dolphinrider_watershadow:scale")
tracks/171/interp = 1
tracks/171/loop_wrap = true
tracks/171/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.521, 0.7), Vector2(0.521, 0.7), Vector2(0.522, 0.7), Vector2(0.522, 0.7), Vector2(0.523, 0.7), Vector2(0.523, 0.7), Vector2(0.526, 0.7), Vector2(0.528, 0.7), Vector2(0.53, 0.7), Vector2(0.532, 0.7), Vector2(0.531, 0.7), Vector2(0.529, 0.7), Vector2(0.528, 0.7), Vector2(0.527, 0.7), Vector2(0.525, 0.7), Vector2(0.524, 0.7), Vector2(0.522, 0.7), Vector2(0.521, 0.7), Vector2(0.52, 0.7), Vector2(0.521, 0.7), Vector2(0.522, 0.7), Vector2(0.523, 0.7), Vector2(0.523, 0.7), Vector2(0.524, 0.7), Vector2(0.525, 0.7), Vector2(0.526, 0.7), Vector2(0.528, 0.7), Vector2(0.529, 0.7), Vector2(0.531, 0.7), Vector2(0.532, 0.7), Vector2(0.53, 0.7), Vector2(0.528, 0.7), Vector2(0.526, 0.7), Vector2(0.524, 0.7), Vector2(0.522, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.52, 0.7), Vector2(0.521, 0.7), Vector2(0.521, 0.7), Vector2(0.522, 0.7), Vector2(0.522, 0.7), Vector2(0.523, 0.7), Vector2(0.523, 0.7), Vector2(0.526, 0.7), Vector2(0.528, 0.7), Vector2(0.53, 0.7), Vector2(0.532, 0.7), Vector2(0.531, 0.7), Vector2(0.529, 0.7), Vector2(0.528, 0.7), Vector2(0.527, 0.7), Vector2(0.525, 0.7), Vector2(0.524, 0.7), Vector2(0.522, 0.7), Vector2(0.521, 0.7), Vector2(0.52, 0.7), Vector2(0.521, 0.7), Vector2(0.522, 0.7), Vector2(0.523, 0.7), Vector2(0.523, 0.7), Vector2(0.524, 0.7), Vector2(0.525, 0.7), Vector2(0.526, 0.7), Vector2(0.528, 0.7), Vector2(0.529, 0.7), Vector2(0.531, 0.7), Vector2(0.532, 0.7), Vector2(0.53, 0.7), Vector2(0.528, 0.7), Vector2(0.526, 0.7), Vector2(0.524, 0.7), Vector2(0.522, 0.7), Vector2(0.52, 0.7)]
}
tracks/172/type = "value"
tracks/172/imported = false
tracks/172/enabled = true
tracks/172/path = NodePath("Body/Zombie_dolphinrider_watershadow:skew")
tracks/172/interp = 1
tracks/172/loop_wrap = true
tracks/172/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.005236, -0.013963, -0.022689, -0.031416, -0.040143, -0.045379, -0.055851, 0.008727, 0.076794, 0.146608, 0.214675, 0.190241, 0.164061, 0.143117, 0.116937, 0.094248, 0.068068, 0.047124, 0.020944, 0.0, -0.022689, -0.043633, -0.066323, -0.087266, -0.109956, -0.136136, -0.158825, -0.062832, 0.024435, 0.120428, 0.214675, 0.178024, 0.143117, 0.10472, 0.068068, 0.033161, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.005236, -0.013963, -0.022689, -0.031416, -0.040143, -0.045379, -0.055851, 0.008727, 0.076794, 0.146608, 0.214675, 0.190241, 0.164061, 0.143117, 0.116937, 0.094248, 0.068068, 0.047124, 0.020944, 0.0, -0.022689, -0.043633, -0.066323, -0.087266, -0.109956, -0.136136, -0.158825, -0.062832, 0.024435, 0.120428, 0.214675, 0.178024, 0.143117, 0.10472, 0.068068, 0.033161, 0.0]
}
tracks/173/type = "value"
tracks/173/imported = false
tracks/173/enabled = true
tracks/173/path = NodePath("Body/Zombie_dolphinrider_watershadow:texture")
tracks/173/interp = 1
tracks/173/loop_wrap = true
tracks/173/keys = {
"times": PackedFloat32Array(0, 13.0833, 13.1667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [null, null, ExtResource("14_fuck"), ExtResource("14_fuck")]
}
tracks/174/type = "value"
tracks/174/imported = false
tracks/174/enabled = true
tracks/174/path = NodePath("Body/Zombie_dolphinrider_watershadow:self_modulate")
tracks/174/interp = 1
tracks/174/loop_wrap = true
tracks/174/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/175/type = "value"
tracks/175/imported = false
tracks/175/enabled = true
tracks/175/path = NodePath("Body/Zombie_dolphinrider_outerleg_foot1:visible")
tracks/175/interp = 1
tracks/175/loop_wrap = true
tracks/175/keys = {
"times": PackedFloat32Array(0, 13.0833, 13.1667, 13.1667, 13.25, 13.25, 13.3333, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [true, true, false, false, true, true, false, false]
}
tracks/176/type = "value"
tracks/176/imported = false
tracks/176/enabled = true
tracks/176/path = NodePath("Body/Zombie_dolphinrider_outerleg_foot1:position")
tracks/176/interp = 1
tracks/176/loop_wrap = true
tracks/176/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(50.5, 124.5), Vector2(50.5, 124.6), Vector2(50.3, 124.7), Vector2(50.1, 124.8), Vector2(50.1, 124.8), Vector2(50, 125), Vector2(49.9, 125.1), Vector2(49.8, 125.2), Vector2(49.9, 125.1), Vector2(50, 125), Vector2(50.1, 124.8), Vector2(50.3, 124.8), Vector2(50.4, 124.7), Vector2(50.5, 124.5), Vector2(50.5, 124.5), Vector2(51.7, 126), Vector2(49.8, 125.7), Vector2(47.9, 125.5), Vector2(46, 125.1), Vector2(44.1, 124.8), Vector2(43.4, 124), Vector2(42.7, 123.4), Vector2(42, 122.7), Vector2(40.2, 121.7), Vector2(38.5, 120.8), Vector2(37, 119.9), Vector2(35.3, 119), Vector2(36.6, 120.4), Vector2(38, 121.8), Vector2(39.4, 123.3), Vector2(40.8, 124.9), Vector2(41.8, 124.9), Vector2(42.8, 124.9), Vector2(43.8, 124.9), Vector2(44.8, 124.9), Vector2(46.1, 124.9), Vector2(47.5, 125), Vector2(48.6, 125.1), Vector2(50, 125.1), Vector2(51.3, 125.1), Vector2(52.9, 125.6), Vector2(54.5, 126.1), Vector2(56.4, 126.6), Vector2(58.2, 127.3), Vector2(59.9, 127.8), Vector2(61.6, 128.4), Vector2(63.8, 129.1), Vector2(65.8, 129.7), Vector2(63.1, 129.1), Vector2(60.6, 128.6), Vector2(58.2, 127.9), Vector2(55.8, 127.3), Vector2(53.7, 126.7), Vector2(51.7, 126), Vector2(51.7, 126), Vector2(49.8, 125.7), Vector2(47.9, 125.5), Vector2(46, 125.1), Vector2(44.1, 124.8), Vector2(43.4, 124), Vector2(42.7, 123.4), Vector2(42, 122.7), Vector2(40.2, 121.7), Vector2(38.5, 120.8), Vector2(37, 119.9), Vector2(35.3, 119), Vector2(36.6, 120.4), Vector2(38, 121.8), Vector2(39.4, 123.3), Vector2(40.8, 124.9), Vector2(41.8, 124.9), Vector2(42.8, 124.9), Vector2(43.8, 124.9), Vector2(44.8, 124.9), Vector2(46.1, 124.9), Vector2(47.5, 125), Vector2(48.6, 125.1), Vector2(50, 125.1), Vector2(51.3, 125.1), Vector2(52.9, 125.6), Vector2(54.5, 126.1), Vector2(56.4, 126.6), Vector2(58.2, 127.3), Vector2(59.9, 127.8), Vector2(61.6, 128.4), Vector2(63.8, 129.1), Vector2(65.8, 129.7), Vector2(63.1, 129.1), Vector2(60.6, 128.6), Vector2(58.2, 127.9), Vector2(55.8, 127.3), Vector2(53.7, 126.7), Vector2(51.7, 126), Vector2(50.5, 124.5), Vector2(50.1, 124.8), Vector2(49.7, 125.1), Vector2(49.4, 125.5), Vector2(49, 125.8), Vector2(48.8, 126.3), Vector2(48.6, 126.6), Vector2(48.5, 126.6), Vector2(48.6, 126.6), Vector2(48.6, 126.6), Vector2(48.5, 127), Vector2(48.5, 127.3), Vector2(48.5, 127.8), Vector2(48.4, 128.1), Vector2(48.5, 127.3), Vector2(48.7, 126.5), Vector2(49.1, 125.7), Vector2(49.9, 125), Vector2(50.5, 124.5), Vector2(48.8, 124.8), Vector2(48, 125.3), Vector2(48, 125.9), Vector2(45.3, 120.6), Vector2(42.8, 115), Vector2(40.5, 109.2), Vector2(21.2, 87.9), Vector2(6.1, 66.1), Vector2(-4.9, 46.3), Vector2(-8.4, 41.7), Vector2(-11.7, 37.2), Vector2(-12.2, 34.6), Vector2(-12.8, 31.9), Vector2(-13.4, 29.3), Vector2(-14.1, 26.5), Vector2(-21.3, 62.1), Vector2(-27.8, 98.5), Vector2(-33.3, 135.8), Vector2(-33.4, 135.4), Vector2(-33.6, 135.1), Vector2(-33.9, 134.4), Vector2(-33.9, 133.5), Vector2(-29.3, 132.7), Vector2(-24.7, 131.9), Vector2(-20.8, 130), Vector2(-16.8, 128.1), Vector2(-16.8, 128.1), Vector2(-16.8, 127.7), Vector2(-17, 127.2), Vector2(-16.8, 127.7), Vector2(-16.8, 128.1), Vector2(-15.9, 128.8), Vector2(-15.1, 129.6), Vector2(-25.7, 100.2), Vector2(-36.3, 70.7), Vector2(-50.2, 48), Vector2(-64.1, 25.3), Vector2(-67.8, 26.2), Vector2(-71.3, 27.1), Vector2(-74.6, 28), Vector2(-83.7, 55.9), Vector2(-92.7, 83.7), Vector2(-92.3, 95.6), Vector2(-91.9, 107.5), Vector2(-91.4, 119.5), Vector2(-90.9, 131.3), Vector2(-90.9, 131.3), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164), Vector2(-104.3, 164)]
}
tracks/177/type = "value"
tracks/177/imported = false
tracks/177/enabled = true
tracks/177/path = NodePath("Body/Zombie_dolphinrider_outerleg_foot1:rotation")
tracks/177/interp = 1
tracks/177/loop_wrap = true
tracks/177/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.015708, -0.034907, -0.055851, -0.073304, -0.094248, -0.111701, -0.13439, -0.113446, -0.094248, -0.073304, -0.055851, -0.034907, -0.015708, 0.0, -0.352557, -0.375246, -0.401426, -0.42237, -0.44855, -0.497419, -0.544543, -0.593412, -0.492183, -0.392699, -0.29147, -0.195477, -0.143117, -0.087266, -0.034907, 0.013963, 0.013963, 0.013963, 0.013963, 0.013963, -0.006981, -0.029671, -0.055851, -0.076794, -0.102974, -0.198968, -0.294961, -0.392699, -0.492183, -0.602139, -0.712094, -0.820305, -0.93026, -0.834267, -0.738274, -0.640536, -0.544543, -0.44855, -0.352557, -0.352557, -0.375246, -0.401426, -0.42237, -0.44855, -0.497419, -0.544543, -0.593412, -0.492183, -0.392699, -0.29147, -0.195477, -0.143117, -0.087266, -0.034907, 0.013963, 0.013963, 0.013963, 0.013963, 0.013963, -0.006981, -0.029671, -0.055851, -0.076794, -0.102974, -0.198968, -0.294961, -0.392699, -0.492183, -0.602139, -0.712094, -0.820305, -0.93026, -0.834267, -0.738274, -0.640536, -0.544543, -0.44855, -0.352557, 0.0, -0.068068, -0.139626, -0.21293, -0.282743, -0.352557, -0.427606, -0.42586, -0.42586, -0.427606, -0.488692, -0.549779, -0.610865, -0.677188, -0.541052, -0.404916, -0.268781, -0.13439, 0.0, -0.29147, -0.584685, -0.877901, -1.04022, -1.20253, -1.3631, -0.747001, -0.125664, 0.488692, 0.560251, 0.633555, 0.633555, 0.633555, 0.633555, 0.633555, 0.307178, -0.012217, -0.338594, -0.39619, -0.453786, -0.300197, -0.150098, -0.247837, -0.349066, -0.39968, -0.453786, -0.453786, -0.439823, -0.42586, -0.439823, -0.453786, -0.479966, -0.506145, -0.431096, -0.357792, -0.39619, -0.432842, -0.584685, -0.736529, -0.886627, -0.987856, -1.08909, -1.17112, -1.24617, -1.32471, -1.4015, -1.4015, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017, -1.15017]
}
tracks/178/type = "value"
tracks/178/imported = false
tracks/178/enabled = true
tracks/178/path = NodePath("Body/Zombie_dolphinrider_outerleg_foot1:scale")
tracks/178/interp = 1
tracks/178/loop_wrap = true
tracks/178/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.793, 0.793), Vector2(0.791, 0.791), Vector2(0.79, 0.79), Vector2(0.789, 0.789), Vector2(0.788, 0.788), Vector2(0.789, 0.789), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.786, 0.786), Vector2(0.786, 0.786), Vector2(0.784, 0.784), Vector2(0.785, 0.785), Vector2(0.785, 0.785), Vector2(0.783, 0.783), Vector2(0.784, 0.784), Vector2(0.783, 0.783), Vector2(0.785, 0.785), Vector2(0.783, 0.783), Vector2(0.784, 0.784), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.782, 0.782), Vector2(0.783, 0.783), Vector2(0.781, 0.781), Vector2(0.78, 0.78), Vector2(0.781, 0.781), Vector2(0.781, 0.781), Vector2(0.783, 0.783), Vector2(0.782, 0.782), Vector2(0.782, 0.782), Vector2(0.782, 0.782), Vector2(0.782, 0.782), Vector2(0.782, 0.782), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78)]
}
tracks/179/type = "value"
tracks/179/imported = false
tracks/179/enabled = true
tracks/179/path = NodePath("Body/Zombie_dolphinrider_outerleg_foot1:skew")
tracks/179/interp = 1
tracks/179/loop_wrap = true
tracks/179/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 4e-07, 5e-07, 2e-07, 2e-07, -1e-07, -4e-07, -4e-07, 2e-07, 2e-07, 5e-07, 4e-07, 0.0, 0.0, 5e-07, 2e-07, 3e-07, 3e-07, 4e-07, 2e-07, 3e-07, 1e-07, 2e-07, -1e-07, 0.0, 1e-07, 0.0, -5e-07, 4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -3e-07, 4e-07, 5e-07, -5e-07, -4e-07, 5e-07, 4e-07, -1e-07, 2e-07, 4e-07, -3e-07, 3e-07, -5e-07, -4e-07, -3e-07, 2e-07, 3e-07, 4e-07, 5e-07, 5e-07, 2e-07, 3e-07, 3e-07, 4e-07, 2e-07, 3e-07, 1e-07, 2e-07, -1e-07, 0.0, 1e-07, 0.0, -5e-07, 4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -3e-07, 4e-07, 5e-07, -5e-07, -4e-07, 5e-07, 4e-07, -1e-07, 2e-07, 4e-07, -3e-07, 3e-07, -5e-07, -4e-07, -3e-07, 2e-07, 3e-07, 4e-07, 5e-07, 0.0, 2e-07, -3e-07, -2e-07, -3e-07, 5e-07, 3e-07, -3e-07, -3e-07, 3e-07, -2e-07, 3e-07, -2e-07, 3e-07, -1e-07, -4e-07, 3e-07, -4e-07, 0.0, 0.0, -3e-07, 4e-07, -2e-07, 2e-07, -1e-07, 1e-07, 3e-07, 2e-07, -3e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -1e-07, -3e-07, 1e-07, 3e-07, 4e-07, 4e-07, -3e-07, 3e-07, 2e-07, -4e-07, 4e-07, 4e-07, 0.0, -3e-07, 0.0, 4e-07, 5e-07, -5e-07, -3e-07, -5e-07, 3e-07, 4e-07, -3e-07, 1e-07, -2e-07, -3e-07, -4e-07, 1e-07, -1e-07, 1e-07, -4e-07, -4e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/180/type = "value"
tracks/180/imported = false
tracks/180/enabled = true
tracks/180/path = NodePath("Body/Zombie_dolphinrider_outerleg_foot1:texture")
tracks/180/interp = 1
tracks/180/loop_wrap = true
tracks/180/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("15_fuck"), ExtResource("15_fuck")]
}
tracks/181/type = "value"
tracks/181/imported = false
tracks/181/enabled = true
tracks/181/path = NodePath("Body/Zombie_dolphinrider_outerleg_foot1:self_modulate")
tracks/181/interp = 1
tracks/181/loop_wrap = true
tracks/181/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0)]
}
tracks/182/type = "value"
tracks/182/imported = false
tracks/182/enabled = true
tracks/182/path = NodePath("Body/Zombie_dolphinrider_outerleg_foot2:visible")
tracks/182/interp = 1
tracks/182/loop_wrap = true
tracks/182/keys = {
"times": PackedFloat32Array(0, 13.0833, 13.1667, 13.1667, 13.25, 13.25, 13.3333, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [true, true, false, false, true, true, false, false]
}
tracks/183/type = "value"
tracks/183/imported = false
tracks/183/enabled = true
tracks/183/path = NodePath("Body/Zombie_dolphinrider_outerleg_foot2:position")
tracks/183/interp = 1
tracks/183/loop_wrap = true
tracks/183/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(39.5, 127.1), Vector2(37.5, 127.3), Vector2(35.4, 127.6), Vector2(33.4, 127.8), Vector2(31.3, 127.9), Vector2(30.9, 128.8), Vector2(30.6, 129.9), Vector2(30.6, 130.9), Vector2(28.5, 128.3), Vector2(26.5, 125.8), Vector2(24.6, 123.1), Vector2(22.8, 120.6), Vector2(23.8, 121.7), Vector2(24.8, 122.6), Vector2(25.9, 123.5), Vector2(26.9, 124.6), Vector2(28, 124.6), Vector2(29, 124.6), Vector2(30, 124.6), Vector2(30.9, 124.6), Vector2(32.4, 124.7), Vector2(33.8, 124.7), Vector2(35.2, 124.7), Vector2(36.6, 124.7), Vector2(38.1, 124.6), Vector2(40.3, 124.6), Vector2(42.4, 124.6), Vector2(44.5, 124.6), Vector2(46.5, 124.6), Vector2(48.3, 125.1), Vector2(50.2, 125.6), Vector2(52, 126.1), Vector2(53.9, 126.6), Vector2(51.5, 126.6), Vector2(49.1, 126.7), Vector2(46.6, 126.8), Vector2(44.4, 126.8), Vector2(41.9, 126.9), Vector2(39.5, 127.1), Vector2(39.5, 127.1), Vector2(37.5, 127.3), Vector2(35.4, 127.6), Vector2(33.4, 127.8), Vector2(31.3, 127.9), Vector2(30.9, 128.8), Vector2(30.6, 129.9), Vector2(30.6, 130.9), Vector2(28.5, 128.3), Vector2(26.5, 125.8), Vector2(24.6, 123.1), Vector2(22.8, 120.6), Vector2(23.8, 121.7), Vector2(24.8, 122.6), Vector2(25.9, 123.5), Vector2(26.9, 124.6), Vector2(28, 124.6), Vector2(29, 124.6), Vector2(30, 124.6), Vector2(30.9, 124.6), Vector2(32.4, 124.7), Vector2(33.8, 124.7), Vector2(35.2, 124.7), Vector2(36.6, 124.7), Vector2(38.1, 124.6), Vector2(40.3, 124.6), Vector2(42.4, 124.6), Vector2(44.5, 124.6), Vector2(46.5, 124.6), Vector2(48.3, 125.1), Vector2(50.2, 125.6), Vector2(52, 126.1), Vector2(53.9, 126.6), Vector2(51.5, 126.6), Vector2(49.1, 126.7), Vector2(46.6, 126.8), Vector2(44.4, 126.8), Vector2(41.9, 126.9), Vector2(39.5, 127.1), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(36.4, 125.3), Vector2(35.9, 125.9), Vector2(35.5, 126.5), Vector2(35.1, 127.2), Vector2(35, 126.3), Vector2(36.8, 125), Vector2(40.5, 122.8), Vector2(16, 94.5), Vector2(-2.3, 64.8), Vector2(-15.1, 37.7), Vector2(-16, 31.5), Vector2(-17, 25.6), Vector2(-18.2, 23.3), Vector2(-19.3, 21), Vector2(-20.6, 18.6), Vector2(-22.2, 16), Vector2(-30.6, 54.4), Vector2(-38.5, 93.6), Vector2(-45.9, 133.5), Vector2(-46.1, 136.6), Vector2(-45.9, 140), Vector2(-46.3, 136.4), Vector2(-46.3, 133), Vector2(-42.2, 133.1), Vector2(-38.1, 133.1), Vector2(-33.6, 131), Vector2(-29.2, 129.1), Vector2(-29.2, 129.1), Vector2(-29.2, 128.5), Vector2(-29.4, 127.8), Vector2(-29.3, 128.5), Vector2(-29.2, 129.1), Vector2(-28.2, 130.1), Vector2(-27.4, 131.2), Vector2(-38.1, 100.8), Vector2(-48.7, 70.6), Vector2(-62.5, 48.4), Vector2(-76.5, 26.1), Vector2(-79.6, 28.6), Vector2(-82.5, 31.1), Vector2(-84.9, 33.7), Vector2(-93.5, 62.8), Vector2(-101.9, 91.8), Vector2(-100.8, 104.4), Vector2(-99.6, 116.9), Vector2(-98.4, 129.5), Vector2(-97.2, 141.8), Vector2(-97.2, 141.8), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3), Vector2(-112.8, 172.3)]
}
tracks/184/type = "value"
tracks/184/imported = false
tracks/184/enabled = true
tracks/184/path = NodePath("Body/Zombie_dolphinrider_outerleg_foot2:rotation")
tracks/184/interp = 1
tracks/184/loop_wrap = true
tracks/184/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.10821, -0.143117, -0.178024, -0.216421, -0.253073, -0.366519, -0.479966, -0.593412, -0.47473, -0.357792, -0.23911, -0.125664, -0.085521, -0.047124, -0.006981, 0.027925, 0.02618, 0.02618, 0.02618, 0.027925, 0.02618, 0.02618, 0.02618, 0.02618, 0.027925, 0.02618, 0.02618, 0.02618, 0.027925, -0.008727, -0.047124, -0.087266, -0.129154, -0.125664, -0.120428, -0.116937, -0.111701, -0.10821, -0.10821, -0.10821, -0.143117, -0.178024, -0.216421, -0.253073, -0.366519, -0.479966, -0.593412, -0.47473, -0.357792, -0.23911, -0.125664, -0.085521, -0.047124, -0.006981, 0.027925, 0.02618, 0.02618, 0.02618, 0.027925, 0.02618, 0.02618, 0.02618, 0.02618, 0.027925, 0.02618, 0.02618, 0.02618, 0.027925, -0.008727, -0.047124, -0.087266, -0.129154, -0.125664, -0.120428, -0.116937, -0.111701, -0.10821, -0.10821, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.076794, -0.155334, -0.235619, -0.657989, -1.08385, -1.50796, -0.785398, -0.064577, 0.652753, 0.84823, 1.04196, 1.00182, 0.961676, 0.919789, 0.879646, 0.607375, 0.336849, 0.064577, -0.146608, -0.361283, -0.151844, 0.048869, -0.017453, -0.090757, -0.113446, -0.141372, -0.141372, -0.125664, -0.115192, -0.125664, -0.141372, -0.165806, -0.195477, -0.120428, -0.045379, -0.08203, -0.122173, -0.274017, -0.42237, -0.575959, -0.677188, -0.778417, -0.855211, -0.933751, -1.01229, -1.08909, -1.08909, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758, -0.837758]
}
tracks/185/type = "value"
tracks/185/imported = false
tracks/185/enabled = true
tracks/185/path = NodePath("Body/Zombie_dolphinrider_outerleg_foot2:scale")
tracks/185/interp = 1
tracks/185/loop_wrap = true
tracks/185/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.797, 0.797), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.79, 0.79), Vector2(0.791, 0.791), Vector2(0.789, 0.789), Vector2(0.788, 0.788), Vector2(0.787, 0.787), Vector2(0.788, 0.788), Vector2(0.785, 0.785), Vector2(0.784, 0.784), Vector2(0.783, 0.783), Vector2(0.782, 0.782), Vector2(0.782, 0.782), Vector2(0.781, 0.781), Vector2(0.781, 0.781), Vector2(0.78, 0.78), Vector2(0.779, 0.779), Vector2(0.778, 0.778), Vector2(0.777, 0.777), Vector2(0.777, 0.777), Vector2(0.777, 0.777), Vector2(0.777, 0.777), Vector2(0.777, 0.777), Vector2(0.777, 0.777), Vector2(0.777, 0.777), Vector2(0.777, 0.777), Vector2(0.776, 0.776), Vector2(0.776, 0.776), Vector2(0.775, 0.775), Vector2(0.775, 0.775), Vector2(0.774, 0.774), Vector2(0.773, 0.773), Vector2(0.774, 0.774), Vector2(0.773, 0.773), Vector2(0.776, 0.776), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.775, 0.775), Vector2(0.775, 0.775), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773)]
}
tracks/186/type = "value"
tracks/186/imported = false
tracks/186/enabled = true
tracks/186/path = NodePath("Body/Zombie_dolphinrider_outerleg_foot2:skew")
tracks/186/interp = 1
tracks/186/loop_wrap = true
tracks/186/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4e-07, 0.0, 4e-07, 2e-07, 3e-07, -1e-07, 5e-07, 1e-07, 5e-07, -5e-07, -1e-07, 3e-07, -1e-07, 1e-07, -3e-07, 3e-07, -1e-07, -1e-07, -1e-07, 3e-07, -1e-07, -1e-07, -1e-07, -1e-07, 3e-07, -1e-07, -1e-07, -1e-07, 3e-07, 4e-07, 1e-07, -5e-07, -4e-07, 3e-07, 3e-07, -1e-07, -1e-07, -4e-07, -4e-07, -4e-07, 0.0, 4e-07, 2e-07, 3e-07, -1e-07, 5e-07, 1e-07, 5e-07, -5e-07, -1e-07, 3e-07, -1e-07, 1e-07, -3e-07, 3e-07, -1e-07, -1e-07, -1e-07, 3e-07, -1e-07, -1e-07, -1e-07, -1e-07, 3e-07, -1e-07, -1e-07, -1e-07, 3e-07, 4e-07, 1e-07, -5e-07, -4e-07, 3e-07, 3e-07, -1e-07, -1e-07, -4e-07, -4e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -5e-07, -3e-07, -4e-07, -1e-07, -4e-07, -4e-07, -1e-07, -2e-07, 1e-07, 0.0, -5e-07, 0.0, 4e-07, -5e-07, -1e-07, -4e-07, -5e-07, 2e-07, 3e-07, -1e-07, 4e-07, 2e-07, -3e-07, -1e-07, -4e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, -3e-07, 1e-07, 3e-07, 4e-07, -5e-07, 0.0, 3e-07, 3e-07, 4e-07, 3e-07, 2e-07, -3e-07, -1e-07, 1e-07, -4e-07, -4e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/187/type = "value"
tracks/187/imported = false
tracks/187/enabled = true
tracks/187/path = NodePath("Body/Zombie_dolphinrider_outerleg_foot2:texture")
tracks/187/interp = 1
tracks/187/loop_wrap = true
tracks/187/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("16_fuck"), ExtResource("16_fuck")]
}
tracks/188/type = "value"
tracks/188/imported = false
tracks/188/enabled = true
tracks/188/path = NodePath("Body/Zombie_dolphinrider_outerleg_foot2:self_modulate")
tracks/188/interp = 1
tracks/188/loop_wrap = true
tracks/188/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0)]
}
tracks/189/type = "value"
tracks/189/imported = false
tracks/189/enabled = true
tracks/189/path = NodePath("Body/Zombie_dolphinrider_outerleg_lower:visible")
tracks/189/interp = 1
tracks/189/loop_wrap = true
tracks/189/keys = {
"times": PackedFloat32Array(0, 13.0833, 13.1667, 13.1667, 13.25, 13.25, 13.3333, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [true, true, false, false, true, true, false, false]
}
tracks/190/type = "value"
tracks/190/imported = false
tracks/190/enabled = true
tracks/190/path = NodePath("Body/Zombie_dolphinrider_outerleg_lower:position")
tracks/190/interp = 1
tracks/190/loop_wrap = true
tracks/190/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(48.5, 104.6), Vector2(48.1, 104.8), Vector2(47.7, 105), Vector2(47.2, 105.1), Vector2(46.8, 105.3), Vector2(46.5, 105.5), Vector2(46, 105.7), Vector2(45.5, 106), Vector2(46, 105.8), Vector2(46.4, 105.6), Vector2(46.9, 105.4), Vector2(47.2, 105.2), Vector2(47.7, 105), Vector2(48.1, 104.8), Vector2(48.5, 104.6), Vector2(44, 107.6), Vector2(42.4, 106.8), Vector2(40.7, 106), Vector2(39, 105.2), Vector2(37.4, 104.3), Vector2(36.4, 103.3), Vector2(35.3, 102.5), Vector2(34.2, 101.6), Vector2(33.9, 100.3), Vector2(33.6, 99.3), Vector2(33.5, 98.1), Vector2(33.4, 97.1), Vector2(32.5, 100.3), Vector2(31.6, 103.5), Vector2(30.7, 106.8), Vector2(29.9, 110.3), Vector2(31.6, 110.3), Vector2(33.4, 110.1), Vector2(35, 110), Vector2(36.7, 109.8), Vector2(38.5, 109.1), Vector2(40.3, 108.5), Vector2(42.1, 107.8), Vector2(43.9, 107.1), Vector2(45.8, 106.6), Vector2(47.1, 106.8), Vector2(48.5, 107.1), Vector2(49.9, 107.4), Vector2(51.1, 107.8), Vector2(51.1, 108.8), Vector2(51, 109.8), Vector2(51, 110.8), Vector2(51.2, 112), Vector2(49.9, 111.2), Vector2(48.7, 110.4), Vector2(47.5, 109.8), Vector2(46.5, 109), Vector2(45.3, 108.3), Vector2(44, 107.6), Vector2(44, 107.6), Vector2(42.4, 106.8), Vector2(40.7, 106), Vector2(39, 105.2), Vector2(37.4, 104.3), Vector2(36.4, 103.3), Vector2(35.3, 102.5), Vector2(34.2, 101.6), Vector2(33.9, 100.3), Vector2(33.6, 99.3), Vector2(33.5, 98.1), Vector2(33.4, 97.1), Vector2(32.5, 100.3), Vector2(31.6, 103.5), Vector2(30.7, 106.8), Vector2(29.9, 110.3), Vector2(31.6, 110.3), Vector2(33.4, 110.1), Vector2(35, 110), Vector2(36.7, 109.8), Vector2(38.5, 109.1), Vector2(40.3, 108.5), Vector2(42.1, 107.8), Vector2(43.9, 107.1), Vector2(45.8, 106.6), Vector2(47.1, 106.8), Vector2(48.5, 107.1), Vector2(49.9, 107.4), Vector2(51.1, 107.8), Vector2(51.1, 108.8), Vector2(51, 109.8), Vector2(51, 110.8), Vector2(51.2, 112), Vector2(49.9, 111.2), Vector2(48.7, 110.4), Vector2(47.5, 109.8), Vector2(46.5, 109), Vector2(45.3, 108.3), Vector2(44, 107.6), Vector2(48.5, 104.6), Vector2(46.6, 104.9), Vector2(44.9, 105.3), Vector2(43, 105.8), Vector2(41.3, 106.2), Vector2(39.5, 106.8), Vector2(37.8, 107.4), Vector2(37.9, 107.3), Vector2(37.9, 107.3), Vector2(37.9, 107.3), Vector2(37.8, 107), Vector2(37.6, 106.8), Vector2(37.6, 106.6), Vector2(37.4, 106.2), Vector2(39.5, 105.8), Vector2(41.7, 105.3), Vector2(43.9, 105), Vector2(46.3, 104.7), Vector2(48.5, 104.6), Vector2(42.3, 106.6), Vector2(36.7, 109.3), Vector2(32, 112.2), Vector2(30.4, 101), Vector2(29.2, 90.1), Vector2(28.1, 79.5), Vector2(18, 62.9), Vector2(8, 46.5), Vector2(-1.5, 30.6), Vector2(-3.3, 26.2), Vector2(-5, 21.8), Vector2(-7.7, 19.6), Vector2(-10.4, 17.4), Vector2(-13.1, 15.2), Vector2(-15.7, 13.2), Vector2(-22.6, 47.1), Vector2(-29.5, 81.1), Vector2(-36.4, 115.1), Vector2(-36.3, 114.5), Vector2(-36.2, 113.8), Vector2(-36.2, 115.4), Vector2(-36.2, 117.1), Vector2(-35, 118.1), Vector2(-33.4, 119.3), Vector2(-31.4, 120.7), Vector2(-28.9, 122.1), Vector2(-28.9, 122.1), Vector2(-28.8, 121.5), Vector2(-28.9, 121), Vector2(-28.8, 121.6), Vector2(-28.9, 122.1), Vector2(-28.1, 123.1), Vector2(-27.5, 124.2), Vector2(-37.7, 94), Vector2(-47.7, 63.6), Vector2(-61.8, 41.4), Vector2(-76, 19), Vector2(-80, 22.1), Vector2(-83.8, 24.9), Vector2(-87.4, 27.7), Vector2(-96.6, 56.9), Vector2(-105.9, 85.9), Vector2(-105.2, 98.8), Vector2(-104.3, 111.8), Vector2(-103.5, 124.5), Vector2(-102.7, 137.5), Vector2(-102.7, 137.5), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1), Vector2(-116.9, 167.1)]
}
tracks/191/type = "value"
tracks/191/imported = false
tracks/191/enabled = true
tracks/191/path = NodePath("Body/Zombie_dolphinrider_outerleg_lower:rotation")
tracks/191/interp = 1
tracks/191/loop_wrap = true
tracks/191/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.015708, -0.038397, -0.055851, -0.076794, -0.095993, -0.116937, -0.137881, -0.116937, -0.095993, -0.076794, -0.055851, -0.038397, -0.015708, 0.0, -0.305433, -0.294961, -0.282743, -0.274017, -0.26529, -0.282743, -0.300197, -0.319395, -0.23911, -0.16057, -0.08203, -0.003491, -0.090757, -0.181514, -0.270526, -0.361283, -0.352557, -0.34383, -0.338594, -0.331613, -0.303687, -0.279253, -0.253073, -0.230383, -0.204204, -0.247837, -0.29147, -0.335103, -0.383972, -0.462512, -0.541052, -0.619592, -0.698132, -0.631809, -0.567232, -0.500909, -0.436332, -0.37001, -0.305433, -0.305433, -0.294961, -0.282743, -0.274017, -0.26529, -0.282743, -0.300197, -0.319395, -0.23911, -0.16057, -0.08203, -0.003491, -0.090757, -0.181514, -0.270526, -0.361283, -0.352557, -0.34383, -0.338594, -0.331613, -0.303687, -0.279253, -0.253073, -0.230383, -0.204204, -0.247837, -0.29147, -0.335103, -0.383972, -0.462512, -0.541052, -0.619592, -0.698132, -0.631809, -0.567232, -0.500909, -0.436332, -0.37001, -0.305433, 0.0, -0.073304, -0.148353, -0.225147, -0.300197, -0.375246, -0.453786, -0.453786, -0.45204, -0.453786, -0.45204, -0.453786, -0.453786, -0.453786, -0.361283, -0.268781, -0.178024, -0.087266, 0.0, -0.260054, -0.527089, -0.790634, -0.642281, -0.497419, -0.350811, -0.16057, 0.02618, 0.216421, 0.293215, 0.3735, 0.280998, 0.188496, 0.095993, 0.006981, -0.05236, -0.116937, -0.179769, -0.204204, -0.232129, -0.230383, -0.232129, -0.427606, -0.624828, -0.82205, -1.01927, -1.01927, -1.0088, -0.993092, -1.0088, -1.01927, -1.04894, -1.07338, -1.00007, -0.925024, -0.965167, -1.00007, -1.15366, -1.30551, -1.45561, -1.55858, -1.65632, -1.73137, -1.80991, -1.88845, -1.96873, -1.96873, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391, -1.71391]
}
tracks/192/type = "value"
tracks/192/imported = false
tracks/192/enabled = true
tracks/192/path = NodePath("Body/Zombie_dolphinrider_outerleg_lower:scale")
tracks/192/interp = 1
tracks/192/loop_wrap = true
tracks/192/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.806), Vector2(0.796, 0.815), Vector2(0.795, 0.825), Vector2(0.795, 0.835), Vector2(0.794, 0.834), Vector2(0.794, 0.833), Vector2(0.794, 0.833), Vector2(0.794, 0.833), Vector2(0.793, 0.833), Vector2(0.793, 0.833), Vector2(0.793, 0.833), Vector2(0.793, 0.833), Vector2(0.794, 0.833), Vector2(0.793, 0.832), Vector2(0.793, 0.832), Vector2(0.793, 0.832), Vector2(0.793, 0.833), Vector2(0.792, 0.831), Vector2(0.792, 0.831), Vector2(0.791, 0.831), Vector2(0.793, 0.832), Vector2(0.792, 0.825), Vector2(0.793, 0.82), Vector2(0.794, 0.814), Vector2(0.796, 0.809), Vector2(0.797, 0.803), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.806), Vector2(0.796, 0.815), Vector2(0.795, 0.825), Vector2(0.795, 0.835), Vector2(0.794, 0.834), Vector2(0.794, 0.833), Vector2(0.794, 0.833), Vector2(0.794, 0.833), Vector2(0.793, 0.833), Vector2(0.793, 0.833), Vector2(0.793, 0.833), Vector2(0.793, 0.833), Vector2(0.794, 0.833), Vector2(0.793, 0.832), Vector2(0.793, 0.832), Vector2(0.793, 0.832), Vector2(0.793, 0.833), Vector2(0.792, 0.831), Vector2(0.792, 0.831), Vector2(0.791, 0.831), Vector2(0.793, 0.832), Vector2(0.792, 0.825), Vector2(0.793, 0.82), Vector2(0.794, 0.814), Vector2(0.796, 0.809), Vector2(0.797, 0.803), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.816), Vector2(0.799, 0.833), Vector2(0.798, 0.849), Vector2(0.798, 0.865), Vector2(0.797, 0.882), Vector2(0.798, 0.899), Vector2(0.797, 0.898), Vector2(0.796, 0.897), Vector2(0.797, 0.898), Vector2(0.796, 0.897), Vector2(0.796, 0.897), Vector2(0.796, 0.897), Vector2(0.798, 0.899), Vector2(0.797, 0.878), Vector2(0.798, 0.859), Vector2(0.799, 0.839), Vector2(0.799, 0.82), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.797), Vector2(0.801, 0.797), Vector2(0.805, 0.797), Vector2(0.804, 0.797), Vector2(0.804, 0.796), Vector2(0.803, 0.796), Vector2(0.802, 0.794), Vector2(0.803, 0.795), Vector2(0.801, 0.794), Vector2(0.801, 0.793), Vector2(0.8, 0.793), Vector2(0.8, 0.792), Vector2(0.798, 0.79), Vector2(0.796, 0.789), Vector2(0.794, 0.787), Vector2(0.793, 0.786), Vector2(0.793, 0.786), Vector2(0.793, 0.785), Vector2(0.793, 0.786), Vector2(0.792, 0.784), Vector2(0.791, 0.784), Vector2(0.79, 0.783), Vector2(0.791, 0.784), Vector2(0.791, 0.784), Vector2(0.79, 0.782), Vector2(0.791, 0.783), Vector2(0.79, 0.782), Vector2(0.791, 0.784), Vector2(0.79, 0.782), Vector2(0.791, 0.783), Vector2(0.789, 0.782), Vector2(0.79, 0.782), Vector2(0.788, 0.781), Vector2(0.789, 0.782), Vector2(0.788, 0.78), Vector2(0.787, 0.78), Vector2(0.788, 0.78), Vector2(0.788, 0.781), Vector2(0.789, 0.782), Vector2(0.789, 0.782), Vector2(0.788, 0.781), Vector2(0.788, 0.781), Vector2(0.788, 0.781), Vector2(0.788, 0.781), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78), Vector2(0.787, 0.78)]
}
tracks/193/type = "value"
tracks/193/imported = false
tracks/193/enabled = true
tracks/193/path = NodePath("Body/Zombie_dolphinrider_outerleg_lower:skew")
tracks/193/interp = 1
tracks/193/loop_wrap = true
tracks/193/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, -2e-07, 5e-07, -5e-07, -1e-07, -1e-07, 0.0, -1e-07, -1e-07, -5e-07, 5e-07, -2e-07, 0.0, 0.0, 4e-07, 4e-07, -3e-07, 3e-07, 0.0, -3e-07, 4e-07, -2e-07, -1e-07, -3e-07, -5e-07, 3e-07, -1e-07, -2e-07, 0.0, -1e-07, 5e-07, 1e-07, 1e-07, 4e-07, -3e-07, 3e-07, 3e-07, -5e-07, 5e-07, 3e-07, 0.0, -2e-07, -4e-07, -2e-07, -1e-07, 1e-07, 3e-07, -2e-07, 0.0, -5e-07, -3e-07, 2e-07, 4e-07, 4e-07, 4e-07, -3e-07, 3e-07, 0.0, -3e-07, 4e-07, -2e-07, -1e-07, -3e-07, -5e-07, 3e-07, -1e-07, -2e-07, 0.0, -1e-07, 5e-07, 1e-07, 1e-07, 4e-07, -3e-07, 3e-07, 3e-07, -5e-07, 5e-07, 3e-07, 0.0, -2e-07, -4e-07, -2e-07, -1e-07, 1e-07, 3e-07, -2e-07, 0.0, -5e-07, -3e-07, 2e-07, 4e-07, 0.0, 2e-07, 0.0, -5e-07, 4e-07, 2e-07, 4e-07, 4e-07, -3e-07, 4e-07, -3e-07, 4e-07, 4e-07, 4e-07, -1e-07, 3e-07, 4e-07, -5e-07, 0.0, -1e-07, -4e-07, -1e-07, 0.0453784, 0.0925026, 0.137881, 0.139626, 0.136136, 0.136135, 0.136136, 0.136136, 0.13439, 0.136135, 0.136136, 0.136136, 0.1309, 0.13439, 0.137881, 0.136136, 0.137881, 0.136135, 0.137881, 0.136136, 0.136136, 0.136136, 0.136135, 0.136135, 0.139626, 0.136135, 0.139626, 0.136135, 0.139626, 0.136135, 0.136136, 0.13788, 0.139626, 0.136136, 0.136136, 0.13439, 0.136136, 0.137881, 0.136135, 0.136136, 0.136135, 0.136135, 0.137881, 0.137881, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135, 0.136135]
}
tracks/194/type = "value"
tracks/194/imported = false
tracks/194/enabled = true
tracks/194/path = NodePath("Body/Zombie_dolphinrider_outerleg_lower:texture")
tracks/194/interp = 1
tracks/194/loop_wrap = true
tracks/194/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("17_fuck"), ExtResource("17_fuck")]
}
tracks/195/type = "value"
tracks/195/imported = false
tracks/195/enabled = true
tracks/195/path = NodePath("Body/Zombie_dolphinrider_outerleg_lower:self_modulate")
tracks/195/interp = 1
tracks/195/loop_wrap = true
tracks/195/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0)]
}
tracks/196/type = "value"
tracks/196/imported = false
tracks/196/enabled = true
tracks/196/path = NodePath("Body/Zombie_dolphinrider_outerleg_upper:visible")
tracks/196/interp = 1
tracks/196/loop_wrap = true
tracks/196/keys = {
"times": PackedFloat32Array(0, 13.25, 13.3333, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [true, true, false, false]
}
tracks/197/type = "value"
tracks/197/imported = false
tracks/197/enabled = true
tracks/197/path = NodePath("Body/Zombie_dolphinrider_outerleg_upper:position")
tracks/197/interp = 1
tracks/197/loop_wrap = true
tracks/197/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(49.3, 79), Vector2(49, 79.2), Vector2(49, 79.2), Vector2(48.7, 79.3), Vector2(48.5, 79.4), Vector2(48.3, 79.5), Vector2(48.1, 79.7), Vector2(47.9, 79.8), Vector2(48.1, 79.7), Vector2(48.2, 79.6), Vector2(48.4, 79.4), Vector2(48.6, 79.3), Vector2(48.9, 79.3), Vector2(49, 79.2), Vector2(49.3, 79), Vector2(50.3, 78.6), Vector2(50.6, 78.1), Vector2(51, 77.6), Vector2(51.2, 77.4), Vector2(51.6, 77.2), Vector2(51.9, 76.7), Vector2(52.3, 76.1), Vector2(52.6, 75.6), Vector2(53, 75.5), Vector2(53.5, 75.4), Vector2(53.8, 75.3), Vector2(54.2, 75.2), Vector2(52.1, 77.3), Vector2(50.1, 79.3), Vector2(48, 81.6), Vector2(46.1, 83.8), Vector2(46.3, 83.3), Vector2(46.5, 82.8), Vector2(46.5, 82.5), Vector2(46.7, 82.2), Vector2(47.4, 81.5), Vector2(48, 80.8), Vector2(48.8, 80.2), Vector2(49.4, 79.5), Vector2(50.2, 78.9), Vector2(50.5, 79.3), Vector2(50.7, 79.5), Vector2(51, 79.8), Vector2(51.1, 80.1), Vector2(49.3, 81.8), Vector2(47.5, 83.5), Vector2(45.9, 85.2), Vector2(44, 87), Vector2(45, 85.3), Vector2(45.9, 83.7), Vector2(46.9, 82.3), Vector2(48, 80.9), Vector2(49.1, 79.7), Vector2(50.3, 78.6), Vector2(50.3, 78.6), Vector2(50.6, 78.1), Vector2(51, 77.6), Vector2(51.2, 77.4), Vector2(51.6, 77.2), Vector2(51.9, 76.7), Vector2(52.3, 76.1), Vector2(52.6, 75.6), Vector2(53, 75.5), Vector2(53.5, 75.4), Vector2(53.8, 75.3), Vector2(54.2, 75.2), Vector2(52.1, 77.3), Vector2(50.1, 79.3), Vector2(48, 81.6), Vector2(46.1, 83.8), Vector2(46.3, 83.3), Vector2(46.5, 82.8), Vector2(46.5, 82.5), Vector2(46.7, 82.2), Vector2(47.4, 81.5), Vector2(48, 80.8), Vector2(48.8, 80.2), Vector2(49.4, 79.5), Vector2(50.2, 78.9), Vector2(50.5, 79.3), Vector2(50.7, 79.5), Vector2(51, 79.8), Vector2(51.1, 80.1), Vector2(49.3, 81.8), Vector2(47.5, 83.5), Vector2(45.9, 85.2), Vector2(44, 87), Vector2(45, 85.3), Vector2(45.9, 83.7), Vector2(46.9, 82.3), Vector2(48, 80.9), Vector2(49.1, 79.7), Vector2(50.3, 78.6), Vector2(49.3, 79), Vector2(48.8, 79), Vector2(48.2, 78.9), Vector2(47.8, 78.8), Vector2(47.2, 78.8), Vector2(46.8, 78.8), Vector2(46.4, 78.8), Vector2(49, 79.1), Vector2(51.6, 79.5), Vector2(54, 80), Vector2(56.1, 81.2), Vector2(58, 82.3), Vector2(59.9, 83.8), Vector2(62.1, 85.2), Vector2(59.6, 83.1), Vector2(57, 81.4), Vector2(54.5, 80.2), Vector2(51.8, 79.4), Vector2(49.3, 79), Vector2(49.6, 80.4), Vector2(50.2, 82.6), Vector2(50.7, 85.5), Vector2(39.8, 73.7), Vector2(29.2, 63.6), Vector2(19.3, 55.3), Vector2(19.3, 37.8), Vector2(20.3, 23.1), Vector2(21.2, 11.3), Vector2(20.9, 8.8), Vector2(20.4, 6.3), Vector2(20.4, 8.2), Vector2(20, 10.4), Vector2(19.1, 12.7), Vector2(18, 15.2), Vector2(8.1, 40.4), Vector2(-3, 66.9), Vector2(-15.3, 94.7), Vector2(-13.6, 94.8), Vector2(-12, 94.9), Vector2(-14, 94.9), Vector2(-16.1, 95.1), Vector2(-15.4, 94.7), Vector2(-14.8, 94.3), Vector2(-14.2, 94.1), Vector2(-13.6, 93.7), Vector2(-13.6, 93.7), Vector2(-13.7, 92.8), Vector2(-14, 91.6), Vector2(-13.9, 92.7), Vector2(-13.6, 93.7), Vector2(-13.6, 94.5), Vector2(-13.7, 95.1), Vector2(-21.8, 66), Vector2(-29.8, 36.9), Vector2(-45, 14.1), Vector2(-60.2, -8.8), Vector2(-68.7, -7.4), Vector2(-77.1, -5.8), Vector2(-85.4, -3.7), Vector2(-97.9, 25.1), Vector2(-110.4, 54.1), Vector2(-112.1, 67.6), Vector2(-113.6, 81.2), Vector2(-115.2, 94.8), Vector2(-116.8, 108.6), Vector2(-122.4, 121.2), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9), Vector2(-123, 135.9)]
}
tracks/198/type = "value"
tracks/198/imported = false
tracks/198/enabled = true
tracks/198/path = NodePath("Body/Zombie_dolphinrider_outerleg_upper:rotation")
tracks/198/interp = 1
tracks/198/loop_wrap = true
tracks/198/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.005236, 0.005236, 0.008727, 0.010472, 0.013963, 0.017453, 0.013963, 0.010472, 0.008727, 0.005236, 0.005236, 0.0, 0.0, 0.127409, 0.200713, 0.272271, 0.345575, 0.418879, 0.467748, 0.520108, 0.570723, 0.603884, 0.63879, 0.673697, 0.708604, 0.652753, 0.598648, 0.542797, 0.488692, 0.427606, 0.366519, 0.305433, 0.244346, 0.20944, 0.174533, 0.139626, 0.10472, 0.073304, 0.02618, -0.012217, -0.059341, -0.10472, -0.172788, -0.242601, -0.308923, -0.382227, -0.294961, -0.20944, -0.125664, -0.038397, 0.040143, 0.127409, 0.127409, 0.200713, 0.272271, 0.345575, 0.418879, 0.467748, 0.520108, 0.570723, 0.603884, 0.63879, 0.673697, 0.708604, 0.652753, 0.598648, 0.542797, 0.488692, 0.427606, 0.366519, 0.305433, 0.244346, 0.20944, 0.174533, 0.139626, 0.10472, 0.073304, 0.02618, -0.012217, -0.059341, -0.10472, -0.172788, -0.242601, -0.308923, -0.382227, -0.294961, -0.20944, -0.125664, -0.038397, 0.040143, 0.127409, 0.0, 0.027925, 0.057596, 0.087266, 0.118682, 0.148353, 0.179769, 0.279253, 0.380482, 0.481711, 0.560251, 0.63879, 0.71733, 0.79587, 0.63879, 0.476475, 0.319395, 0.15708, 0.0, 0.197222, 0.397935, 0.600393, 0.270526, -0.05236, -0.382227, 0.02618, 0.441568, 0.855211, 0.932006, 1.01229, 1.17286, 1.33343, 1.49226, 1.65108, 1.32645, 1.00182, 0.675442, 0.757473, 0.842994, 0.748746, 0.652753, 0.617847, 0.581195, 0.546288, 0.511381, 0.511381, 0.493928, 0.481711, 0.493928, 0.511381, 0.485202, 0.457276, 0.534071, 0.607375, 0.568977, 0.53058, 0.376991, 0.223402, 0.073304, -0.020944, -0.123918, -0.198968, -0.277507, -0.356047, -0.434587, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514, -0.181514]
}
tracks/199/type = "value"
tracks/199/imported = false
tracks/199/enabled = true
tracks/199/path = NodePath("Body/Zombie_dolphinrider_outerleg_upper:scale")
tracks/199/interp = 1
tracks/199/loop_wrap = true
tracks/199/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.914), Vector2(0.8, 0.914), Vector2(0.8, 0.914), Vector2(0.8, 0.914), Vector2(0.8, 0.914), Vector2(0.8, 0.914), Vector2(0.799, 0.914), Vector2(0.799, 0.914), Vector2(0.799, 0.914), Vector2(0.8, 0.914), Vector2(0.8, 0.914), Vector2(0.8, 0.914), Vector2(0.8, 0.914), Vector2(0.8, 0.914), Vector2(0.8, 0.914), Vector2(0.799, 0.913), Vector2(0.798, 0.913), Vector2(0.798, 0.912), Vector2(0.798, 0.912), Vector2(0.799, 0.913), Vector2(0.798, 0.912), Vector2(0.797, 0.911), Vector2(0.798, 0.913), Vector2(0.797, 0.911), Vector2(0.797, 0.911), Vector2(0.797, 0.911), Vector2(0.798, 0.912), Vector2(0.796, 0.91), Vector2(0.796, 0.91), Vector2(0.796, 0.91), Vector2(0.797, 0.911), Vector2(0.796, 0.909), Vector2(0.796, 0.909), Vector2(0.796, 0.909), Vector2(0.796, 0.91), Vector2(0.796, 0.909), Vector2(0.796, 0.909), Vector2(0.796, 0.909), Vector2(0.796, 0.909), Vector2(0.796, 0.909), Vector2(0.795, 0.909), Vector2(0.795, 0.909), Vector2(0.795, 0.908), Vector2(0.795, 0.908), Vector2(0.794, 0.907), Vector2(0.793, 0.907), Vector2(0.793, 0.906), Vector2(0.793, 0.907), Vector2(0.794, 0.907), Vector2(0.795, 0.908), Vector2(0.796, 0.91), Vector2(0.797, 0.911), Vector2(0.798, 0.912), Vector2(0.799, 0.913), Vector2(0.799, 0.913), Vector2(0.798, 0.913), Vector2(0.798, 0.912), Vector2(0.798, 0.912), Vector2(0.799, 0.913), Vector2(0.798, 0.912), Vector2(0.797, 0.911), Vector2(0.798, 0.913), Vector2(0.797, 0.911), Vector2(0.797, 0.911), Vector2(0.797, 0.911), Vector2(0.798, 0.912), Vector2(0.796, 0.91), Vector2(0.796, 0.91), Vector2(0.796, 0.91), Vector2(0.797, 0.911), Vector2(0.796, 0.909), Vector2(0.796, 0.909), Vector2(0.796, 0.909), Vector2(0.796, 0.91), Vector2(0.796, 0.909), Vector2(0.796, 0.909), Vector2(0.796, 0.909), Vector2(0.796, 0.909), Vector2(0.796, 0.909), Vector2(0.795, 0.909), Vector2(0.795, 0.909), Vector2(0.795, 0.908), Vector2(0.795, 0.908), Vector2(0.794, 0.907), Vector2(0.793, 0.907), Vector2(0.793, 0.906), Vector2(0.793, 0.907), Vector2(0.794, 0.907), Vector2(0.795, 0.908), Vector2(0.796, 0.91), Vector2(0.797, 0.911), Vector2(0.798, 0.912), Vector2(0.799, 0.913), Vector2(0.8, 0.914), Vector2(0.8, 0.914), Vector2(0.8, 0.914), Vector2(0.8, 0.914), Vector2(0.799, 0.914), Vector2(0.799, 0.913), Vector2(0.8, 0.914), Vector2(0.798, 0.912), Vector2(0.796, 0.91), Vector2(0.796, 0.91), Vector2(0.795, 0.908), Vector2(0.796, 0.909), Vector2(0.796, 0.909), Vector2(0.798, 0.912), Vector2(0.797, 0.911), Vector2(0.798, 0.912), Vector2(0.798, 0.913), Vector2(0.799, 0.913), Vector2(0.8, 0.914), Vector2(0.799, 0.913), Vector2(0.798, 0.912), Vector2(0.798, 0.912), Vector2(0.797, 0.91), Vector2(0.796, 0.91), Vector2(0.796, 0.91), Vector2(0.795, 0.909), Vector2(0.794, 0.907), Vector2(0.794, 0.908), Vector2(0.793, 0.906), Vector2(0.794, 0.907), Vector2(0.792, 0.906), Vector2(0.792, 0.906), Vector2(0.792, 0.906), Vector2(0.792, 0.905), Vector2(0.79, 0.903), Vector2(0.788, 0.901), Vector2(0.788, 0.901), Vector2(0.787, 0.899), Vector2(0.788, 0.9), Vector2(0.786, 0.898), Vector2(0.787, 0.9), Vector2(0.786, 0.898), Vector2(0.786, 0.898), Vector2(0.785, 0.898), Vector2(0.786, 0.899), Vector2(0.786, 0.899), Vector2(0.785, 0.897), Vector2(0.786, 0.898), Vector2(0.785, 0.897), Vector2(0.786, 0.899), Vector2(0.785, 0.897), Vector2(0.786, 0.898), Vector2(0.784, 0.897), Vector2(0.785, 0.897), Vector2(0.784, 0.895), Vector2(0.784, 0.896), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.784, 0.896), Vector2(0.785, 0.897), Vector2(0.784, 0.896), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.784, 0.896), Vector2(0.929, 0.604), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895), Vector2(0.783, 0.895)]
}
tracks/200/type = "value"
tracks/200/imported = false
tracks/200/enabled = true
tracks/200/path = NodePath("Body/Zombie_dolphinrider_outerleg_upper:skew")
tracks/200/interp = 1
tracks/200/loop_wrap = true
tracks/200/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, -4e-07, 0.0, -4e-07, 3e-07, -4e-07, 0.0, -4e-07, 0.0, 0.0, 0.0, 0.0, 0.0017454, -1e-07, 4e-07, 2e-07, 0.0, 2e-07, 1e-07, 0.001745, -1e-07, 5e-07, 1e-07, -3e-07, 1e-07, -1e-07, 4e-07, 2e-07, -3e-07, 1e-07, -4e-07, 1e-07, -5e-07, -1e-07, 3e-07, -2e-07, -2e-07, -1e-07, -3e-07, -2e-07, 2e-07, 4e-07, 2e-07, -3e-07, -1e-07, 4e-07, 5e-07, 3e-07, -2e-07, -4e-07, 0.0017454, 0.0017454, -1e-07, 4e-07, 2e-07, 0.0, 2e-07, 1e-07, 0.001745, -1e-07, 5e-07, 1e-07, -3e-07, 1e-07, -1e-07, 4e-07, 2e-07, -3e-07, 1e-07, -4e-07, 1e-07, -5e-07, -1e-07, 3e-07, -2e-07, -2e-07, -1e-07, -3e-07, -2e-07, 2e-07, 4e-07, 2e-07, -3e-07, -1e-07, 4e-07, 5e-07, 3e-07, -2e-07, -4e-07, 0.0017454, 0.0, 3e-07, -1e-07, 5e-07, 4e-07, 0.0, -1e-07, -3e-07, -2e-07, -1e-07, -3e-07, 5e-07, 3e-07, 1e-07, 5e-07, -1e-07, 2e-07, -4e-07, 0.0, 2e-07, 1e-07, 3e-07, 0.0, 1e-07, -1e-07, -1e-07, 3e-07, 3e-07, -2e-07, -1e-07, 2e-07, -5e-07, 5e-07, 4e-07, 2e-07, 0.0, 4e-07, -1e-07, 0.0, 2e-07, 1e-07, -5e-07, -4e-07, 0.0, 5e-07, 5e-07, 2e-07, -1e-07, 2e-07, 5e-07, -5e-07, 3e-07, -3e-07, -4e-07, 3e-07, 1e-07, 1e-07, 1e-07, -2e-07, 0.0, -4e-07, 5e-07, -3e-07, -2e-07, 0.0, -0.089012, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07]
}
tracks/201/type = "value"
tracks/201/imported = false
tracks/201/enabled = true
tracks/201/path = NodePath("Body/Zombie_dolphinrider_outerleg_upper:texture")
tracks/201/interp = 1
tracks/201/loop_wrap = true
tracks/201/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("18_fuck"), ExtResource("18_fuck")]
}
tracks/202/type = "value"
tracks/202/imported = false
tracks/202/enabled = true
tracks/202/path = NodePath("Body/Zombie_dolphinrider_outerleg_upper:self_modulate")
tracks/202/interp = 1
tracks/202/loop_wrap = true
tracks/202/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 0)]
}
tracks/203/type = "value"
tracks/203/imported = false
tracks/203/enabled = true
tracks/203/path = NodePath("Body/Zombie_dolphinrider_whitewater:visible")
tracks/203/interp = 1
tracks/203/loop_wrap = true
tracks/203/keys = {
"times": PackedFloat32Array(0, 10.0833, 10.1667, 12.5, 12.5833, 13.0833, 13.1667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [false, false, true, true, false, false, true, true]
}
tracks/204/type = "value"
tracks/204/imported = false
tracks/204/enabled = true
tracks/204/path = NodePath("Body/Zombie_dolphinrider_whitewater:position")
tracks/204/interp = 1
tracks/204/loop_wrap = true
tracks/204/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(0, 0), Vector2(-44, 125.6), Vector2(-44.4, 125.6), Vector2(-44.8, 125.6), Vector2(-45.1, 125.6), Vector2(-44.8, 125.6), Vector2(-44.6, 125.6), Vector2(-44.3, 125.6), Vector2(-44, 125.6), Vector2(-47.7, 126.3), Vector2(-51.6, 126.8), Vector2(-47.9, 126.3), Vector2(-44.4, 125.6), Vector2(-43.7, 125.6), Vector2(-42.9, 125.6), Vector2(-42.3, 125.6), Vector2(-41.5, 125.6), Vector2(-41.9, 125), Vector2(-41.7, 125.6), Vector2(-41.5, 124.4), Vector2(-41.9, 125), Vector2(-41.7, 125.6), Vector2(-41.5, 125.6), Vector2(-41.7, 125.6), Vector2(-18.6, 125.2), Vector2(0.3, 126.3), Vector2(5.2, 125.8), Vector2(9.8, 126.1), Vector2(9.8, 126.1), Vector2(9.8, 126.1), Vector2(9.8, 126.1), Vector2(9.8, 126.1), Vector2(9.8, 126.1), Vector2(9.8, 126.1), Vector2(9.8, 126.1), Vector2(9.8, 126.1), Vector2(9.8, 126.1), Vector2(-133.7, 132.6), Vector2(-132.2, 133.6), Vector2(-132.8, 133.7), Vector2(-133.6, 133.8), Vector2(-134.2, 133.6), Vector2(-134.6, 133.4), Vector2(-134.7, 132.4), Vector2(-134.9, 131.5), Vector2(38.9, 71.7), Vector2(38.6, 70.8), Vector2(40.1, 72.6), Vector2(38.9, 71.7), Vector2(38.6, 70.8), Vector2(40.1, 72.6), Vector2(38.9, 71.7), Vector2(38.6, 70.8), Vector2(40.1, 71.2), Vector2(39.5, 70), Vector2(39.3, 68.5), Vector2(40.4, 70.8), Vector2(38.9, 71.7), Vector2(37, 70.7), Vector2(36.1, 73), Vector2(33.4, 73.1), Vector2(33, 71.7), Vector2(34.5, 74.6), Vector2(34, 73.1), Vector2(34.8, 71.5), Vector2(36.8, 73.7), Vector2(36.1, 73.1), Vector2(36.6, 70.8), Vector2(38.4, 72.6), Vector2(38, 71.8), Vector2(38.5, 70.8), Vector2(40.1, 72.6), Vector2(39.3, 71.7), Vector2(39.9, 70.8), Vector2(42, 72.6), Vector2(41.1, 70.5), Vector2(41.6, 69.3), Vector2(41, 72.6), Vector2(38.9, 71.7), Vector2(36.6, 71.3), Vector2(35.5, 74.2), Vector2(35.9, 72.7), Vector2(36, 71.7), Vector2(37.5, 73.6), Vector2(36.6, 71.8), Vector2(37, 71.8), Vector2(39.4, 73), Vector2(38.9, 71.7), Vector2(38.6, 70.8), Vector2(40.1, 72.6), Vector2(38.9, 71.7), Vector2(38.6, 70.8), Vector2(40.1, 72.6), Vector2(38.9, 71.7), Vector2(38.6, 70.8), Vector2(40.1, 71.2), Vector2(39.5, 70), Vector2(39.3, 68.5), Vector2(40.4, 70.8), Vector2(38.9, 71.7), Vector2(37, 70.7), Vector2(36.1, 73), Vector2(33.4, 73.1), Vector2(33, 71.7), Vector2(34.5, 74.6), Vector2(34, 73.1), Vector2(34.8, 71.5), Vector2(36.8, 73.7), Vector2(36.1, 73.1), Vector2(36.6, 70.8), Vector2(38.4, 72.6), Vector2(38, 71.8), Vector2(38.5, 70.8), Vector2(40.1, 72.6), Vector2(39.3, 71.7), Vector2(39.9, 70.8), Vector2(42, 72.6), Vector2(41.1, 70.5), Vector2(41.6, 69.3), Vector2(41, 72.6), Vector2(38.9, 71.7), Vector2(36.6, 71.3), Vector2(35.5, 74.2), Vector2(35.9, 72.7), Vector2(36, 71.7), Vector2(37.5, 73.6), Vector2(36.6, 71.8), Vector2(37, 71.8), Vector2(39.4, 73)]
}
tracks/205/type = "value"
tracks/205/imported = false
tracks/205/enabled = true
tracks/205/path = NodePath("Body/Zombie_dolphinrider_whitewater:rotation")
tracks/205/interp = 1
tracks/205/loop_wrap = true
tracks/205/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values
}
tracks/206/type = "value"
tracks/206/imported = false
tracks/206/enabled = true
tracks/206/path = NodePath("Body/Zombie_dolphinrider_whitewater:scale")
tracks/206/interp = 1
tracks/206/loop_wrap = true
tracks/206/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(1, 1), Vector2(0.7, 0.7), Vector2(0.709, 0.7), Vector2(0.717, 0.7), Vector2(0.726, 0.7), Vector2(0.719, 0.7), Vector2(0.713, 0.7), Vector2(0.706, 0.7), Vector2(0.7, 0.7), Vector2(0.755, 0.7), Vector2(0.809, 0.7), Vector2(0.755, 0.7), Vector2(0.7, 0.7), Vector2(0.689, 0.7), Vector2(0.677, 0.7), Vector2(0.666, 0.7), Vector2(0.655, 0.7), Vector2(0.691, 0.7), Vector2(0.668, 0.7), Vector2(0.655, 0.7), Vector2(0.691, 0.7), Vector2(0.668, 0.7), Vector2(0.655, 0.7), Vector2(0.668, 0.7), Vector2(0.461, 0.7), Vector2(0.255, 0.513), Vector2(0.168, 0.435), Vector2(0.082, 0.357), Vector2(0.082, 0.357), Vector2(0.082, 0.357), Vector2(0.082, 0.357), Vector2(0.082, 0.357), Vector2(0.082, 0.357), Vector2(0.082, 0.357), Vector2(0.082, 0.357), Vector2(0.082, 0.357), Vector2(0.082, 0.357), Vector2(0.301, 0.602), Vector2(0.245, 0.602), Vector2(0.258, 0.637), Vector2(0.272, 0.671), Vector2(0.258, 0.637), Vector2(0.245, 0.602), Vector2(0.245, 0.602), Vector2(0.245, 0.602), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.247, 0.7), Vector2(0.23, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.246, 0.602), Vector2(0.246, 0.7), Vector2(0.231, 0.62), Vector2(0.246, 0.602), Vector2(0.246, 0.7), Vector2(0.23, 0.62), Vector2(0.246, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.247, 0.7), Vector2(0.23, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.246, 0.602), Vector2(0.246, 0.7), Vector2(0.231, 0.62), Vector2(0.246, 0.602), Vector2(0.246, 0.7), Vector2(0.23, 0.62), Vector2(0.246, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62), Vector2(0.245, 0.602), Vector2(0.246, 0.7), Vector2(0.229, 0.62)]
}
tracks/207/type = "value"
tracks/207/imported = false
tracks/207/enabled = true
tracks/207/path = NodePath("Body/Zombie_dolphinrider_whitewater:skew")
tracks/207/interp = 1
tracks/207/loop_wrap = true
tracks/207/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0034907, -0.0157083, -0.0034907, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.020944, 0.0, 0.0, 0.0, 0.0, 5e-07, 0.0, 2e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, -4e-07, 0.0, 2e-07, -4e-07, 0.0, 2e-07, -4e-07, -0.045379, -0.0471238, -0.0872664, -0.094248, 2e-07, -4e-07, 0.0, 0.10472, 0.0453786, 0.127409, 0.10472, 0.0715586, 0.075049, 0.10472, -4e-07, 0.0, 2e-07, -4e-07, 0.0, 2e-07, -4e-07, 0.0, -0.0436328, -0.0436334, 0.0, 2e-07, -4e-07, 0.0, 2e-07, -4e-07, 0.0, 2e-07, -4e-07, 0.0, 2e-07, -4e-07, 0.0, 2e-07, -4e-07, 0.0, 2e-07, -4e-07, -0.045379, -0.0471238, -0.0872664, -0.094248, 2e-07, -4e-07, 0.0, 0.10472, 0.0453786, 0.127409, 0.10472, 0.0715586, 0.075049, 0.10472, -4e-07, 0.0, 2e-07, -4e-07, 0.0, 2e-07, -4e-07, 0.0, -0.0436328, -0.0436334, 0.0, 2e-07, -4e-07, 0.0, 2e-07, -4e-07, 0.0, 2e-07, -4e-07, 0.0]
}
tracks/208/type = "value"
tracks/208/imported = false
tracks/208/enabled = true
tracks/208/path = NodePath("Body/Zombie_dolphinrider_whitewater:texture")
tracks/208/interp = 1
tracks/208/loop_wrap = true
tracks/208/keys = {
"times": PackedFloat32Array(0, 10.0833, 10.1667, 11.4167, 11.5, 11.5, 11.5833, 11.5833, 11.6667, 11.6667, 11.75, 11.75, 11.8333, 11.8333, 11.9167, 11.9167, 12, 13.0833, 13.1667, 13.8333, 13.9167, 13.9167, 14, 14, 14.0833, 14.0833, 14.1667, 14.1667, 14.25, 14.25, 14.3333, 14.3333, 14.4167, 14.4167, 14.5, 14.5, 14.5833, 14.5833, 14.6667, 14.6667, 14.75, 14.75, 14.8333, 14.8333, 14.9167, 14.9167, 15, 15, 15.0833, 15.0833, 15.1667, 15.1667, 15.25, 15.25, 15.3333, 15.3333, 15.4167, 15.4167, 15.5, 15.5, 15.5833, 15.5833, 15.6667, 15.6667, 15.75, 15.75, 15.8333, 15.8333, 15.9167, 15.9167, 16, 16, 16.0833, 16.0833, 16.1667, 16.1667, 16.25, 16.25, 16.3333, 16.3333, 16.4167, 16.4167, 16.5, 16.5, 16.5833, 16.5833, 16.6667, 16.6667, 16.75, 16.75, 16.8333, 16.8333, 16.9167, 16.9167, 17, 17, 17.0833, 17.0833, 17.1667, 17.1667, 17.25, 17.25, 17.3333, 17.3333, 17.4167, 17.4167, 17.5, 17.5, 17.5833, 17.5833, 17.6667, 17.6667, 17.75, 17.75, 17.8333, 17.8333, 17.9167, 17.9167, 18, 18, 18.0833, 18.0833, 18.1667, 18.1667, 18.25, 18.25, 18.3333, 18.3333, 18.4167, 18.4167, 18.5, 18.5, 18.5833, 18.5833, 18.6667, 18.6667, 18.75, 18.75, 18.8333, 18.8333, 18.9167, 18.9167, 19, 19, 19.0833, 19.0833, 19.1667, 19.1667, 19.25, 19.25, 19.3333, 19.3333, 19.4167, 19.4167, 19.5, 19.5, 19.5833, 19.5833, 19.6667, 19.6667, 19.75, 19.75, 19.8333, 19.8333, 19.9167, 19.9167, 20, 20, 20.0833, 20.0833, 20.1667, 20.1667, 20.25, 20.25, 20.3333, 20.3333, 20.4167, 20.4167, 20.5, 20.5, 20.5833, 20.5833, 20.6667, 20.6667, 20.75, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [null, null, ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck"), ExtResource("19_fuck"), ExtResource("19_fuck"), ExtResource("20_fuck"), ExtResource("20_fuck"), ExtResource("21_fuck"), ExtResource("21_fuck")]
}
tracks/209/type = "value"
tracks/209/imported = false
tracks/209/enabled = true
tracks/209/path = NodePath("Body/Zombie_dolphinrider_whitewater:self_modulate")
tracks/209/interp = 1
tracks/209/loop_wrap = true
tracks/209/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/210/type = "value"
tracks/210/imported = false
tracks/210/enabled = true
tracks/210/path = NodePath("Body/Anim_head2:visible")
tracks/210/interp = 1
tracks/210/loop_wrap = true
tracks/210/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [true, true]
}
tracks/211/type = "value"
tracks/211/imported = false
tracks/211/enabled = true
tracks/211/path = NodePath("Body/Anim_head2:position")
tracks/211/interp = 1
tracks/211/loop_wrap = true
tracks/211/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(7.3, 48.8), Vector2(6.7, 48.8), Vector2(6.1, 48.7), Vector2(5.1, 50.8), Vector2(4.2, 52.8), Vector2(3.3, 55), Vector2(2.4, 57), Vector2(1.4, 59), Vector2(1.9, 59.1), Vector2(2.4, 59.4), Vector2(3.3, 57.1), Vector2(4.3, 55), Vector2(5.3, 53), Vector2(6.2, 50.9), Vector2(7.3, 48.8), Vector2(8.1, 48.5), Vector2(9, 46.9), Vector2(10.1, 45.1), Vector2(10.8, 44.1), Vector2(11.5, 43), Vector2(12.1, 41.4), Vector2(12.7, 39.6), Vector2(13.6, 37.8), Vector2(14.7, 37.4), Vector2(15.8, 36.9), Vector2(16.9, 36.4), Vector2(18.1, 36), Vector2(14.3, 38.2), Vector2(10.3, 40.4), Vector2(4.3, 51.4), Vector2(-0.9, 62.6), Vector2(-0.4, 61.6), Vector2(0, 60.6), Vector2(1, 57.4), Vector2(2.3, 54.4), Vector2(4.1, 52), Vector2(5.8, 49.9), Vector2(7.7, 47.6), Vector2(9.6, 45.4), Vector2(11.5, 43), Vector2(12.8, 41.3), Vector2(14.2, 39.5), Vector2(15.5, 37.7), Vector2(17, 35.8), Vector2(13.6, 38.1), Vector2(10.3, 40.4), Vector2(5.6, 50.5), Vector2(1.2, 61), Vector2(2.5, 60), Vector2(3.9, 59), Vector2(4.8, 56.4), Vector2(5.8, 53.7), Vector2(7, 51), Vector2(8.1, 48.5), Vector2(8.1, 48.5), Vector2(9, 46.9), Vector2(10.1, 45.1), Vector2(10.8, 44.1), Vector2(11.5, 43), Vector2(12.1, 41.4), Vector2(12.7, 39.6), Vector2(13.6, 37.8), Vector2(14.7, 37.4), Vector2(15.8, 36.9), Vector2(16.9, 36.4), Vector2(18.1, 36), Vector2(13.4, 39.2), Vector2(8.5, 42.4), Vector2(3.4, 52.4), Vector2(-0.9, 62.6), Vector2(-0.1, 60.6), Vector2(0.5, 58.4), Vector2(1.4, 56.2), Vector2(2.3, 54.4), Vector2(4.1, 52), Vector2(5.8, 49.9), Vector2(7.7, 47.6), Vector2(9.6, 45.4), Vector2(11.5, 43), Vector2(12.8, 41.6), Vector2(14.2, 40), Vector2(15.5, 38.6), Vector2(17, 37), Vector2(13.7, 38.6), Vector2(10.3, 40.4), Vector2(5.6, 50.5), Vector2(1.2, 61), Vector2(2.5, 60), Vector2(3.9, 59), Vector2(4.8, 56.4), Vector2(5.8, 53.7), Vector2(7, 51), Vector2(8.1, 48.5), Vector2(7.3, 48.8), Vector2(5.6, 51.3), Vector2(3.9, 53.7), Vector2(2.3, 56.3), Vector2(0.7, 58.8), Vector2(-0.8, 61.2), Vector2(-2.5, 63.9), Vector2(2.8, 59), Vector2(8.5, 54.3), Vector2(14.2, 49.6), Vector2(20.7, 46.8), Vector2(27.3, 44), Vector2(33.9, 41.5), Vector2(40.5, 39.2), Vector2(33.6, 40.6), Vector2(27, 42.4), Vector2(20.2, 44.3), Vector2(13.7, 46.5), Vector2(7.3, 48.8), Vector2(4.1, 56.6), Vector2(0.9, 64.4), Vector2(-2.1, 72.2), Vector2(-5.3, 47.3), Vector2(-7.5, 23.4), Vector2(-9, 1), Vector2(-16.2, -3), Vector2(-23.1, -6.3), Vector2(-29.5, -8.8), Vector2(-30.7, -6), Vector2(-31.1, -2.9), Vector2(-32.4, -2), Vector2(-33.8, -1.1), Vector2(-35.2, -0.2), Vector2(-36.7, 0.5), Vector2(-45.1, 24.4), Vector2(-53.5, 48.4), Vector2(-61.8, 72.5), Vector2(-62.8, 82.9), Vector2(-63.6, 93.5), Vector2(-63.7, 90.8), Vector2(-63.9, 88), Vector2(-62.7, 84.1), Vector2(-61.3, 80.2), Vector2(-59.9, 76.5), Vector2(-58.1, 72.7), Vector2(-58.1, 72.7), Vector2(-58.2, 76.7), Vector2(-58, 81), Vector2(-58, 76.7), Vector2(-58.1, 72.7), Vector2(-58.6, 74.6), Vector2(-59.3, 76.5), Vector2(-67, 48.1), Vector2(-74.9, 19.8), Vector2(-89.6, -5.2), Vector2(-104.2, -30.6), Vector2(-113.9, -24.9), Vector2(-123.6, -19.4), Vector2(-133.2, -13.7), Vector2(-144.4, 9.1), Vector2(-155.6, 32.4), Vector2(-156.5, 44.5), Vector2(-157.6, 56.6), Vector2(-158.5, 68.7), Vector2(-159.7, 80.8), Vector2(-154.3, 88.6), Vector2(-148.9, 96.6), Vector2(-148.9, 99.1), Vector2(-148.8, 101.6), Vector2(-154.1, 102.1), Vector2(-159.3, 102.8), Vector2(-162.5, 105.5), Vector2(-165.7, 108.3), Vector2(8.1, 48.5), Vector2(8.9, 47.1), Vector2(9.7, 45.9), Vector2(10.6, 44.5), Vector2(11.5, 43), Vector2(12.1, 41.4), Vector2(12.7, 39.6), Vector2(13.6, 37.8), Vector2(14.7, 37.4), Vector2(15.9, 37), Vector2(17, 36.6), Vector2(18.2, 36.3), Vector2(13.4, 39.3), Vector2(8.7, 42.3), Vector2(4, 45.3), Vector2(-0.6, 48.4), Vector2(0, 51.4), Vector2(0.7, 54.2), Vector2(1.8, 53.3), Vector2(2.8, 52.5), Vector2(3.9, 51.5), Vector2(4.9, 50.7), Vector2(6, 49.9), Vector2(7.1, 49), Vector2(8.1, 48.5), Vector2(9.3, 46.9), Vector2(10.6, 45.3), Vector2(11.8, 43.6), Vector2(13.1, 42.1), Vector2(14.4, 40.5), Vector2(15.5, 38.9), Vector2(17, 37), Vector2(13.7, 38.6), Vector2(10.3, 40.4), Vector2(4.8, 44.4), Vector2(-0.6, 48.4), Vector2(0.6, 50), Vector2(2, 51.5), Vector2(3.6, 50.6), Vector2(5.2, 49.9), Vector2(6.7, 49.1), Vector2(8.1, 48.5), Vector2(8.1, 48.5), Vector2(8.9, 47.1), Vector2(9.7, 45.9), Vector2(10.6, 44.5), Vector2(11.5, 43), Vector2(12.1, 41.4), Vector2(12.7, 39.6), Vector2(13.6, 37.8), Vector2(14.7, 37.4), Vector2(15.9, 37), Vector2(17, 36.6), Vector2(18.2, 36.3), Vector2(14.7, 37.6), Vector2(11.4, 39.1), Vector2(6.5, 45), Vector2(1.9, 51), Vector2(1, 52.3), Vector2(0.1, 53.5), Vector2(1.2, 52.6), Vector2(2.3, 52), Vector2(3.5, 51.1), Vector2(4.6, 50.5), Vector2(5.8, 49.8), Vector2(6.9, 49), Vector2(8.1, 48.5), Vector2(9.5, 46.8), Vector2(10.9, 45.1), Vector2(12.3, 43.3), Vector2(13.7, 41.6), Vector2(15.2, 39.9), Vector2(16.6, 38.3), Vector2(18.2, 36.3), Vector2(14.7, 37.6), Vector2(11.4, 39.1), Vector2(6.1, 45.9), Vector2(1.1, 52.9), Vector2(1.8, 53.9), Vector2(2.6, 55.1), Vector2(4, 53.4), Vector2(5.3, 51.8), Vector2(6.8, 50.1), Vector2(8.1, 48.5)]
}
tracks/212/type = "value"
tracks/212/imported = false
tracks/212/enabled = true
tracks/212/path = NodePath("Body/Anim_head2:rotation")
tracks/212/interp = 1
tracks/212/loop_wrap = true
tracks/212/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.005236, -0.029671, -0.068068, -0.10472, -0.143117, -0.18326, -0.21293, -0.244346, -0.191986, -0.143117, -0.094248, -0.047124, 0.0, 0.017453, 0.071558, 0.1309, 0.153589, 0.176278, 0.153589, 0.127409, 0.106465, 0.10472, 0.10472, 0.10472, 0.106465, 0.127409, 0.150098, -0.085521, -0.329867, -0.296706, -0.26529, -0.178024, -0.090757, -0.034907, 0.013963, 0.066323, 0.122173, 0.176278, 0.150098, 0.127409, 0.101229, 0.076794, 0.113446, 0.150098, -0.069813, -0.296706, -0.308923, -0.319395, -0.233874, -0.148353, -0.064577, 0.017453, 0.017453, 0.071558, 0.1309, 0.153589, 0.176278, 0.153589, 0.127409, 0.106465, 0.10472, 0.10472, 0.10472, 0.106465, 0.127409, 0.150098, -0.085521, -0.329867, -0.268781, -0.207694, -0.146608, -0.090757, -0.034907, 0.013963, 0.066323, 0.122173, 0.176278, 0.150098, 0.127409, 0.101229, 0.076794, 0.113446, 0.150098, -0.069813, -0.296706, -0.308923, -0.319395, -0.233874, -0.148353, -0.064577, 0.017453, 0.0, -0.038397, -0.076794, -0.116937, -0.155334, -0.195477, -0.237365, -0.1309, -0.024435, 0.075049, 0.205949, 0.340339, 0.472984, 0.60912, 0.485202, 0.363028, 0.240855, 0.118682, 0.0, -0.038397, -0.076794, -0.116937, 0.218166, 0.555015, 0.891863, 0.6353, 0.376991, 0.122173, -0.13439, -0.394444, -0.392699, -0.392699, -0.392699, -0.394444, -0.314159, -0.235619, -0.158825, -0.335103, -0.516617, -0.47473, -0.431096, -0.312414, -0.195477, -0.076794, 0.038397, 0.038397, -0.094248, -0.235619, -0.094248, 0.038397, 0.008727, -0.013963, -0.006981, -0.001745, 0.02618, 0.057596, -0.006981, -0.073304, -0.143117, 0.008727, 0.162316, 0.188496, 0.211185, 0.237365, 0.263545, 0.349066, 0.434587, 0.476475, 0.518363, 0.392699, 0.267035, 0.139626, 0.017453, 0.017453, 0.057596, 0.095993, 0.136136, 0.176278, 0.153589, 0.127409, 0.106465, 0.092502, 0.083776, 0.075049, 0.064577, 0.07854, 0.092502, 0.10472, 0.120428, -0.041888, -0.207694, -0.174533, -0.143117, -0.10821, -0.076794, -0.047124, -0.012217, 0.017453, 0.022689, 0.031416, 0.040143, 0.048869, 0.057596, 0.066323, 0.076794, 0.113446, 0.150098, 0.136136, 0.120428, 0.005236, -0.106465, -0.073304, -0.041888, -0.012217, 0.017453, 0.017453, 0.057596, 0.095993, 0.136136, 0.176278, 0.153589, 0.127409, 0.106465, 0.092502, 0.083776, 0.075049, 0.064577, 0.176278, 0.289725, 0.10472, -0.073304, -0.087266, -0.106465, -0.085521, -0.068068, -0.050615, -0.033161, -0.015708, 0.0, 0.017453, 0.022689, 0.027925, 0.034907, 0.043633, 0.048869, 0.057596, 0.064577, 0.176278, 0.289725, 0.087266, -0.109956, -0.13439, -0.164061, -0.116937, -0.073304, -0.024435, 0.017453]
}
tracks/213/type = "value"
tracks/213/imported = false
tracks/213/enabled = true
tracks/213/path = NodePath("Body/Anim_head2:scale")
tracks/213/interp = 1
tracks/213/loop_wrap = true
tracks/213/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.796), Vector2(0.801, 0.797), Vector2(0.8, 0.797), Vector2(0.8, 0.798), Vector2(0.8, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.796), Vector2(0.801, 0.797), Vector2(0.8, 0.797), Vector2(0.8, 0.798), Vector2(0.8, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.801, 0.8), Vector2(0.801, 0.8), Vector2(0.801, 0.799), Vector2(0.802, 0.799), Vector2(0.802, 0.799), Vector2(0.804, 0.799), Vector2(0.803, 0.799), Vector2(0.803, 0.798), Vector2(0.803, 0.798), Vector2(0.807, 0.796), Vector2(0.813, 0.796), Vector2(0.819, 0.795), Vector2(0.826, 0.797), Vector2(0.82, 0.796), Vector2(0.815, 0.797), Vector2(0.81, 0.798), Vector2(0.805, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.794, 0.811), Vector2(0.794, 0.828), Vector2(0.793, 0.827), Vector2(0.793, 0.827), Vector2(0.793, 0.827), Vector2(0.794, 0.828), Vector2(0.792, 0.826), Vector2(0.791, 0.825), Vector2(0.79, 0.824), Vector2(0.789, 0.823), Vector2(0.789, 0.823), Vector2(0.788, 0.822), Vector2(0.789, 0.823), Vector2(0.788, 0.822), Vector2(0.788, 0.822), Vector2(0.788, 0.822), Vector2(0.788, 0.821), Vector2(0.788, 0.821), Vector2(0.787, 0.821), Vector2(0.787, 0.82), Vector2(0.787, 0.821), Vector2(0.788, 0.821), Vector2(0.787, 0.821), Vector2(0.787, 0.821), Vector2(0.787, 0.821), Vector2(0.787, 0.82), Vector2(0.786, 0.82), Vector2(0.786, 0.819), Vector2(0.785, 0.819), Vector2(0.785, 0.818), Vector2(0.784, 0.818), Vector2(0.784, 0.818), Vector2(0.784, 0.818), Vector2(0.783, 0.817), Vector2(0.783, 0.816), Vector2(0.782, 0.816), Vector2(0.782, 0.816), Vector2(0.78, 0.814), Vector2(0.78, 0.814), Vector2(0.779, 0.813), Vector2(0.78, 0.814), Vector2(0.779, 0.812), Vector2(0.779, 0.813), Vector2(0.789, 0.806), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.815), Vector2(0.798, 0.832), Vector2(0.798, 0.849), Vector2(0.798, 0.866), Vector2(0.812, 0.848), Vector2(0.826, 0.83), Vector2(0.84, 0.813), Vector2(0.855, 0.795), Vector2(0.826, 0.795), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.825, 0.795), Vector2(0.855, 0.795), Vector2(0.873, 0.795), Vector2(0.891, 0.795), Vector2(0.868, 0.796), Vector2(0.845, 0.797), Vector2(0.822, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.815), Vector2(0.798, 0.832), Vector2(0.798, 0.849), Vector2(0.798, 0.866), Vector2(0.797, 0.865), Vector2(0.796, 0.865), Vector2(0.796, 0.865), Vector2(0.797, 0.866), Vector2(0.797, 0.866), Vector2(0.798, 0.866), Vector2(0.798, 0.856), Vector2(0.798, 0.847), Vector2(0.798, 0.837), Vector2(0.799, 0.828), Vector2(0.799, 0.818), Vector2(0.799, 0.809), Vector2(0.799, 0.799), Vector2(0.799, 0.809), Vector2(0.799, 0.818), Vector2(0.799, 0.828), Vector2(0.798, 0.837), Vector2(0.798, 0.847), Vector2(0.798, 0.857), Vector2(0.798, 0.866), Vector2(0.797, 0.865), Vector2(0.796, 0.865), Vector2(0.797, 0.865), Vector2(0.798, 0.866), Vector2(0.812, 0.83), Vector2(0.828, 0.795), Vector2(0.82, 0.796), Vector2(0.813, 0.797), Vector2(0.806, 0.798), Vector2(0.799, 0.799)]
}
tracks/214/type = "value"
tracks/214/imported = false
tracks/214/enabled = true
tracks/214/path = NodePath("Body/Anim_head2:skew")
tracks/214/interp = 1
tracks/214/loop_wrap = true
tracks/214/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.0, 4e-07, 2e-07, 2e-07, 0.0, 4e-07, -2e-07, -1e-07, -2e-07, 0.0, 2e-07, 1e-07, 0.0, 3e-07, 5e-07, -3e-07, 0.0, 3e-07, 0.0, 0.0, 1e-07, -2e-07, -2e-07, -2e-07, 1e-07, 0.0, 3e-07, -1e-07, -2e-07, 0.0, 0.0, 4e-07, -1e-07, 4e-07, -4e-07, -5e-07, 0.0, 3e-07, 3e-07, 0.0, 1e-07, 5e-07, 4e-07, 3e-07, -2e-07, 0.0, 0.0471236, 0.0890115, 0.0680677, 0.0453786, 0.0226891, 3e-07, 3e-07, 5e-07, -3e-07, 0.0, 3e-07, 0.0, 0.0, 1e-07, -2e-07, -2e-07, -2e-07, 1e-07, 0.0, 3e-07, -1e-07, -2e-07, 3e-07, -2e-07, 3e-07, -1e-07, 4e-07, -4e-07, -5e-07, 0.0, 3e-07, 3e-07, 0.0, 1e-07, 5e-07, 4e-07, 3e-07, -2e-07, 0.0, 0.0471236, 0.0890115, 0.0680677, 0.0453786, 0.0226891, 3e-07, 0.0, 0.017453, 0.0349061, 0.0523598, 0.0680675, 0.0872666, 0.102975, 0.101229, 0.0994842, 0.10472, 0.144862, 0.185005, 0.226893, 0.26529, 0.214675, 0.162316, 0.108211, 0.0558509, 0.0, -2e-07, -5e-07, -1e-07, 2e-07, -3e-07, 2e-07, -2e-07, 1e-07, 0.0, -4e-07, -4e-07, -1e-07, -1e-07, -1e-07, -4e-07, -3e-07, -4e-07, 0.0017454, -2e-07, -4e-07, 5e-07, -3e-07, 1e-07, 1e-07, -5e-07, 2e-07, 2e-07, 2e-07, -4e-07, -0.0017451, 2e-07, -4e-07, 4e-07, 0.0157076, 0.0349063, 0.0174532, -1e-07, -3e-07, 2e-07, 0.0, -4e-07, -4e-07, -4e-07, -2e-07, -2e-07, -3e-07, -2e-07, 0.0, -1e-07, -2e-07, 1e-07, 4e-07, 3e-07, 3e-07, 3e-07, -1e-07, 1e-07, -3e-07, 3e-07, 0.0, 0.0, 1e-07, 0.0122178, 0.0209438, 0.0296708, 0.0418881, -0.0034908, -0.0523594, -0.0959934, -0.141372, -0.0698131, -2e-07, 1e-07, 0.0, -4e-07, -5e-07, 1e-07, -3e-07, 3e-07, 3e-07, -1e-07, -4e-07, 2e-07, -1e-07, -5e-07, 5e-07, 4e-07, 3e-07, -0.0750495, -0.141372, -0.0698132, -1e-07, 2e-07, 1e-07, -3e-07, 3e-07, 3e-07, -1e-07, 1e-07, -3e-07, 3e-07, 0.0, 0.0, 1e-07, 0.0122178, 0.0209438, 0.0296708, 0.0418881, 0.0296708, 0.0174529, 0.0191984, 0.0209441, 0.0366515, 0.0541051, 0.0436331, 0.0383974, 0.029671, 0.0209437, 0.015708, 0.005236, 3e-07, 0.0052363, 0.0122176, 0.0174529, 0.0226895, 0.0296708, 0.0349064, 0.0418881, 0.0296708, 0.0174529, 0.0366524, 0.0575961, 0.0575955, 0.0575959, 0.0436332, 0.0314161, 0.0122177, 3e-07]
}
tracks/215/type = "value"
tracks/215/imported = false
tracks/215/enabled = true
tracks/215/path = NodePath("Body/Anim_head2:texture")
tracks/215/interp = 1
tracks/215/loop_wrap = true
tracks/215/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("22_fuck"), ExtResource("22_fuck")]
}
tracks/216/type = "value"
tracks/216/imported = false
tracks/216/enabled = true
tracks/216/path = NodePath("Body/Anim_head2:self_modulate")
tracks/216/interp = 1
tracks/216/loop_wrap = true
tracks/216/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/217/type = "value"
tracks/217/imported = false
tracks/217/enabled = true
tracks/217/path = NodePath("Body/Anim_head1:visible")
tracks/217/interp = 1
tracks/217/loop_wrap = true
tracks/217/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [true, true]
}
tracks/218/type = "value"
tracks/218/imported = false
tracks/218/enabled = true
tracks/218/path = NodePath("Body/Anim_head1:position")
tracks/218/interp = 1
tracks/218/loop_wrap = true
tracks/218/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(-1.1, 24.5), Vector2(-1.2, 24.3), Vector2(-1.3, 24), Vector2(-2.7, 25.8), Vector2(-4, 27.5), Vector2(-5.4, 29.3), Vector2(-6.8, 31.2), Vector2(-8.1, 33), Vector2(-7.7, 32.9), Vector2(-7.2, 32.8), Vector2(-6, 31.1), Vector2(-4.7, 29.4), Vector2(-3.6, 27.8), Vector2(-2.2, 26.2), Vector2(-1.1, 24.5), Vector2(4.2, 20.6), Vector2(6.2, 19.1), Vector2(8.2, 17.6), Vector2(10.4, 16), Vector2(12.5, 14.6), Vector2(16.3, 11.8), Vector2(20.1, 9), Vector2(24.2, 6.3), Vector2(25.7, 5.9), Vector2(27.2, 5.5), Vector2(28.7, 5), Vector2(30.1, 4.3), Vector2(22.6, 8.1), Vector2(15.1, 12.2), Vector2(3.1, 22.1), Vector2(-7.9, 32.5), Vector2(-8.1, 32.3), Vector2(-8.3, 32), Vector2(-6.6, 29.7), Vector2(-4.8, 27.5), Vector2(-1.5, 24.7), Vector2(1.9, 22.1), Vector2(5.3, 19.4), Vector2(9, 16.9), Vector2(12.5, 14.6), Vector2(16.3, 11.9), Vector2(20.2, 9.1), Vector2(24.1, 6.4), Vector2(28, 3.8), Vector2(21.5, 7.8), Vector2(15.1, 12.2), Vector2(3, 21.9), Vector2(-8, 32.5), Vector2(-6.4, 31.1), Vector2(-4.8, 29.6), Vector2(-2.6, 27.3), Vector2(-0.4, 25), Vector2(1.8, 22.9), Vector2(4.2, 20.6), Vector2(4.2, 20.6), Vector2(6.2, 19.1), Vector2(8.2, 17.6), Vector2(10.4, 16), Vector2(12.5, 14.6), Vector2(16.3, 11.8), Vector2(20.1, 9), Vector2(24.2, 6.3), Vector2(25.7, 5.9), Vector2(27.2, 5.5), Vector2(28.7, 5), Vector2(30.1, 4.3), Vector2(21.7, 9.1), Vector2(13.3, 14.2), Vector2(2.3, 23), Vector2(-7.9, 32.5), Vector2(-7.1, 31.2), Vector2(-6.3, 29.9), Vector2(-5.5, 28.6), Vector2(-4.8, 27.5), Vector2(-1.5, 24.7), Vector2(1.9, 22.1), Vector2(5.3, 19.4), Vector2(9, 16.9), Vector2(12.5, 14.6), Vector2(16.3, 12.2), Vector2(20.2, 9.7), Vector2(24.1, 7.3), Vector2(28, 5), Vector2(21.5, 8.6), Vector2(15.1, 12.2), Vector2(3, 21.9), Vector2(-8, 32.5), Vector2(-6.4, 31.1), Vector2(-4.8, 29.6), Vector2(-2.6, 27.3), Vector2(-0.4, 25), Vector2(1.8, 22.9), Vector2(4.2, 20.6), Vector2(-1.1, 24.5), Vector2(-3, 26.4), Vector2(-5, 28.4), Vector2(-7, 30.4), Vector2(-8.9, 32.4), Vector2(-10.9, 34.4), Vector2(-12.9, 36.3), Vector2(-4.4, 30.9), Vector2(4, 25.7), Vector2(12.8, 20.6), Vector2(24.4, 17.6), Vector2(36.1, 15.3), Vector2(48.2, 13.7), Vector2(60.3, 12.9), Vector2(47.5, 13.7), Vector2(34.8, 15.2), Vector2(22.4, 17.6), Vector2(10.3, 20.8), Vector2(-1.1, 24.5), Vector2(-5.3, 32.6), Vector2(-9.4, 41), Vector2(-13.5, 49.1), Vector2(-8.8, 23.3), Vector2(-2.7, 0), Vector2(4.3, -20.7), Vector2(-7.2, -27.5), Vector2(-18.6, -33.3), Vector2(-29.5, -38.1), Vector2(-37.2, -33.8), Vector2(-43.4, -28.5), Vector2(-44.8, -27.7), Vector2(-46.2, -26.8), Vector2(-47.6, -25.9), Vector2(-49, -24.9), Vector2(-55.6, -0.8), Vector2(-62, 23.2), Vector2(-68.3, 47.5), Vector2(-73.7, 58.8), Vector2(-78.6, 70.4), Vector2(-77.7, 66.7), Vector2(-76.9, 63.2), Vector2(-74, 59.3), Vector2(-70.9, 55.5), Vector2(-67.8, 51.9), Vector2(-64.5, 48.4), Vector2(-64.5, 48.4), Vector2(-67.9, 53.1), Vector2(-71, 58.4), Vector2(-67.8, 53.2), Vector2(-64.5, 48.4), Vector2(-65.7, 50.5), Vector2(-67, 52.5), Vector2(-74.3, 23.3), Vector2(-81.8, -5.5), Vector2(-96, -30.1), Vector2(-110.2, -55), Vector2(-121.5, -48.8), Vector2(-132.7, -42.7), Vector2(-143.9, -36.4), Vector2(-151.6, -14.5), Vector2(-158.9, 7.5), Vector2(-159.2, 19.6), Vector2(-159.7, 31.7), Vector2(-160, 43.7), Vector2(-160.4, 55.7), Vector2(-153, 63.8), Vector2(-145.4, 71.7), Vector2(-144.2, 74.1), Vector2(-143.2, 76.4), Vector2(-151, 76.5), Vector2(-158.6, 76.7), Vector2(-164.1, 78.4), Vector2(-169.5, 80.4), Vector2(4.2, 20.6), Vector2(6.2, 19.1), Vector2(8.2, 17.6), Vector2(10.4, 16), Vector2(12.5, 14.6), Vector2(16.3, 11.8), Vector2(20.1, 9), Vector2(24.2, 6.3), Vector2(25.7, 5.9), Vector2(27.2, 5.5), Vector2(28.7, 5), Vector2(30.1, 4.3), Vector2(21.7, 9.1), Vector2(13.3, 14.2), Vector2(3.3, 19.9), Vector2(-5.9, 26.3), Vector2(-6.1, 27), Vector2(-6.3, 27.6), Vector2(-4.8, 26.6), Vector2(-3.3, 25.6), Vector2(-1.8, 24.5), Vector2(-0.2, 23.5), Vector2(1.2, 22.5), Vector2(2.6, 21.6), Vector2(4.2, 20.6), Vector2(7.5, 18.2), Vector2(10.8, 15.9), Vector2(14.2, 13.6), Vector2(17.6, 11.2), Vector2(21.1, 9), Vector2(24.4, 7), Vector2(28, 5), Vector2(21.5, 8.6), Vector2(15.1, 12.2), Vector2(3.3, 19.4), Vector2(-7.7, 27.3), Vector2(-6.1, 27.4), Vector2(-4.4, 27.4), Vector2(-2.2, 25.6), Vector2(-0.1, 23.9), Vector2(1.9, 22.2), Vector2(4.2, 20.6), Vector2(4.2, 20.6), Vector2(6.2, 19.1), Vector2(8.2, 17.6), Vector2(10.4, 16), Vector2(12.5, 14.6), Vector2(16.3, 11.8), Vector2(20.1, 9), Vector2(24.2, 6.3), Vector2(25.7, 5.9), Vector2(27.2, 5.5), Vector2(28.7, 5), Vector2(30.1, 4.3), Vector2(21.7, 9.1), Vector2(13.3, 14.2), Vector2(3.3, 19.9), Vector2(-5.9, 26.3), Vector2(-6.3, 26.4), Vector2(-6.7, 26.4), Vector2(-5.1, 25.6), Vector2(-3.6, 24.7), Vector2(-2, 23.9), Vector2(-0.4, 23), Vector2(1.1, 22.2), Vector2(2.5, 21.4), Vector2(4.2, 20.6), Vector2(7.5, 18.2), Vector2(10.8, 15.9), Vector2(14.2, 13.6), Vector2(17.6, 11.2), Vector2(21.1, 9), Vector2(24.4, 7), Vector2(28, 5), Vector2(20.4, 9.1), Vector2(12.9, 13.2), Vector2(2.9, 19.7), Vector2(-6.3, 26.7), Vector2(-5.3, 27.1), Vector2(-4.4, 27.4), Vector2(-2.2, 25.6), Vector2(-0.1, 23.9), Vector2(1.9, 22.2), Vector2(4.2, 20.6)]
}
tracks/219/type = "value"
tracks/219/imported = false
tracks/219/enabled = true
tracks/219/path = NodePath("Body/Anim_head1:rotation")
tracks/219/interp = 1
tracks/219/loop_wrap = true
tracks/219/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.013963, 0.031416, 0.005236, -0.017453, -0.047124, -0.073304, -0.099484, -0.102974, -0.111701, -0.087266, -0.064577, -0.041888, -0.020944, 0.0, 0.123918, 0.162316, 0.205949, 0.249582, 0.29147, 0.363028, 0.432842, 0.507891, 0.516617, 0.525344, 0.534071, 0.544543, 0.455531, 0.368264, 0.165806, -0.033161, -0.050615, -0.073304, -0.038397, -0.006981, 0.048869, 0.109956, 0.171042, 0.232129, 0.29147, 0.345575, 0.401426, 0.455531, 0.513127, 0.441568, 0.368264, 0.136136, -0.095993, -0.085521, -0.076794, -0.024435, 0.022689, 0.069813, 0.123918, 0.123918, 0.162316, 0.205949, 0.249582, 0.29147, 0.363028, 0.432842, 0.507891, 0.516617, 0.525344, 0.534071, 0.544543, 0.455531, 0.368264, 0.165806, -0.033161, -0.024435, -0.017453, -0.012217, -0.006981, 0.048869, 0.109956, 0.171042, 0.232129, 0.29147, 0.345575, 0.401426, 0.455531, 0.513127, 0.441568, 0.368264, 0.136136, -0.095993, -0.085521, -0.076794, -0.024435, 0.022689, 0.069813, 0.123918, 0.0, -0.012217, -0.029671, -0.047124, -0.064577, -0.08203, -0.097738, 0.005236, 0.109956, 0.214675, 0.389208, 0.563741, 0.738274, 0.911062, 0.729548, 0.546288, 0.363028, 0.179769, 0.0, -0.038397, -0.076794, -0.116937, 0.218166, 0.555015, 0.891863, 0.682424, 0.472984, 0.26529, 0.005236, -0.249582, -0.247837, -0.247837, -0.247837, -0.249582, -0.169297, -0.090757, -0.013963, -0.190241, -0.371755, -0.326377, -0.286234, -0.204204, -0.120428, -0.038397, 0.041888, 0.041888, -0.090757, -0.232129, -0.090757, 0.041888, 0.013963, -0.008727, -0.003491, -0.001745, 0.02618, 0.061087, -0.003491, -0.068068, -0.137881, 0.013963, 0.167552, 0.191986, 0.214675, 0.240855, 0.267035, 0.350811, 0.439823, 0.481711, 0.521853, 0.415388, 0.310669, 0.214675, 0.123918, 0.123918, 0.162316, 0.205949, 0.249582, 0.29147, 0.363028, 0.432842, 0.507891, 0.516617, 0.525344, 0.534071, 0.544543, 0.455531, 0.368264, 0.165806, -0.033161, -0.024435, -0.017453, 0.0, 0.022689, 0.040143, 0.061087, 0.083776, 0.101229, 0.123918, 0.179769, 0.232129, 0.289725, 0.345575, 0.401426, 0.455531, 0.513127, 0.441568, 0.368264, 0.165806, -0.033161, -0.029671, -0.033161, 0.005236, 0.043633, 0.083776, 0.123918, 0.123918, 0.162316, 0.205949, 0.249582, 0.29147, 0.363028, 0.432842, 0.507891, 0.516617, 0.525344, 0.534071, 0.544543, 0.455531, 0.368264, 0.165806, -0.033161, -0.024435, -0.017453, 0.0, 0.022689, 0.040143, 0.061087, 0.083776, 0.101229, 0.123918, 0.179769, 0.232129, 0.289725, 0.345575, 0.401426, 0.455531, 0.513127, 0.441568, 0.368264, 0.165806, -0.033161, -0.029671, -0.033161, 0.005236, 0.043633, 0.083776, 0.123918]
}
tracks/220/type = "value"
tracks/220/imported = false
tracks/220/enabled = true
tracks/220/path = NodePath("Body/Anim_head1:scale")
tracks/220/interp = 1
tracks/220/loop_wrap = true
tracks/220/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.789, 0.789), Vector2(0.789, 0.789), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.787, 0.787), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.786, 0.786), Vector2(0.786, 0.786), Vector2(0.786, 0.786), Vector2(0.785, 0.785), Vector2(0.785, 0.785), Vector2(0.785, 0.785), Vector2(0.785, 0.785), Vector2(0.784, 0.784), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.781, 0.781), Vector2(0.781, 0.781), Vector2(0.78, 0.78), Vector2(0.781, 0.781), Vector2(0.779, 0.779), Vector2(0.78, 0.78), Vector2(0.789, 0.789), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.8, 0.8)]
}
tracks/221/type = "value"
tracks/221/imported = false
tracks/221/enabled = true
tracks/221/path = NodePath("Body/Anim_head1:skew")
tracks/221/interp = 1
tracks/221/loop_wrap = true
tracks/221/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -4e-07, -1e-07, 0.0, -3e-07, 1e-07, 2e-07, 2e-07, -4e-07, -1e-07, -5e-07, -2e-07, 1e-07, 0.0, 0.0, 4e-07, -4e-07, -2e-07, 1e-07, 0.0, 5e-07, -4e-07, -2e-07, 4e-07, 1e-07, -3e-07, -3e-07, -1e-07, 5e-07, 3e-07, -3e-07, 5e-07, 2e-07, -2e-07, -3e-07, 2e-07, -3e-07, 3e-07, -2e-07, 0.0, 2e-07, -3e-07, -1e-07, -2e-07, 3e-07, 5e-07, -3e-07, -1e-07, -1e-07, -5e-07, 4e-07, 3e-07, 2e-07, 4e-07, 4e-07, -4e-07, -2e-07, 1e-07, 0.0, 5e-07, -4e-07, -2e-07, 4e-07, 1e-07, -3e-07, -3e-07, -1e-07, 5e-07, 3e-07, -3e-07, 4e-07, -3e-07, -3e-07, -3e-07, 2e-07, -3e-07, 3e-07, -2e-07, 0.0, 2e-07, -3e-07, -1e-07, -2e-07, 3e-07, 5e-07, -3e-07, -1e-07, -1e-07, -5e-07, 4e-07, 3e-07, 2e-07, 4e-07, 0.0, -3e-07, 4e-07, 1e-07, -2e-07, -5e-07, -4e-07, 0.0, -3e-07, 5e-07, 4e-07, 3e-07, 3e-07, -1e-07, -4e-07, 0.0, 5e-07, -1e-07, 0.0, -2e-07, -5e-07, -1e-07, 2e-07, -3e-07, 2e-07, -3e-07, 2e-07, 0.0, 0.0, -1e-07, 3e-07, 3e-07, 3e-07, -1e-07, 1e-07, -1e-07, 4e-07, 1e-07, -1e-07, 4e-07, 0.0, 5e-07, 3e-07, -2e-07, -1e-07, -1e-07, -1e-07, 2e-07, -1e-07, -1e-07, -4e-07, 4e-07, 3e-07, -3e-07, -1e-07, -5e-07, 3e-07, 2e-07, 0.0, -4e-07, -4e-07, 2e-07, 5e-07, 4e-07, 4e-07, 2e-07, 0.0, -1e-07, 4e-07, 4e-07, -4e-07, 5e-07, 4e-07, 4e-07, -4e-07, -2e-07, 1e-07, 0.0, 5e-07, -4e-07, -2e-07, 4e-07, 1e-07, -3e-07, -3e-07, -1e-07, 5e-07, 3e-07, -3e-07, 4e-07, -3e-07, 0.0, 3e-07, -4e-07, -5e-07, -2e-07, 1e-07, 4e-07, -1e-07, -2e-07, -3e-07, 2e-07, -3e-07, -1e-07, -2e-07, 3e-07, 5e-07, 3e-07, -3e-07, 4e-07, -3e-07, 0.0, 2e-07, -2e-07, 4e-07, 4e-07, -4e-07, -2e-07, 1e-07, 0.0, 5e-07, -4e-07, -2e-07, 4e-07, 1e-07, -3e-07, -3e-07, -1e-07, 5e-07, 3e-07, -3e-07, 4e-07, -3e-07, 0.0, 3e-07, -4e-07, -5e-07, -2e-07, 1e-07, 4e-07, -1e-07, -2e-07, -3e-07, 2e-07, -3e-07, -1e-07, -2e-07, 3e-07, 5e-07, 3e-07, -3e-07, 4e-07, -3e-07, 0.0, 2e-07, -2e-07, 4e-07]
}
tracks/222/type = "value"
tracks/222/imported = false
tracks/222/enabled = true
tracks/222/path = NodePath("Body/Anim_head1:texture")
tracks/222/interp = 1
tracks/222/loop_wrap = true
tracks/222/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("23_fuck"), ExtResource("23_fuck")]
}
tracks/223/type = "value"
tracks/223/imported = false
tracks/223/enabled = true
tracks/223/path = NodePath("Body/Anim_head1:self_modulate")
tracks/223/interp = 1
tracks/223/loop_wrap = true
tracks/223/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/224/type = "value"
tracks/224/imported = false
tracks/224/enabled = true
tracks/224/path = NodePath("Body/Zombie_dolphinrider_dolphinbody2:visible")
tracks/224/interp = 1
tracks/224/loop_wrap = true
tracks/224/keys = {
"times": PackedFloat32Array(0, 4.41667, 4.5, 7.66667, 7.75, 10, 10.0833, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [true, true, false, false, true, true, false, false]
}
tracks/225/type = "value"
tracks/225/imported = false
tracks/225/enabled = true
tracks/225/path = NodePath("Body/Zombie_dolphinrider_dolphinbody2:position")
tracks/225/interp = 1
tracks/225/loop_wrap = true
tracks/225/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(66.7, 83.6), Vector2(66.3, 82.8), Vector2(65.8, 82), Vector2(65.7, 82.2), Vector2(65.4, 82.5), Vector2(65.2, 82.8), Vector2(65, 83), Vector2(64.8, 83.5), Vector2(65, 84.1), Vector2(65.3, 84.6), Vector2(65.5, 84.3), Vector2(65.9, 84.1), Vector2(66.1, 84), Vector2(66.5, 83.8), Vector2(66.7, 83.6), Vector2(70.6, 81.3), Vector2(71.1, 81), Vector2(71.6, 80.7), Vector2(72.1, 80.3), Vector2(72.7, 79.8), Vector2(73.4, 79), Vector2(74.2, 78.3), Vector2(75.2, 77.5), Vector2(75.3, 76.8), Vector2(75.6, 76.2), Vector2(75.8, 75.6), Vector2(76.1, 75), Vector2(70.7, 78.7), Vector2(65.5, 82.7), Vector2(60.5, 86.7), Vector2(55.2, 90.7), Vector2(55.2, 90.8), Vector2(55.5, 91.1), Vector2(54, 90.3), Vector2(52.6, 89.3), Vector2(54.5, 88.1), Vector2(56.5, 86.9), Vector2(58.3, 85.7), Vector2(60.1, 84.5), Vector2(62, 83.3), Vector2(65.1, 81.5), Vector2(68.1, 79.6), Vector2(71.2, 77.7), Vector2(74.3, 75.7), Vector2(69.6, 79.2), Vector2(65.1, 82.5), Vector2(61.5, 85.1), Vector2(58, 87.8), Vector2(61.2, 86.3), Vector2(64.5, 84.8), Vector2(66, 83.9), Vector2(67.4, 83), Vector2(69, 82.1), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(70.6, 81.3), Vector2(66.7, 83.6), Vector2(68, 79.8), Vector2(69.2, 76.3), Vector2(70.6, 72.7), Vector2(72.1, 69.1), Vector2(73.6, 65.7), Vector2(75.1, 62.1), Vector2(75.2, 71.2), Vector2(75.2, 80.3), Vector2(75.2, 89.5), Vector2(56.4, 91), Vector2(38.6, 93.3), Vector2(22.8, 70.3), Vector2(1, 14.4), Vector2(-7.2, 1.8), Vector2(-15.7, -9.7), Vector2(-36.4, -21.3), Vector2(-58.1, -20.1), Vector2(-66, 1), Vector2(-62.4, 20.5), Vector2(-52.4, 26.8), Vector2(-44.1, 22.1), Vector2(-42.4, 26), Vector2(-55.6, 28.9), Vector2(-53.1, 44.5), Vector2(-51.6, 62.5), Vector2(-50.7, 82.6), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8), Vector2(-50.7, 157.8)]
}
tracks/226/type = "value"
tracks/226/imported = false
tracks/226/enabled = true
tracks/226/path = NodePath("Body/Zombie_dolphinrider_dolphinbody2:rotation")
tracks/226/interp = 1
tracks/226/loop_wrap = true
tracks/226/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.029671, -0.064577, -0.059341, -0.055851, -0.055851, -0.050615, -0.050615, -0.033161, -0.019199, -0.012217, -0.008727, -0.003491, 0.0, 0.0, 0.0, 0.02618, 0.048869, 0.075049, 0.102974, 0.167552, 0.232129, 0.301942, 0.336849, 0.371755, 0.406662, 0.445059, 0.284489, 0.127409, 0.162316, 0.197222, 0.267035, 0.342085, 0.275762, 0.216421, 0.205949, 0.197222, 0.188496, 0.179769, 0.171042, 0.171042, 0.171042, 0.171042, 0.171042, 0.109956, 0.055851, 0.07854, 0.101229, 0.144862, 0.188496, 0.139626, 0.092502, 0.045379, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.055851, -0.116937, -0.178024, -0.235619, -0.296706, -0.357792, -0.326377, -0.300197, -0.274017, -0.020944, 0.228638, 0.47822, 0.013963, -0.275762, -0.446804, -1.21999, -1.99142, -2.77158, -3.54825, -4.29526, -5.04051, -5.88699, -6.72999, -7.06509, -7.40194, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353, -7.7353]
}
tracks/227/type = "value"
tracks/227/imported = false
tracks/227/enabled = true
tracks/227/path = NodePath("Body/Zombie_dolphinrider_dolphinbody2:scale")
tracks/227/interp = 1
tracks/227/loop_wrap = true
tracks/227/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.835, 0.8), Vector2(0.835, 0.807), Vector2(0.835, 0.815), Vector2(0.834, 0.822), Vector2(0.834, 0.83), Vector2(0.834, 0.838), Vector2(0.834, 0.845), Vector2(0.834, 0.853), Vector2(0.834, 0.852), Vector2(0.834, 0.852), Vector2(0.834, 0.841), Vector2(0.834, 0.831), Vector2(0.835, 0.821), Vector2(0.835, 0.81), Vector2(0.835, 0.8), Vector2(0.835, 0.799), Vector2(0.834, 0.799), Vector2(0.834, 0.799), Vector2(0.834, 0.799), Vector2(0.834, 0.799), Vector2(0.834, 0.798), Vector2(0.833, 0.798), Vector2(0.834, 0.799), Vector2(0.833, 0.798), Vector2(0.833, 0.798), Vector2(0.832, 0.797), Vector2(0.833, 0.798), Vector2(0.831, 0.796), Vector2(0.831, 0.796), Vector2(0.831, 0.796), Vector2(0.831, 0.797), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.831, 0.796), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.829, 0.794), Vector2(0.829, 0.794), Vector2(0.83, 0.795), Vector2(0.829, 0.794), Vector2(0.829, 0.794), Vector2(0.829, 0.794), Vector2(0.83, 0.795), Vector2(0.83, 0.795), Vector2(0.831, 0.796), Vector2(0.831, 0.796), Vector2(0.832, 0.797), Vector2(0.832, 0.797), Vector2(0.833, 0.798), Vector2(0.833, 0.798), Vector2(0.833, 0.798), Vector2(0.834, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.799), Vector2(0.835, 0.8), Vector2(0.834, 0.799), Vector2(0.834, 0.799), Vector2(0.833, 0.798), Vector2(0.832, 0.797), Vector2(0.832, 0.797), Vector2(0.832, 0.797), Vector2(0.842, 0.794), Vector2(0.852, 0.793), Vector2(0.863, 0.791), Vector2(0.869, 0.791), Vector2(0.875, 0.791), Vector2(0.881, 0.791), Vector2(0.889, 0.792), Vector2(0.899, 0.79), Vector2(0.898, 0.789), Vector2(0.897, 0.788), Vector2(0.898, 0.789), Vector2(0.895, 0.786), Vector2(0.894, 0.786), Vector2(0.893, 0.784), Vector2(0.893, 0.785), Vector2(0.894, 0.786), Vector2(0.898, 0.789), Vector2(0.894, 0.784), Vector2(0.894, 0.782), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78), Vector2(0.894, 0.78)]
}
tracks/228/type = "value"
tracks/228/imported = false
tracks/228/enabled = true
tracks/228/path = NodePath("Body/Zombie_dolphinrider_dolphinbody2:skew")
tracks/228/interp = 1
tracks/228/loop_wrap = true
tracks/228/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 4e-07, -2e-07, -2e-07, 5e-07, 5e-07, 5e-07, 5e-07, -3e-07, 4e-07, -3e-07, 4e-07, 3e-07, 0.0, 0.0, 0.0, -1e-07, 2e-07, 2e-07, 4e-07, -4e-07, -2e-07, 0.0, -5e-07, 1e-07, -3e-07, 0.0, -3e-07, 0.0, -4e-07, 2e-07, 4e-07, -5e-07, 0.0, -2e-07, -2e-07, 2e-07, -4e-07, -1e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 0.0034904, -5e-07, -2e-07, 1e-07, 3e-07, -4e-07, 3e-07, 4e-07, -4e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5e-07, -1e-07, 4e-07, -4e-07, 0.0, -5e-07, 4e-07, 4e-07, 3e-07, 0.0, 1e-07, 2e-07, -4e-07, 0.146608, 0.165806, 0.167551, 0.165807, 0.165807, 0.164061, 0.165806, 0.165807, 0.165806, 0.165806, 0.139627, 0.113446, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757, 0.0837757]
}
tracks/229/type = "value"
tracks/229/imported = false
tracks/229/enabled = true
tracks/229/path = NodePath("Body/Zombie_dolphinrider_dolphinbody2:texture")
tracks/229/interp = 1
tracks/229/loop_wrap = true
tracks/229/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("7_fuck"), ExtResource("7_fuck")]
}
tracks/230/type = "value"
tracks/230/imported = false
tracks/230/enabled = true
tracks/230/path = NodePath("Body/Zombie_dolphinrider_dolphinbody2:self_modulate")
tracks/230/interp = 1
tracks/230/loop_wrap = true
tracks/230/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/231/type = "value"
tracks/231/imported = false
tracks/231/enabled = true
tracks/231/path = NodePath("Body/Zombie_dolphinrider_dolphinfin2:visible")
tracks/231/interp = 1
tracks/231/loop_wrap = true
tracks/231/keys = {
"times": PackedFloat32Array(0, 4.41667, 4.5, 7.66667, 7.75, 10, 10.0833, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [true, true, false, false, true, true, false, false]
}
tracks/232/type = "value"
tracks/232/imported = false
tracks/232/enabled = true
tracks/232/path = NodePath("Body/Zombie_dolphinrider_dolphinfin2:position")
tracks/232/interp = 1
tracks/232/loop_wrap = true
tracks/232/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(35.8, 103.6), Vector2(36, 103.3), Vector2(36.2, 103), Vector2(36.1, 103.7), Vector2(36.1, 104.5), Vector2(36.1, 105.1), Vector2(36.2, 105.9), Vector2(36, 106.6), Vector2(36.4, 106.9), Vector2(36.6, 107.2), Vector2(36.4, 106.5), Vector2(36.2, 105.7), Vector2(36, 105), Vector2(35.9, 104.3), Vector2(35.8, 103.6), Vector2(40.9, 104.1), Vector2(41.5, 103), Vector2(42.2, 101.9), Vector2(42.9, 100.8), Vector2(43.6, 99.9), Vector2(43.9, 97.8), Vector2(44.1, 95.8), Vector2(44.5, 93.7), Vector2(44.4, 92.6), Vector2(44.4, 91.4), Vector2(44.2, 90.3), Vector2(44.1, 89.1), Vector2(38.7, 94), Vector2(33.3, 99.1), Vector2(29.1, 106.2), Vector2(24.9, 113.4), Vector2(23.8, 111.6), Vector2(22.7, 109.8), Vector2(20.9, 106.8), Vector2(19.2, 103.8), Vector2(21.3, 102.8), Vector2(23.3, 101.7), Vector2(25.3, 100.6), Vector2(27.3, 99.4), Vector2(29.4, 98.3), Vector2(32.5, 96.4), Vector2(35.5, 94.5), Vector2(38.5, 92.6), Vector2(41.6, 90.7), Vector2(37.5, 94.9), Vector2(33.3, 99.1), Vector2(31.5, 104.6), Vector2(29.8, 110.2), Vector2(32.6, 109.2), Vector2(35.4, 108), Vector2(36.7, 106.8), Vector2(38, 105.8), Vector2(39.4, 104.8), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(40.9, 104.1), Vector2(35.8, 103.6), Vector2(38.6, 101.7), Vector2(41.5, 99.7), Vector2(44.5, 97.7), Vector2(47.3, 95.8), Vector2(50.2, 94), Vector2(53.1, 92.1), Vector2(52, 98.8), Vector2(50.9, 105.8), Vector2(49.9, 112.8), Vector2(27.7, 106.3), Vector2(5.7, 99.9), Vector2(-11.2, 67.4), Vector2(-32.5, 26.5), Vector2(-32.9, 26.1), Vector2(-32, 25.1), Vector2(-28.1, 13.6), Vector2(-23.6, -2.9), Vector2(-31.6, -7.8), Vector2(-44.8, -13.4), Vector2(-60.3, -8), Vector2(-76.6, 1.9), Vector2(-77.1, 32.2), Vector2(-71.9, 63.8), Vector2(-59.7, 81.7), Vector2(-47, 98.8), Vector2(-34, 115.2), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4), Vector2(-34, 190.4)]
}
tracks/233/type = "value"
tracks/233/imported = false
tracks/233/enabled = true
tracks/233/path = NodePath("Body/Zombie_dolphinrider_dolphinfin2:rotation")
tracks/233/interp = 1
tracks/233/loop_wrap = true
tracks/233/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.034907, 0.069813, 0.10472, 0.139626, 0.176278, 0.214675, 0.249582, 0.270526, 0.293215, 0.232129, 0.174533, 0.115192, 0.057596, 0.0, -0.001745, 0.043633, 0.092502, 0.139626, 0.188496, 0.270526, 0.350811, 0.434587, 0.464258, 0.493928, 0.525344, 0.558505, 0.354302, 0.153589, 0.289725, 0.427606, 0.493928, 0.563741, 0.389208, 0.218166, 0.214675, 0.20944, 0.205949, 0.200713, 0.195477, 0.193732, 0.193732, 0.193732, 0.195477, 0.174533, 0.153589, 0.328122, 0.507891, 0.511381, 0.516617, 0.385718, 0.254818, 0.123918, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, -0.001745, 0.0, -0.02618, -0.055851, -0.085521, -0.116937, -0.146608, -0.178024, -0.282743, -0.392699, -0.500909, -0.314159, -0.1309, 0.05236, -0.481711, -0.886627, -1.29154, -2.06298, -2.83616, -3.61283, -4.39474, -5.13999, -5.88699, -6.72824, -7.57473, -7.8662, -8.16291, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612, -8.45612]
}
tracks/234/type = "value"
tracks/234/imported = false
tracks/234/enabled = true
tracks/234/path = NodePath("Body/Zombie_dolphinrider_dolphinfin2:scale")
tracks/234/interp = 1
tracks/234/loop_wrap = true
tracks/234/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.795, 0.795), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.795, 0.795), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.794, 0.794), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.792, 0.792), Vector2(0.789, 0.789), Vector2(0.788, 0.788), Vector2(0.787, 0.787), Vector2(0.788, 0.788), Vector2(0.789, 0.789), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79)]
}
tracks/235/type = "value"
tracks/235/imported = false
tracks/235/enabled = true
tracks/235/path = NodePath("Body/Zombie_dolphinrider_dolphinfin2:skew")
tracks/235/interp = 1
tracks/235/loop_wrap = true
tracks/235/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -4e-07, 2e-07, -2e-07, 3e-07, 3e-07, 5e-07, 1e-07, 0.0, 3e-07, -2e-07, -1e-07, -3e-07, -1e-07, 0.0, -3e-07, 2e-07, 4e-07, 3e-07, -4e-07, 0.0, 2e-07, 0.0, -4e-07, 2e-07, 1e-07, 4e-07, -2e-07, 0.0, -3e-07, -3e-07, 2e-07, 3e-07, 4e-07, 2e-07, 5e-07, -5e-07, -2e-07, -1e-07, -1e-07, -5e-07, -5e-07, -5e-07, -1e-07, -1e-07, 0.0, -1e-07, -2e-07, 5e-07, 4e-07, -2e-07, 1e-07, 4e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, -3e-07, 0.0, 1e-07, 5e-07, -1e-07, -1e-07, 3e-07, 4e-07, -3e-07, -1e-07, -5e-07, -3e-07, 3e-07, -1e-07, 1e-07, -2e-07, 4e-07, -1e-07, 0.0, -5e-07, 0.0, 4e-07, -5e-07, -2e-07, 2e-07, 2e-07, 2e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07]
}
tracks/236/type = "value"
tracks/236/imported = false
tracks/236/enabled = true
tracks/236/path = NodePath("Body/Zombie_dolphinrider_dolphinfin2:texture")
tracks/236/interp = 1
tracks/236/loop_wrap = true
tracks/236/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("8_fuck"), ExtResource("8_fuck")]
}
tracks/237/type = "value"
tracks/237/imported = false
tracks/237/enabled = true
tracks/237/path = NodePath("Body/Zombie_dolphinrider_dolphinfin2:self_modulate")
tracks/237/interp = 1
tracks/237/loop_wrap = true
tracks/237/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/238/type = "value"
tracks/238/imported = false
tracks/238/enabled = true
tracks/238/path = NodePath("Body/Zombie_dolphinrider_dolphinjaw:visible")
tracks/238/interp = 1
tracks/238/loop_wrap = true
tracks/238/keys = {
"times": PackedFloat32Array(0, 4.41667, 4.5, 7.66667, 7.75, 10, 10.0833, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [true, true, false, false, true, true, false, false]
}
tracks/239/type = "value"
tracks/239/imported = false
tracks/239/enabled = true
tracks/239/path = NodePath("Body/Zombie_dolphinrider_dolphinjaw:position")
tracks/239/interp = 1
tracks/239/loop_wrap = true
tracks/239/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(14.5, 106.5), Vector2(14.8, 106.6), Vector2(15.1, 106.7), Vector2(15.1, 108.6), Vector2(15.1, 110.7), Vector2(15.1, 112.6), Vector2(15.3, 114.6), Vector2(15.3, 116.7), Vector2(15.1, 117.8), Vector2(15, 118.8), Vector2(14.7, 116.3), Vector2(14.7, 113.8), Vector2(14.5, 111.3), Vector2(14.5, 108.8), Vector2(14.5, 106.5), Vector2(19.6, 111.9), Vector2(19.5, 111), Vector2(19.4, 110.1), Vector2(19.4, 109.1), Vector2(19.2, 108.2), Vector2(18.8, 105.5), Vector2(18.3, 103), Vector2(17.9, 100.4), Vector2(17.5, 98.8), Vector2(17, 97.2), Vector2(16.6, 95.7), Vector2(16.2, 94.2), Vector2(12.9, 98.1), Vector2(9.6, 101.8), Vector2(4.8, 111.5), Vector2(0.2, 121.1), Vector2(-1.2, 118.5), Vector2(-2.8, 115.9), Vector2(-3.7, 110.3), Vector2(-4.6, 105), Vector2(-2.5, 104.1), Vector2(-0.4, 103), Vector2(1.5, 102), Vector2(3.5, 101.1), Vector2(5.6, 99.9), Vector2(8.6, 98), Vector2(11.6, 96.1), Vector2(14.7, 94.2), Vector2(17.8, 92.3), Vector2(13.6, 97), Vector2(9.6, 101.8), Vector2(7.2, 110), Vector2(5, 118.1), Vector2(7.8, 118.2), Vector2(10.8, 118.3), Vector2(13, 116.8), Vector2(15.2, 115.2), Vector2(17.4, 113.6), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(19.6, 111.9), Vector2(14.5, 106.5), Vector2(17.4, 105.8), Vector2(20.5, 105.2), Vector2(23.5, 104.5), Vector2(26.5, 104), Vector2(29.6, 103.3), Vector2(32.7, 102.8), Vector2(31.8, 108.6), Vector2(30.8, 114.3), Vector2(29.9, 120.3), Vector2(7.2, 108.2), Vector2(-14.9, 96.4), Vector2(-30.6, 58.6), Vector2(-54, 27.2), Vector2(-51.3, 36.1), Vector2(-45.4, 42), Vector2(-21.9, 40.1), Vector2(-7, 10.8), Vector2(-6.6, -12.9), Vector2(-30.8, -29.7), Vector2(-64.6, -32.4), Vector2(-91.7, -13.2), Vector2(-100.1, 38), Vector2(-89.9, 77.7), Vector2(-73.7, 97.1), Vector2(-57.2, 116.3), Vector2(-40.5, 135.5), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7), Vector2(-40.5, 210.7)]
}
tracks/240/type = "value"
tracks/240/imported = false
tracks/240/enabled = true
tracks/240/path = NodePath("Body/Zombie_dolphinrider_dolphinjaw:rotation")
tracks/240/interp = 1
tracks/240/loop_wrap = true
tracks/240/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.038397, -0.07854, -0.116937, -0.16057, -0.204204, -0.244346, -0.287979, -0.329867, -0.375246, -0.300197, -0.221657, -0.146608, -0.073304, 0.0, -0.240855, -0.23911, -0.23911, -0.23911, -0.240855, -0.221657, -0.200713, -0.18326, -0.151844, -0.125664, -0.094248, -0.069813, -0.047124, -0.027925, -0.143117, -0.26529, -0.21293, -0.165806, -0.061087, 0.036652, 0.031416, 0.02618, 0.022689, 0.017453, 0.013963, 0.013963, 0.013963, 0.013963, 0.013963, -0.003491, -0.027925, -0.116937, -0.21293, -0.268781, -0.326377, -0.303687, -0.282743, -0.260054, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, -0.240855, 0.0, -0.047124, -0.099484, -0.148353, -0.198968, -0.247837, -0.301942, -0.314159, -0.326377, -0.34383, -0.10821, 0.120428, 0.350811, -0.137881, -0.541052, -0.945968, -1.7174, -2.49058, -3.26726, -4.04916, -4.79442, -5.54142, -6.38267, -6.9499, -7.10873, -7.27104, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987, -7.42987]
}
tracks/241/type = "value"
tracks/241/imported = false
tracks/241/enabled = true
tracks/241/path = NodePath("Body/Zombie_dolphinrider_dolphinjaw:scale")
tracks/241/interp = 1
tracks/241/loop_wrap = true
tracks/241/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.795, 0.795), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.794, 0.794), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.79, 0.79), Vector2(0.789, 0.789), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.79, 0.79), Vector2(0.792, 0.792), Vector2(0.789, 0.789), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788)]
}
tracks/242/type = "value"
tracks/242/imported = false
tracks/242/enabled = true
tracks/242/path = NodePath("Body/Zombie_dolphinrider_dolphinjaw:skew")
tracks/242/interp = 1
tracks/242/loop_wrap = true
tracks/242/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -2e-07, 2e-07, -1e-07, -3e-07, 5e-07, -1e-07, -3e-07, -2e-07, 2e-07, 4e-07, 2e-07, 3e-07, 2e-07, 0.0, -4e-07, -1e-07, -1e-07, -1e-07, -4e-07, 2e-07, 1e-07, 4e-07, 4e-07, 3e-07, 2e-07, -2e-07, 1e-07, -3e-07, 0.0, 0.0, -2e-07, -3e-07, 5e-07, -1e-07, -1e-07, -1e-07, 3e-07, 3e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, 3e-07, -3e-07, -1e-07, -2e-07, 3e-07, 4e-07, -3e-07, -3e-07, -1e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, 0.0, 1e-07, 2e-07, 0.0, 5e-07, 3e-07, 0.0, -3e-07, 4e-07, 1e-07, -4e-07, -3e-07, 2e-07, 0.0, -1e-07, -4e-07, 0.0, 2e-07, -3e-07, 2e-07, -4e-07, -3e-07, 0.0, 0.0, 1e-07, 5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07, -5e-07]
}
tracks/243/type = "value"
tracks/243/imported = false
tracks/243/enabled = true
tracks/243/path = NodePath("Body/Zombie_dolphinrider_dolphinjaw:texture")
tracks/243/interp = 1
tracks/243/loop_wrap = true
tracks/243/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("9_fuck"), ExtResource("9_fuck")]
}
tracks/244/type = "value"
tracks/244/imported = false
tracks/244/enabled = true
tracks/244/path = NodePath("Body/Zombie_dolphinrider_dolphinjaw:self_modulate")
tracks/244/interp = 1
tracks/244/loop_wrap = true
tracks/244/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/245/type = "value"
tracks/245/imported = false
tracks/245/enabled = true
tracks/245/path = NodePath("Body/Zombie_dolphinrider_dolphinbody1:visible")
tracks/245/interp = 1
tracks/245/loop_wrap = true
tracks/245/keys = {
"times": PackedFloat32Array(0, 4.41667, 4.5, 7.66667, 7.75, 10, 10.0833, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [true, true, false, false, true, true, false, false]
}
tracks/246/type = "value"
tracks/246/imported = false
tracks/246/enabled = true
tracks/246/path = NodePath("Body/Zombie_dolphinrider_dolphinbody1:position")
tracks/246/interp = 1
tracks/246/loop_wrap = true
tracks/246/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(6.6, 56.7), Vector2(6.2, 57), Vector2(5.7, 57.3), Vector2(5.1, 58.5), Vector2(4.3, 59.8), Vector2(3.6, 61.2), Vector2(3, 62.6), Vector2(2.3, 64), Vector2(2.5, 64.2), Vector2(2.7, 64.3), Vector2(3.5, 62.9), Vector2(4.3, 61.2), Vector2(5.1, 59.6), Vector2(5.8, 58.2), Vector2(6.6, 56.7), Vector2(8.1, 59.8), Vector2(9, 58.5), Vector2(9.9, 57.1), Vector2(10.8, 55.8), Vector2(11.6, 54.5), Vector2(13.4, 51.3), Vector2(15.3, 48.1), Vector2(17.6, 44.8), Vector2(18.2, 43.4), Vector2(18.8, 42), Vector2(19.5, 40.5), Vector2(20.2, 39), Vector2(14.9, 44), Vector2(9.8, 49), Vector2(2.4, 57.4), Vector2(-4.8, 65.6), Vector2(-4.2, 63.1), Vector2(-3.4, 60.4), Vector2(-2.2, 56.4), Vector2(-0.8, 52.3), Vector2(0.8, 51.4), Vector2(2.5, 50.4), Vector2(4.3, 49.3), Vector2(6.2, 48.3), Vector2(8.2, 47.3), Vector2(11.2, 45.5), Vector2(14.3, 43.6), Vector2(17.3, 41.7), Vector2(20.4, 39.7), Vector2(15.2, 44.4), Vector2(9.8, 49), Vector2(3.2, 56.5), Vector2(-2.9, 64.4), Vector2(-0.6, 64), Vector2(1.4, 63.5), Vector2(3.1, 62.5), Vector2(4.9, 61.6), Vector2(6.6, 60.6), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(8.1, 59.8), Vector2(6.6, 56.7), Vector2(6.8, 56.6), Vector2(7, 56.8), Vector2(7.4, 57), Vector2(8, 57.3), Vector2(8.7, 57.7), Vector2(9.5, 58.3), Vector2(11.9, 61.4), Vector2(14.5, 64.5), Vector2(17.4, 68.1), Vector2(9, 54.6), Vector2(3, 44), Vector2(2.4, 12.2), Vector2(-42.7, -30.5), Vector2(-64.2, -20.4), Vector2(-79.4, -5.9), Vector2(-78.9, 25.8), Vector2(-55.9, 43.5), Vector2(-20.4, 42.8), Vector2(1, 19.2), Vector2(-8.8, -16.9), Vector2(-40.4, -41.2), Vector2(-87.4, -17.8), Vector2(-119.3, 32.7), Vector2(-112.5, 66.6), Vector2(-101.9, 100.1), Vector2(-87.6, 132.1), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3), Vector2(-87.6, 207.3)]
}
tracks/247/type = "value"
tracks/247/imported = false
tracks/247/enabled = true
tracks/247/path = NodePath("Body/Zombie_dolphinrider_dolphinbody1:rotation")
tracks/247/interp = 1
tracks/247/loop_wrap = true
tracks/247/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.012217, -0.024435, -0.038397, -0.05236, -0.068068, -0.08203, -0.099484, -0.094248, -0.090757, -0.073304, -0.05236, -0.033161, -0.015708, 0.0, -0.073304, -0.055851, -0.038397, -0.020944, -0.006981, 0.034907, 0.080285, 0.129154, 0.144862, 0.158825, 0.176278, 0.193732, 0.158825, 0.127409, 0.066323, 0.010472, 0.05236, 0.101229, 0.144862, 0.193732, 0.188496, 0.18326, 0.179769, 0.174533, 0.171042, 0.171042, 0.171042, 0.171042, 0.171042, 0.148353, 0.127409, 0.048869, -0.029671, -0.038397, -0.050615, -0.055851, -0.059341, -0.064577, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, -0.073304, 0.0, -0.055851, -0.116937, -0.178024, -0.235619, -0.296706, -0.357792, -0.26529, -0.172788, -0.085521, 0.197222, 0.483456, 0.7662, 0.333358, -0.068068, -0.472984, -1.24617, -2.0176, -2.79776, -3.57618, -4.32493, -5.06844, -5.91317, -6.75617, -7.05113, -7.34434, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756, -7.63756]
}
tracks/248/type = "value"
tracks/248/imported = false
tracks/248/enabled = true
tracks/248/path = NodePath("Body/Zombie_dolphinrider_dolphinbody1:scale")
tracks/248/interp = 1
tracks/248/loop_wrap = true
tracks/248/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.795, 0.795), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.79, 0.79), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.79, 0.79), Vector2(0.791, 0.791), Vector2(0.789, 0.789), Vector2(0.788, 0.788), Vector2(0.786, 0.786), Vector2(0.787, 0.787), Vector2(0.788, 0.788), Vector2(0.791, 0.791), Vector2(0.789, 0.789), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788)]
}
tracks/249/type = "value"
tracks/249/imported = false
tracks/249/enabled = true
tracks/249/path = NodePath("Body/Zombie_dolphinrider_dolphinbody1:skew")
tracks/249/interp = 1
tracks/249/loop_wrap = true
tracks/249/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -3e-07, 4e-07, -2e-07, 1e-07, 2e-07, -5e-07, 2e-07, 2e-07, -1e-07, 2e-07, 1e-07, -3e-07, 0.0, 0.0, 2e-07, 5e-07, -2e-07, 0.0, -3e-07, -4e-07, 1e-07, 4e-07, 3e-07, 0.0, 3e-07, -5e-07, 0.0034906, 0.0017454, 0.0034902, 0.0, -1e-07, 1e-07, 3e-07, 0.0017449, -4e-07, 0.0017449, -1e-07, -1e-07, 0.0017456, 3e-07, 3e-07, 3e-07, 0.0017456, 0.0, 0.0017454, 2e-07, 4e-07, -2e-07, 5e-07, 5e-07, -2e-07, -2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 2e-07, 0.0, 5e-07, -1e-07, 4e-07, -4e-07, 0.0, -5e-07, 0.0, 4e-07, -1e-07, 2e-07, 2e-07, -5e-07, -1e-07, 2e-07, -2e-07, -1e-07, 4e-07, 3e-07, 4e-07, 2e-07, -1e-07, -4e-07, -4e-07, -1e-07, -4e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07, 3e-07]
}
tracks/250/type = "value"
tracks/250/imported = false
tracks/250/enabled = true
tracks/250/path = NodePath("Body/Zombie_dolphinrider_dolphinbody1:texture")
tracks/250/interp = 1
tracks/250/loop_wrap = true
tracks/250/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("10_fuck"), ExtResource("10_fuck")]
}
tracks/251/type = "value"
tracks/251/imported = false
tracks/251/enabled = true
tracks/251/path = NodePath("Body/Zombie_dolphinrider_dolphinbody1:self_modulate")
tracks/251/interp = 1
tracks/251/loop_wrap = true
tracks/251/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/252/type = "value"
tracks/252/imported = false
tracks/252/enabled = true
tracks/252/path = NodePath("Body/Zombie_dolphinrider_dolphinfin1:visible")
tracks/252/interp = 1
tracks/252/loop_wrap = true
tracks/252/keys = {
"times": PackedFloat32Array(0, 4.41667, 4.5, 7.66667, 7.75, 10, 10.0833, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [true, true, false, false, true, true, false, false]
}
tracks/253/type = "value"
tracks/253/imported = false
tracks/253/enabled = true
tracks/253/path = NodePath("Body/Zombie_dolphinrider_dolphinfin1:position")
tracks/253/interp = 1
tracks/253/loop_wrap = true
tracks/253/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(41.4, 100.4), Vector2(41.4, 100.1), Vector2(41.4, 99.8), Vector2(41.4, 100.4), Vector2(41.3, 101), Vector2(41.3, 101.7), Vector2(41.3, 102.3), Vector2(41.3, 102.8), Vector2(41.4, 102.9), Vector2(41.5, 103), Vector2(41.4, 102.5), Vector2(41.4, 102), Vector2(41.3, 101.5), Vector2(41.3, 101), Vector2(41.4, 100.4), Vector2(47.3, 99.7), Vector2(47.6, 98.7), Vector2(48.1, 97.7), Vector2(48.5, 96.7), Vector2(49, 95.8), Vector2(49.4, 93.7), Vector2(49.8, 91.8), Vector2(50.1, 90), Vector2(50.1, 88.9), Vector2(50.1, 87.8), Vector2(50.1, 86.8), Vector2(50.1, 85.8), Vector2(45.8, 89.8), Vector2(41.4, 93.8), Vector2(36.8, 99.5), Vector2(32.1, 105.1), Vector2(31.4, 104.2), Vector2(30.8, 103.5), Vector2(29.1, 101.3), Vector2(27.6, 99.1), Vector2(29.6, 98), Vector2(31.7, 96.8), Vector2(33.8, 95.8), Vector2(35.8, 94.5), Vector2(37.7, 93.4), Vector2(40.8, 91.5), Vector2(43.9, 89.6), Vector2(46.9, 87.7), Vector2(49.9, 85.8), Vector2(45.7, 89.8), Vector2(41.4, 93.8), Vector2(38.8, 98.5), Vector2(36, 102.9), Vector2(38.5, 102.5), Vector2(41.1, 101.9), Vector2(42.5, 101.3), Vector2(44, 100.7), Vector2(45.6, 100.3), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(47.3, 99.7), Vector2(41.4, 100.4), Vector2(44.1, 98.3), Vector2(46.9, 96.1), Vector2(49.6, 94.1), Vector2(52.4, 92.1), Vector2(55.2, 90), Vector2(58, 88), Vector2(57, 94.8), Vector2(56, 101.7), Vector2(55.2, 108.8), Vector2(33.6, 103.6), Vector2(12.5, 98.8), Vector2(-4.2, 68.2), Vector2(-25.4, 23.9), Vector2(-28.7, 22.3), Vector2(-28.4, 20.2), Vector2(-29, 10.3), Vector2(-28.4, -6.7), Vector2(-34.8, -7), Vector2(-48.6, -8.7), Vector2(-59.6, -4.6), Vector2(-72.2, 6), Vector2(-74.4, 31.5), Vector2(-68.3, 58.9), Vector2(-58, 76.7), Vector2(-46.9, 93.7), Vector2(-35.5, 109.6), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8), Vector2(-35.5, 184.8)]
}
tracks/254/type = "value"
tracks/254/imported = false
tracks/254/enabled = true
tracks/254/path = NodePath("Body/Zombie_dolphinrider_dolphinfin1:rotation")
tracks/254/interp = 1
tracks/254/loop_wrap = true
tracks/254/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.003491, -0.006981, 0.013963, 0.040143, 0.069813, 0.095993, 0.122173, 0.162316, 0.205949, 0.162316, 0.122173, 0.080285, 0.040143, 0.0, 0.05236, 0.101229, 0.148353, 0.197222, 0.246091, 0.342085, 0.441568, 0.541052, 0.58294, 0.626573, 0.670206, 0.712094, 0.63879, 0.568977, 0.612611, 0.656244, 0.731293, 0.804597, 0.720821, 0.6353, 0.630064, 0.624828, 0.621337, 0.616101, 0.612611, 0.612611, 0.612611, 0.612611, 0.612611, 0.589921, 0.568977, 0.560251, 0.551524, 0.502655, 0.459022, 0.357792, 0.254818, 0.153589, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.05236, 0.0, -0.02618, -0.055851, -0.085521, -0.116937, -0.146608, -0.178024, -0.204204, -0.233874, -0.26529, -0.038397, 0.179769, 0.39968, -0.094248, -0.631809, -1.16937, -1.94081, -2.71399, -3.49415, -4.27257, -5.01782, -5.76482, -6.60956, -7.45256, -7.74752, -8.04073, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395, -8.33395]
}
tracks/255/type = "value"
tracks/255/imported = false
tracks/255/enabled = true
tracks/255/path = NodePath("Body/Zombie_dolphinrider_dolphinfin1:scale")
tracks/255/interp = 1
tracks/255/loop_wrap = true
tracks/255/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.795, 0.795), Vector2(0.792, 0.792), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.795, 0.795), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.792, 0.792), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.789, 0.789), Vector2(0.789, 0.789), Vector2(0.787, 0.787), Vector2(0.786, 0.786), Vector2(0.785, 0.785), Vector2(0.785, 0.785), Vector2(0.787, 0.787), Vector2(0.79, 0.79), Vector2(0.788, 0.788), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.787, 0.787)]
}
tracks/256/type = "value"
tracks/256/imported = false
tracks/256/enabled = true
tracks/256/path = NodePath("Body/Zombie_dolphinrider_dolphinfin1:skew")
tracks/256/interp = 1
tracks/256/loop_wrap = true
tracks/256/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 3e-07, -3e-07, -4e-07, -4e-07, 2e-07, 1e-07, 0.0, -4e-07, -2e-07, -4e-07, 0.0, 1e-07, -4e-07, 0.0, -1e-07, 1e-07, 0.0, 2e-07, 4e-07, -5e-07, 3e-07, 1e-07, 0.0, 2e-07, 4e-07, 3e-07, 5e-07, 3e-07, -4e-07, -2e-07, -1e-07, -2e-07, 0.0, -2e-07, -2e-07, -1e-07, 2e-07, 2e-07, -4e-07, -4e-07, -4e-07, -4e-07, -4e-07, 3e-07, 3e-07, -3e-07, 0.0, -2e-07, -4e-07, 5e-07, 1e-07, 0.0, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, -1e-07, 0.0, 1e-07, 5e-07, -1e-07, -1e-07, 3e-07, 4e-07, 5e-07, -1e-07, 0.0, -2e-07, -1e-07, 4e-07, 2e-07, -2e-07, 4e-07, -1e-07, 1e-07, -1e-07, 1e-07, 5e-07, -4e-07, 2e-07, 2e-07, -4e-07, 3e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
}
tracks/257/type = "value"
tracks/257/imported = false
tracks/257/enabled = true
tracks/257/path = NodePath("Body/Zombie_dolphinrider_dolphinfin1:texture")
tracks/257/interp = 1
tracks/257/loop_wrap = true
tracks/257/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("11_fuck"), ExtResource("11_fuck")]
}
tracks/258/type = "value"
tracks/258/imported = false
tracks/258/enabled = true
tracks/258/path = NodePath("Body/Zombie_dolphinrider_dolphinfin1:self_modulate")
tracks/258/interp = 1
tracks/258/loop_wrap = true
tracks/258/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/259/type = "value"
tracks/259/imported = false
tracks/259/enabled = true
tracks/259/path = NodePath("Body/Zombie_outerarm_hand:visible")
tracks/259/interp = 1
tracks/259/loop_wrap = true
tracks/259/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [true, true]
}
tracks/260/type = "value"
tracks/260/imported = false
tracks/260/enabled = true
tracks/260/path = NodePath("Body/Zombie_outerarm_hand:position")
tracks/260/interp = 1
tracks/260/loop_wrap = true
tracks/260/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(48, 82.6), Vector2(47.9, 82.3), Vector2(47.7, 82.1), Vector2(47.3, 82.8), Vector2(46.9, 83.6), Vector2(46.4, 84.3), Vector2(46, 85.2), Vector2(45.5, 86), Vector2(45.1, 86.6), Vector2(44.6, 87.2), Vector2(45.4, 86.2), Vector2(45.9, 85.3), Vector2(46.6, 84.5), Vector2(47.3, 83.5), Vector2(48, 82.6), Vector2(51.3, 82.4), Vector2(51.7, 82), Vector2(52, 81.5), Vector2(52.4, 81.2), Vector2(52.7, 80.8), Vector2(53, 79.3), Vector2(53.3, 77.8), Vector2(53.8, 76.3), Vector2(53.9, 75.6), Vector2(54.1, 75), Vector2(54.4, 74.3), Vector2(54.8, 73.8), Vector2(50.9, 77), Vector2(46.9, 80.1), Vector2(41, 86.2), Vector2(35.1, 92.2), Vector2(34.3, 92.1), Vector2(33.6, 91.9), Vector2(34.3, 89), Vector2(35.1, 86.2), Vector2(37.1, 84.8), Vector2(39.1, 83.6), Vector2(41.1, 82.3), Vector2(43.1, 81.1), Vector2(45.2, 79.7), Vector2(47.9, 77.8), Vector2(50.6, 76), Vector2(53.3, 74.2), Vector2(56.1, 72.3), Vector2(51.5, 76.2), Vector2(46.9, 80.1), Vector2(43.3, 84.8), Vector2(39.9, 89.3), Vector2(42.3, 88.3), Vector2(44.5, 87.3), Vector2(46.3, 86), Vector2(48, 84.8), Vector2(49.8, 83.6), Vector2(51.3, 82.4), Vector2(35.5, 93.2), Vector2(37.6, 92.3), Vector2(39.6, 91.3), Vector2(41.6, 90.3), Vector2(43.8, 89.3), Vector2(46.1, 88), Vector2(48.4, 86.8), Vector2(50.6, 85.6), Vector2(52.9, 84.3), Vector2(53.5, 85.8), Vector2(54.5, 87.4), Vector2(55.5, 89.3), Vector2(54.5, 93.2), Vector2(54.5, 97.4), Vector2(48.9, 100.9), Vector2(43.1, 104.5), Vector2(38.4, 100.5), Vector2(35.5, 97.5), Vector2(34.5, 96.2), Vector2(33.7, 94.8), Vector2(34.1, 93.6), Vector2(34.5, 92.5), Vector2(35.1, 91.2), Vector2(35.5, 90.1), Vector2(36, 88.9), Vector2(34.5, 88.3), Vector2(33, 87.8), Vector2(31.6, 87.3), Vector2(30.2, 86.7), Vector2(28.7, 89.7), Vector2(27.3, 92.8), Vector2(25.9, 95.8), Vector2(23.8, 100), Vector2(27.9, 99.6), Vector2(29.4, 98.3), Vector2(30.9, 97.1), Vector2(32.4, 95.8), Vector2(33.9, 94.5), Vector2(35.5, 93.2), Vector2(48, 82.6), Vector2(49.5, 80), Vector2(51, 77.5), Vector2(52.5, 75), Vector2(54.1, 72.6), Vector2(55.8, 70.2), Vector2(57.3, 67.8), Vector2(57.9, 75.5), Vector2(58.4, 83.3), Vector2(58.9, 90.9), Vector2(46.1, 87.5), Vector2(35.1, 87.1), Vector2(26.8, 67), Vector2(36.3, 49.5), Vector2(37.1, 58.8), Vector2(38, 67), Vector2(36, 78.6), Vector2(41.5, 79.1), Vector2(48, 82.6), Vector2(47.4, 82.8), Vector2(47.9, 83.6), Vector2(49.8, 84.6), Vector2(39.1, 80), Vector2(31.5, 76.8), Vector2(18.6, 68.6), Vector2(16.8, 53.4), Vector2(15.5, 38.5), Vector2(14.7, 23.7), Vector2(12.9, 19.6), Vector2(11.1, 15.3), Vector2(10, 15.7), Vector2(8.9, 16.2), Vector2(7.8, 16.4), Vector2(6.8, 16.8), Vector2(4.8, 44.1), Vector2(3.5, 71.1), Vector2(3, 97.5), Vector2(-15.5, 109), Vector2(-28.3, 119.1), Vector2(-29.1, 119.5), Vector2(-29.9, 119.9), Vector2(-32.9, 113.8), Vector2(-34.9, 108.5), Vector2(-35.1, 103), Vector2(-35.2, 98), Vector2(-35.2, 98), Vector2(-35.1, 95.3), Vector2(-34.9, 92.7), Vector2(-35.1, 95.3), Vector2(-35.2, 98), Vector2(-35.1, 99.3), Vector2(-35, 100.6), Vector2(-43.3, 69.8), Vector2(-51.7, 39), Vector2(-66.8, 17), Vector2(-81.9, -4.8), Vector2(-88.8, -0.6), Vector2(-95.6, 3.9), Vector2(-102.4, 8.8), Vector2(-113.8, 39.5), Vector2(-125.1, 70.5), Vector2(-120.2, 81.8), Vector2(-115.4, 93.3), Vector2(-111.7, 105.1), Vector2(-106.3, 117.5), Vector2(-114.9, 115.1), Vector2(-117.2, 119.3), Vector2(-116.6, 120.1), Vector2(-115.9, 121.2), Vector2(-121.2, 125.1), Vector2(-126.7, 129.4), Vector2(-127.9, 129.6), Vector2(-129.1, 130.6), Vector2(44.6, 70.8), Vector2(44, 70.6), Vector2(43.5, 70.5), Vector2(42.7, 70.3), Vector2(42.1, 70.3), Vector2(41.6, 70.3), Vector2(40.9, 70.2), Vector2(41.7, 68.8), Vector2(42.6, 67.7), Vector2(43.4, 66.5), Vector2(44.3, 65.5), Vector2(45.1, 64.4), Vector2(40.6, 62.3), Vector2(36.1, 60.4), Vector2(31.2, 58.6), Vector2(26.1, 57.2), Vector2(23.9, 55.2), Vector2(21.5, 53.6), Vector2(24.3, 57.6), Vector2(27.2, 61.7), Vector2(30.1, 65.8), Vector2(33, 70), Vector2(36.9, 70.2), Vector2(40.7, 70.5), Vector2(44.6, 70.8), Vector2(45.3, 70.8), Vector2(46, 70.8), Vector2(46.6, 70.8), Vector2(47.3, 71), Vector2(48, 71.2), Vector2(48.5, 71.4), Vector2(49.1, 71.7), Vector2(47.2, 71.6), Vector2(45.4, 71.6), Vector2(43.5, 71.6), Vector2(41.5, 71.6), Vector2(42, 71), Vector2(42.5, 70.6), Vector2(43, 70.3), Vector2(43.7, 70.3), Vector2(44.1, 70.4), Vector2(44.6, 70.8), Vector2(44.6, 70.8), Vector2(44, 70.6), Vector2(43.5, 70.5), Vector2(42.7, 70.3), Vector2(42.1, 70.3), Vector2(41.6, 70.3), Vector2(40.9, 70.2), Vector2(41.7, 68.8), Vector2(42.6, 67.7), Vector2(43.4, 66.5), Vector2(44.3, 65.5), Vector2(45.1, 64.4), Vector2(38.8, 65.3), Vector2(32.5, 66.3), Vector2(26.2, 67.3), Vector2(19.7, 68.3), Vector2(18.4, 68.1), Vector2(17, 67.9), Vector2(21.1, 68.3), Vector2(25.1, 68.8), Vector2(29, 69.3), Vector2(33, 70), Vector2(34.6, 70.1), Vector2(36.4, 70.3), Vector2(38, 70.5), Vector2(39.5, 70.5), Vector2(41.3, 70.7), Vector2(42.9, 70.7), Vector2(44.5, 70.8), Vector2(46, 71.1), Vector2(47.7, 71.3), Vector2(49.1, 71.7), Vector2(47.2, 71.6), Vector2(45.4, 71.6), Vector2(43.5, 71.6), Vector2(41.5, 71.6), Vector2(42, 71), Vector2(42.5, 70.6), Vector2(43, 70.3), Vector2(43.7, 70.3), Vector2(44.1, 70.4), Vector2(44.6, 70.8)]
}
tracks/261/type = "value"
tracks/261/imported = false
tracks/261/enabled = true
tracks/261/path = NodePath("Body/Zombie_outerarm_hand:rotation")
tracks/261/interp = 1
tracks/261/loop_wrap = true
tracks/261/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.012217, -0.024435, -0.038397, -0.05236, -0.068068, -0.08203, -0.099484, -0.094248, -0.094248, -0.073304, -0.055851, -0.034907, -0.015708, 0.0, -0.073304, -0.073304, -0.073304, -0.073304, -0.076794, -0.024435, 0.022689, 0.075049, 0.092502, 0.113446, 0.136136, 0.155334, 0.115192, 0.07854, 0.057596, 0.034907, 0.07854, 0.127409, 0.197222, 0.272271, 0.258309, 0.246091, 0.235619, 0.223402, 0.21293, 0.176278, 0.141372, 0.106465, 0.073304, 0.075049, 0.07854, 0.075049, 0.069813, 0.031416, 0.0, -0.015708, -0.033161, -0.05236, -0.073304, -0.073304, -0.033161, 0.0, 0.040143, 0.07854, 0.122173, 0.165806, 0.211185, 0.258309, 0.122173, -0.003491, -0.137881, -0.404916, -0.677188, -0.657989, -0.63879, -0.26529, 0.102974, 0.150098, 0.200713, 0.20944, 0.223402, 0.235619, 0.249582, 0.261799, 0.240855, 0.223402, 0.205949, 0.188496, 0.15708, 0.127409, 0.101229, 0.061087, 0.033161, 0.008727, -0.006981, -0.029671, -0.050615, -0.073304, 0.0, -0.055851, -0.116937, -0.178024, -0.235619, -0.296706, -0.357792, -0.312414, -0.268781, -0.226893, 0.249582, 0.729548, 1.22522, 2.0752, 2.02109, 1.4748, 0.923279, 0.459022, 0.0, -0.29147, -0.584685, -0.877901, -0.39968, 0.075049, -0.190241, -0.366519, -0.541052, -0.720821, -0.720821, -0.720821, -0.773181, -0.825541, -0.87441, -0.92677, -1.17984, -1.43291, -1.6825, -1.04894, -0.413643, -0.413643, -0.413643, -0.120428, 0.167552, 0.397935, 0.630064, 0.630064, 0.652753, 0.675442, 0.652753, 0.630064, 0.603884, 0.575959, 0.651008, 0.726057, 0.68766, 0.649262, 0.493928, 0.342085, 0.191986, 0.092502, -0.005236, -0.055851, -0.111701, -0.47473, -0.841249, -0.024435, 0.790634, 0.923279, 1.05942, 0.87441, 0.68766, 0.940732, 1.1973, 1.1973, 1.15541, 1.11178, 1.07163, 1.028, 0.987856, 0.944223, 1.02451, 1.10305, 1.18159, 1.26362, 1.34041, 1.48702, 1.62839, 1.77325, 1.91986, 1.73311, 1.5516, 1.5132, 1.4748, 1.43466, 1.39626, 1.32994, 1.26536, 1.1973, 1.14145, 1.0856, 1.03323, 0.975639, 0.923279, 0.865683, 0.811578, 0.74002, 0.670206, 0.600393, 0.53058, 0.642281, 0.752237, 0.862193, 0.975639, 1.0856, 1.1973, 1.1973, 1.15541, 1.11178, 1.07163, 1.028, 0.987856, 0.944223, 1.02451, 1.10305, 1.18159, 1.26362, 1.34041, 1.30376, 1.26536, 1.22871, 1.18857, 1.10654, 1.02276, 1.11527, 1.21126, 1.30376, 1.39626, 1.32645, 1.25664, 1.18508, 1.13272, 1.08036, 1.02451, 0.972148, 0.918043, 0.865683, 0.811578, 0.74002, 0.670206, 0.600393, 0.53058, 0.642281, 0.752237, 0.862193, 0.975639, 1.0856, 1.1973]
}
tracks/262/type = "value"
tracks/262/imported = false
tracks/262/enabled = true
tracks/262/path = NodePath("Body/Zombie_outerarm_hand:scale")
tracks/262/interp = 1
tracks/262/loop_wrap = true
tracks/262/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.789, 0.789), Vector2(0.789, 0.789), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.79, 0.79), Vector2(0.792, 0.792), Vector2(0.795, 0.795), Vector2(0.797, 0.797), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.789, 0.789), Vector2(0.79, 0.79), Vector2(0.791, 0.791), Vector2(0.795, 0.795), Vector2(0.8, 0.8), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.79, 0.79), Vector2(0.791, 0.791), Vector2(0.79, 0.79), Vector2(0.791, 0.791), Vector2(0.789, 0.789), Vector2(0.789, 0.789), Vector2(0.789, 0.789), Vector2(0.79, 0.79), Vector2(0.788, 0.788), Vector2(0.787, 0.787), Vector2(0.786, 0.786), Vector2(0.783, 0.783), Vector2(0.782, 0.782), Vector2(0.781, 0.781), Vector2(0.782, 0.782), Vector2(0.78, 0.78), Vector2(0.779, 0.779), Vector2(0.777, 0.777), Vector2(0.776, 0.776), Vector2(0.776, 0.776), Vector2(0.775, 0.775), Vector2(0.776, 0.776), Vector2(0.775, 0.775), Vector2(0.776, 0.776), Vector2(0.775, 0.775), Vector2(0.776, 0.776), Vector2(0.774, 0.774), Vector2(0.775, 0.775), Vector2(0.773, 0.773), Vector2(0.774, 0.774), Vector2(0.773, 0.773), Vector2(0.772, 0.772), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.774, 0.774), Vector2(0.772, 0.772), Vector2(0.771, 0.771), Vector2(0.769, 0.769), Vector2(0.77, 0.77), Vector2(0.757, 0.767), Vector2(0.743, 0.764), Vector2(0.753, 0.763), Vector2(0.765, 0.765), Vector2(0.763, 0.763), Vector2(0.764, 0.764), Vector2(0.763, 0.763), Vector2(0.764, 0.764), Vector2(0.764, 0.764), Vector2(0.763, 0.763), Vector2(0.762, 0.762), Vector2(0.762, 0.762), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.76, 0.76), Vector2(0.76, 0.76), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.762, 0.762), Vector2(0.761, 0.761), Vector2(0.76, 0.76), Vector2(0.759, 0.759), Vector2(0.758, 0.758), Vector2(0.757, 0.757), Vector2(0.757, 0.757), Vector2(0.758, 0.758), Vector2(0.759, 0.759), Vector2(0.76, 0.76), Vector2(0.761, 0.761), Vector2(0.762, 0.762), Vector2(0.762, 0.762), Vector2(0.764, 0.764), Vector2(0.763, 0.763), Vector2(0.763, 0.763), Vector2(0.763, 0.763), Vector2(0.762, 0.762), Vector2(0.762, 0.762), Vector2(0.762, 0.762), Vector2(0.763, 0.763), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.76, 0.76), Vector2(0.761, 0.761), Vector2(0.76, 0.76), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.762, 0.762), Vector2(0.762, 0.762), Vector2(0.764, 0.764), Vector2(0.764, 0.764), Vector2(0.763, 0.763), Vector2(0.762, 0.762), Vector2(0.762, 0.762), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.76, 0.76), Vector2(0.76, 0.76), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.762, 0.762), Vector2(0.76, 0.76), Vector2(0.758, 0.758), Vector2(0.757, 0.757), Vector2(0.757, 0.757), Vector2(0.755, 0.755), Vector2(0.756, 0.756), Vector2(0.756, 0.756), Vector2(0.758, 0.758), Vector2(0.759, 0.759), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.76, 0.76), Vector2(0.761, 0.761), Vector2(0.76, 0.76), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.763, 0.763), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.76, 0.76), Vector2(0.761, 0.761), Vector2(0.76, 0.76), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.762, 0.762), Vector2(0.762, 0.762), Vector2(0.764, 0.764)]
}
tracks/263/type = "value"
tracks/263/imported = false
tracks/263/enabled = true
tracks/263/path = NodePath("Body/Zombie_outerarm_hand:skew")
tracks/263/interp = 1
tracks/263/loop_wrap = true
tracks/263/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -3e-07, 4e-07, -2e-07, 1e-07, 2e-07, -5e-07, 2e-07, 2e-07, 2e-07, 2e-07, 5e-07, 4e-07, 0.0, 0.0, 2e-07, 2e-07, 2e-07, 2e-07, -5e-07, 4e-07, 3e-07, 2e-07, 4e-07, 4e-07, -3e-07, 3e-07, -3e-07, -2e-07, -1e-07, -4e-07, -2e-07, 0.0, 2e-07, 4e-07, -3e-07, 4e-07, 4e-07, 1e-07, 2e-07, 3e-07, -3e-07, 1e-07, -2e-07, 2e-07, -2e-07, 2e-07, 2e-07, -1e-07, 0.0, 0.0, -3e-07, 1e-07, 2e-07, 2e-07, -3e-07, 0.0, -4e-07, -2e-07, 0.0, 3e-07, -2e-07, -3e-07, 0.0, 3e-07, 0.0, -4e-07, 3e-07, -1e-07, -5e-07, 0.0, 4e-07, 3e-07, -1e-07, -5e-07, 1e-07, 4e-07, 1e-07, 4e-07, 4e-07, 1e-07, -2e-07, -4e-07, -4e-07, 0.0, 1e-07, -5e-07, 3e-07, -4e-07, -3e-07, 4e-07, 5e-07, 2e-07, 0.0, 5e-07, -1e-07, 4e-07, -4e-07, 0.0, -5e-07, 1e-07, 3e-07, 2e-07, 1e-07, -4e-07, 1e-07, 4e-07, 2e-07, 2e-07, 2e-07, -4e-07, 0.0, 0.0, -3e-07, 4e-07, -4e-07, 2e-07, 1e-07, -1e-07, -1e-07, 0.0, 0.0, 0.0, 2e-07, 3e-07, 1e-07, 2e-07, 4e-07, -3e-07, -4e-07, 1e-07, 0.0, 0.0, 0.0, 3e-07, -4e-07, 1e-07, -2e-07, -2e-07, 1e-07, 4e-07, 1e-07, -2e-07, -1e-07, -4e-07, -2e-07, 0.0, -3e-07, 5e-07, 2e-07, -5e-07, 2e-07, 4e-07, 0.0, 5e-07, -1e-07, 5e-07, 3e-07, 4e-07, 1e-07, 2e-07, -2e-07, -1e-07, -3e-07, 5e-07, -2e-07, -2e-07, -1e-07, -3e-07, 1e-07, -1e-07, 3e-07, 1e-07, 3e-07, 1e-07, -1e-07, 4e-07, -2e-07, 5e-07, 2e-07, 5e-07, 1e-07, -1e-07, -3e-07, 4e-07, 2e-07, -4e-07, 4e-07, -1e-07, -3e-07, -2e-07, 3e-07, -2e-07, -1e-07, 0.0, 2e-07, 3e-07, 1e-07, -4e-07, 4e-07, 3e-07, 1e-07, 2e-07, -1e-07, -4e-07, 0.0, -2e-07, -2e-07, -2e-07, -1e-07, -3e-07, 1e-07, -1e-07, 3e-07, 1e-07, 3e-07, 1e-07, -1e-07, 4e-07, -2e-07, -1e-07, -3e-07, -2e-07, 2e-07, -3e-07, -1e-07, 4e-07, 5e-07, -1e-07, 4e-07, 2e-07, 0.0, -5e-07, -3e-07, -2e-07, 3e-07, 4e-07, 2e-07, 3e-07, 1e-07, -4e-07, 4e-07, 3e-07, 1e-07, 2e-07, -1e-07, -4e-07, 0.0, -2e-07, -2e-07]
}
tracks/264/type = "value"
tracks/264/imported = false
tracks/264/enabled = true
tracks/264/path = NodePath("Body/Zombie_outerarm_hand:texture")
tracks/264/interp = 1
tracks/264/loop_wrap = true
tracks/264/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("24_fuck"), ExtResource("24_fuck")]
}
tracks/265/type = "value"
tracks/265/imported = false
tracks/265/enabled = true
tracks/265/path = NodePath("Body/Zombie_outerarm_hand:self_modulate")
tracks/265/interp = 1
tracks/265/loop_wrap = true
tracks/265/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/266/type = "value"
tracks/266/imported = false
tracks/266/enabled = true
tracks/266/path = NodePath("Body/Zombie_outerarm_lower:visible")
tracks/266/interp = 1
tracks/266/loop_wrap = true
tracks/266/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [true, true]
}
tracks/267/type = "value"
tracks/267/imported = false
tracks/267/enabled = true
tracks/267/path = NodePath("Body/Zombie_outerarm_lower:position")
tracks/267/interp = 1
tracks/267/loop_wrap = true
tracks/267/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(57.9, 64.5), Vector2(57.5, 64.2), Vector2(57, 63.8), Vector2(56.4, 64.4), Vector2(55.6, 65.1), Vector2(54.9, 65.7), Vector2(54.2, 66.4), Vector2(53.4, 67.2), Vector2(53, 67.5), Vector2(52.4, 67.9), Vector2(53.5, 67.2), Vector2(54.6, 66.5), Vector2(55.7, 65.8), Vector2(56.8, 65.1), Vector2(57.9, 64.5), Vector2(59.8, 63.6), Vector2(60.4, 63), Vector2(61, 62.5), Vector2(61.6, 62), Vector2(62.2, 61.5), Vector2(63.3, 60.6), Vector2(64.3, 59.8), Vector2(65.4, 58.9), Vector2(66.2, 58.5), Vector2(67, 58.1), Vector2(67.8, 57.6), Vector2(68.3, 57.2), Vector2(63.4, 60), Vector2(58.4, 62.8), Vector2(52.5, 68.7), Vector2(46.5, 74.6), Vector2(46.7, 75), Vector2(47, 75.5), Vector2(48.4, 73.5), Vector2(49.7, 71.4), Vector2(51.7, 69.9), Vector2(53.5, 68.5), Vector2(55.5, 67.1), Vector2(57.4, 65.6), Vector2(59.3, 64.1), Vector2(61.1, 61.6), Vector2(63.3, 59.4), Vector2(65.3, 57), Vector2(67.5, 54.6), Vector2(62.9, 58.6), Vector2(58.4, 62.8), Vector2(53.9, 67.3), Vector2(49.5, 72), Vector2(51.6, 70.6), Vector2(53.6, 69.3), Vector2(55.1, 67.8), Vector2(56.8, 66.5), Vector2(58.1, 65.1), Vector2(59.8, 63.6), Vector2(47.4, 75), Vector2(48.6, 74.3), Vector2(49.9, 73.6), Vector2(51, 72.8), Vector2(52.4, 72.3), Vector2(53.3, 72), Vector2(54.3, 71.8), Vector2(55.1, 71.7), Vector2(56.1, 71.6), Vector2(56.5, 72.2), Vector2(57, 72.7), Vector2(57.5, 73.3), Vector2(54.8, 74.8), Vector2(52, 76.3), Vector2(48.1, 79.2), Vector2(44.3, 82.2), Vector2(43.1, 81.4), Vector2(42.1, 80.8), Vector2(42, 79.9), Vector2(41.9, 79.1), Vector2(42.5, 78), Vector2(43.1, 77), Vector2(43.9, 75.8), Vector2(44.5, 74.7), Vector2(45.1, 73.8), Vector2(44.3, 73.2), Vector2(43.5, 72.6), Vector2(42.9, 72), Vector2(42, 71.3), Vector2(39.9, 73.9), Vector2(37.8, 76.7), Vector2(35.7, 79.3), Vector2(33, 83.2), Vector2(36.5, 82.2), Vector2(38.5, 80.8), Vector2(40.8, 79.4), Vector2(42.8, 78), Vector2(45, 76.7), Vector2(47.4, 75), Vector2(57.9, 64.5), Vector2(56.9, 62.4), Vector2(55.9, 60.4), Vector2(55, 58.6), Vector2(54.3, 57.1), Vector2(53.8, 55.6), Vector2(53.5, 54.3), Vector2(55.2, 61.2), Vector2(56.8, 68.2), Vector2(58.5, 75.3), Vector2(52.5, 75.3), Vector2(47.7, 77.8), Vector2(49.8, 73), Vector2(49.5, 70.7), Vector2(51.3, 74.7), Vector2(54.9, 73), Vector2(54.9, 74.2), Vector2(56.5, 68.3), Vector2(57.9, 64.5), Vector2(55.6, 61.8), Vector2(53.3, 59.4), Vector2(51.1, 57), Vector2(44.8, 58.9), Vector2(38.5, 60.8), Vector2(23.2, 51.2), Vector2(25.1, 32.7), Vector2(27.3, 14.6), Vector2(29.7, -2.7), Vector2(28.9, -7), Vector2(28.2, -11.3), Vector2(26.4, -11.7), Vector2(24.4, -12.1), Vector2(22.6, -12.6), Vector2(20.7, -12.9), Vector2(11.1, 12.7), Vector2(1.7, 39.2), Vector2(-7.2, 66.3), Vector2(-8.2, 80), Vector2(-14.4, 95.8), Vector2(-16.9, 96.6), Vector2(-19.5, 97.3), Vector2(-17.3, 95.4), Vector2(-14.9, 94.2), Vector2(-12.6, 93.8), Vector2(-10.6, 93.9), Vector2(-10.6, 93.9), Vector2(-8.7, 92.2), Vector2(-6.6, 90.6), Vector2(-8.6, 92.3), Vector2(-10.6, 93.9), Vector2(-10.7, 94.6), Vector2(-10.8, 95.2), Vector2(-18.7, 66.8), Vector2(-26.7, 38.5), Vector2(-41.9, 15), Vector2(-57.3, -8.5), Vector2(-66, -7.6), Vector2(-74.9, -6.2), Vector2(-83.9, -4.4), Vector2(-98.3, 24.7), Vector2(-112.8, 54.4), Vector2(-111.5, 65.1), Vector2(-110.1, 76.2), Vector2(-108.9, 85.1), Vector2(-107.6, 94.2), Vector2(-101.9, 103), Vector2(-94.9, 118.4), Vector2(-95.8, 119.2), Vector2(-96.7, 120), Vector2(-101.9, 121.2), Vector2(-107.3, 122.6), Vector2(-111.7, 124.7), Vector2(-115.9, 126.8), Vector2(57.9, 67), Vector2(58.3, 67.3), Vector2(58.5, 67.5), Vector2(59, 67.8), Vector2(59.3, 68.1), Vector2(59.5, 68.3), Vector2(59.9, 68.6), Vector2(60.5, 68.7), Vector2(61.1, 68.8), Vector2(61.6, 69), Vector2(62.1, 69.2), Vector2(62.6, 69.3), Vector2(56.9, 70.2), Vector2(50.7, 71.1), Vector2(44.2, 72.2), Vector2(37.3, 73.3), Vector2(36.9, 73.9), Vector2(36.5, 74.5), Vector2(40.5, 73.5), Vector2(44, 72.8), Vector2(46.6, 72.1), Vector2(48.6, 71.9), Vector2(51.9, 70.2), Vector2(54.9, 68.6), Vector2(57.9, 67), Vector2(59, 66.8), Vector2(60, 66.6), Vector2(61, 66.4), Vector2(62.1, 66.2), Vector2(63.3, 66.1), Vector2(64.3, 65.8), Vector2(65.3, 65.7), Vector2(63.8, 65.2), Vector2(62.4, 64.6), Vector2(60.9, 64.1), Vector2(59.4, 63.5), Vector2(59.1, 64.1), Vector2(58.9, 64.6), Vector2(58.6, 65.2), Vector2(58.4, 65.8), Vector2(58.1, 66.3), Vector2(57.9, 67), Vector2(57.9, 67), Vector2(58.3, 67.3), Vector2(58.5, 67.5), Vector2(59, 67.8), Vector2(59.3, 68.1), Vector2(59.5, 68.3), Vector2(59.9, 68.6), Vector2(60.5, 68.7), Vector2(61.1, 68.8), Vector2(61.6, 69), Vector2(62.1, 69.2), Vector2(62.6, 69.3), Vector2(57, 70), Vector2(51.3, 70.8), Vector2(45.5, 71.4), Vector2(39.9, 72.2), Vector2(39.8, 72.7), Vector2(39.5, 73.2), Vector2(41.8, 72.8), Vector2(44, 72.5), Vector2(46.5, 72.1), Vector2(48.6, 71.9), Vector2(50.4, 71.2), Vector2(52.1, 70.6), Vector2(53.8, 69.8), Vector2(55.4, 69.1), Vector2(57, 68.6), Vector2(58.6, 67.9), Vector2(60.4, 67.3), Vector2(62, 66.7), Vector2(63.7, 66.2), Vector2(65.3, 65.7), Vector2(63.8, 65.2), Vector2(62.4, 64.6), Vector2(60.9, 64.1), Vector2(59.4, 63.5), Vector2(59.1, 64.1), Vector2(58.9, 64.6), Vector2(58.6, 65.2), Vector2(58.4, 65.8), Vector2(58.1, 66.3), Vector2(57.9, 67)]
}
tracks/268/type = "value"
tracks/268/imported = false
tracks/268/enabled = true
tracks/268/path = NodePath("Body/Zombie_outerarm_lower:rotation")
tracks/268/interp = 1
tracks/268/loop_wrap = true
tracks/268/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.012217, -0.024435, -0.038397, -0.05236, -0.068068, -0.08203, -0.099484, -0.094248, -0.094248, -0.073304, -0.055851, -0.034907, -0.015708, 0.0, -0.073304, -0.055851, -0.038397, -0.020944, -0.006981, 0.027925, 0.066323, 0.106465, 0.1309, 0.158825, 0.188496, 0.216421, 0.162316, 0.109956, 0.087266, 0.066323, 0.127409, 0.191986, 0.244346, 0.301942, 0.287979, 0.275762, 0.261799, 0.246091, 0.235619, 0.197222, 0.162316, 0.127409, 0.095993, 0.101229, 0.109956, 0.066323, 0.02618, 0.0, -0.020944, -0.033161, -0.047124, -0.059341, -0.073304, 0.038397, 0.008727, -0.015708, -0.041888, -0.073304, -0.10821, -0.146608, -0.18675, -0.226893, -0.29147, -0.357792, -0.424115, -0.514872, -0.603884, -0.514872, -0.427606, -0.26529, -0.10472, -0.076794, -0.048869, -0.034907, -0.024435, -0.012217, 0.0, 0.010472, 0.040143, 0.075049, 0.109956, 0.143117, 0.10472, 0.066323, 0.031416, 0.0, -0.036652, -0.020944, -0.003491, 0.005236, 0.022689, 0.038397, 0.0, -0.125664, -0.253073, -0.382227, -0.509636, -0.640536, -0.76969, -0.680678, -0.596903, -0.511381, -0.029671, 0.445059, 1.41721, 2.17468, 1.97746, 1.41721, 0.853466, 0.424115, 0.0, -0.099484, -0.198968, -0.300197, -0.204204, -0.111701, -0.296706, -0.094248, 0.101229, 0.301942, 0.363028, 0.429351, 0.406662, 0.380482, 0.359538, 0.336849, 0.083776, -0.164061, -0.418879, 0.061087, 0.15708, 0.10472, 0.05236, 0.293215, 0.537561, 0.783653, 1.02451, 1.02451, 1.10305, 1.18159, 1.10305, 1.02451, 0.998328, 0.970403, 1.07163, 1.16937, 1.10654, 1.04371, 0.856957, 0.668461, 0.479966, 0.270526, 0.064577, -0.068068, -0.20944, -0.349066, -0.490438, 0.258309, 1.01404, 1.028, 1.04196, 0.888373, 0.731293, 0.774926, 0.820305, 0.820305, 0.853466, 0.884882, 0.918043, 0.949459, 0.984366, 1.01404, 1.0856, 1.15541, 1.22522, 1.29503, 1.36485, 1.54462, 1.7209, 1.90241, 2.08218, 2.12581, 2.17119, 1.9251, 1.68075, 1.4399, 1.19555, 1.07163, 0.945968, 0.820305, 0.801106, 0.783653, 0.7662, 0.74351, 0.726057, 0.708604, 0.689405, 0.677188, 0.66497, 0.652753, 0.640536, 0.670206, 0.699877, 0.731293, 0.760964, 0.792379, 0.820305, 0.820305, 0.853466, 0.884882, 0.918043, 0.949459, 0.984366, 1.01404, 1.0856, 1.15541, 1.22522, 1.29503, 1.36485, 1.35088, 1.33518, 1.31772, 1.30202, 1.36485, 1.42244, 1.36485, 1.309, 1.2514, 1.19555, 1.13446, 1.07163, 1.0088, 0.963422, 0.918043, 0.870919, 0.827286, 0.780162, 0.734784, 0.689405, 0.677188, 0.66497, 0.652753, 0.640536, 0.670206, 0.699877, 0.731293, 0.760964, 0.792379, 0.820305]
}
tracks/269/type = "value"
tracks/269/imported = false
tracks/269/enabled = true
tracks/269/path = NodePath("Body/Zombie_outerarm_lower:scale")
tracks/269/interp = 1
tracks/269/loop_wrap = true
tracks/269/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.794, 0.794), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.791, 0.791), Vector2(0.793, 0.793), Vector2(0.795, 0.795), Vector2(0.797, 0.797), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.793, 0.863), Vector2(0.793, 0.934), Vector2(0.794, 0.888), Vector2(0.796, 0.843), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.79, 0.79), Vector2(0.791, 0.791), Vector2(0.789, 0.789), Vector2(0.787, 0.787), Vector2(0.786, 0.786), Vector2(0.784, 0.784), Vector2(0.784, 0.784), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.781, 0.781), Vector2(0.78, 0.78), Vector2(0.779, 0.779), Vector2(0.779, 0.779), Vector2(0.779, 0.779), Vector2(0.777, 0.818), Vector2(0.778, 0.859), Vector2(0.777, 0.818), Vector2(0.779, 0.779), Vector2(0.778, 0.778), Vector2(0.779, 0.779), Vector2(0.777, 0.777), Vector2(0.777, 0.777), Vector2(0.776, 0.776), Vector2(0.777, 0.777), Vector2(0.775, 0.775), Vector2(0.774, 0.774), Vector2(0.775, 0.775), Vector2(0.775, 0.775), Vector2(0.776, 0.776), Vector2(0.775, 0.775), Vector2(0.774, 0.774), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.77, 0.77), Vector2(0.768, 0.768), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.766, 0.766), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.769, 0.769), Vector2(0.769, 0.769), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.767, 0.767), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.766, 0.766), Vector2(0.765, 0.765), Vector2(0.763, 0.763), Vector2(0.763, 0.763), Vector2(0.762, 0.762), Vector2(0.763, 0.763), Vector2(0.763, 0.763), Vector2(0.764, 0.764), Vector2(0.765, 0.765), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.769, 0.769), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.768, 0.768), Vector2(0.767, 0.767), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.767, 0.767), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.769, 0.769), Vector2(0.769, 0.769), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.767, 0.767), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.765, 0.765), Vector2(0.764, 0.764), Vector2(0.762, 0.762), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.761, 0.761), Vector2(0.762, 0.762), Vector2(0.763, 0.763), Vector2(0.764, 0.764), Vector2(0.766, 0.766), Vector2(0.764, 0.764), Vector2(0.764, 0.764), Vector2(0.765, 0.765), Vector2(0.764, 0.764), Vector2(0.765, 0.765), Vector2(0.765, 0.765), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.767, 0.767), Vector2(0.768, 0.768), Vector2(0.767, 0.767), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.767, 0.767), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.766, 0.766), Vector2(0.767, 0.767), Vector2(0.767, 0.767), Vector2(0.769, 0.769)]
}
tracks/270/type = "value"
tracks/270/imported = false
tracks/270/enabled = true
tracks/270/path = NodePath("Body/Zombie_outerarm_lower:skew")
tracks/270/interp = 1
tracks/270/loop_wrap = true
tracks/270/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -3e-07, 4e-07, -2e-07, 1e-07, 2e-07, -5e-07, 2e-07, 2e-07, 2e-07, 2e-07, 5e-07, 4e-07, 0.0, 0.0, 2e-07, 5e-07, -2e-07, 0.0, -3e-07, 3e-07, -5e-07, 1e-07, -3e-07, 0.0, -4e-07, -2e-07, -4e-07, -3e-07, 5e-07, -5e-07, 0.0, 2e-07, 1e-07, 0.0, 3e-07, 0.0, 4e-07, 4e-07, 4e-07, 2e-07, -4e-07, 0.0, 1e-07, 1e-07, -3e-07, -5e-07, -1e-07, 0.0, 0.0, -3e-07, 1e-07, -2e-07, 2e-07, 2e-07, -4e-07, 0.0, 1e-07, 2e-07, -4e-07, 3e-07, -2e-07, 2e-07, 0.0, -5e-07, 0.0, -1e-07, 1e-07, -1e-07, 3e-07, 0.0, 2e-07, -5e-07, -2e-07, 4e-07, 4e-07, -3e-07, 0.0, 0.0, -4e-07, 2e-07, -3e-07, 0.0, -2e-07, -5e-07, -1e-07, 0.0, 1e-07, 0.0, 3e-07, 0.0, 3e-07, 2e-07, 0.0, 3e-07, 3e-07, -1e-07, -1e-07, 2e-07, -2e-07, -4e-07, 4e-07, -5e-07, 4e-07, 0.0, 3e-07, 2e-07, 0.0, 3e-07, 0.0, 0.0, 0.0, 2e-07, 5e-07, 4e-07, 5e-07, -1e-07, 0.0, 2e-07, 1e-07, 0.0, 5e-07, 0.0, -3e-07, -2e-07, -2e-07, -5e-07, -2e-07, 1e-07, 0.0, -5e-07, -4e-07, -2e-07, -1e-07, 3e-07, 4e-07, -2e-07, 3e-07, 3e-07, 1e-07, -1e-07, 1e-07, 3e-07, 3e-07, 0.0, 1e-07, -4e-07, -3e-07, -1e-07, -4e-07, 1e-07, -5e-07, 0.0, 2e-07, 2e-07, 5e-07, 2e-07, 5e-07, -3e-07, 3e-07, -1e-07, -5e-07, -4e-07, -1e-07, 2e-07, -3e-07, -3e-07, 0.0, -1e-07, 2e-07, 1e-07, -3e-07, 3e-07, -2e-07, -1e-07, 1e-07, 3e-07, 5e-07, 4e-07, -4e-07, -1e-07, -2e-07, 0.0, -4e-07, 1e-07, 0.0, -4e-07, -5e-07, 1e-07, 4e-07, -3e-07, 1e-07, -2e-07, -5e-07, 2e-07, 0.0, -3e-07, 0.0, -3e-07, 4e-07, 1e-07, -2e-07, 4e-07, 0.0, -1e-07, -5e-07, 5e-07, -3e-07, -3e-07, 0.0, -1e-07, 2e-07, 1e-07, -3e-07, 3e-07, -2e-07, -1e-07, 1e-07, 3e-07, 5e-07, -2e-07, -1e-07, -4e-07, -4e-07, 5e-07, 3e-07, 5e-07, -1e-07, 1e-07, -5e-07, 0.0, 1e-07, 3e-07, -3e-07, 2e-07, 3e-07, 1e-07, 2e-07, -4e-07, 0.0, -3e-07, 4e-07, 1e-07, -2e-07, 4e-07, 0.0, -1e-07, -5e-07, 5e-07, -3e-07]
}
tracks/271/type = "value"
tracks/271/imported = false
tracks/271/enabled = true
tracks/271/path = NodePath("Body/Zombie_outerarm_lower:texture")
tracks/271/interp = 1
tracks/271/loop_wrap = true
tracks/271/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("25_fuck"), ExtResource("25_fuck")]
}
tracks/272/type = "value"
tracks/272/imported = false
tracks/272/enabled = true
tracks/272/path = NodePath("Body/Zombie_outerarm_lower:self_modulate")
tracks/272/interp = 1
tracks/272/loop_wrap = true
tracks/272/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
tracks/273/type = "value"
tracks/273/imported = false
tracks/273/enabled = true
tracks/273/path = NodePath("Body/Zombie_dolphinrider_outerarm_upper:visible")
tracks/273/interp = 1
tracks/273/loop_wrap = true
tracks/273/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [true, true]
}
tracks/274/type = "value"
tracks/274/imported = false
tracks/274/enabled = true
tracks/274/path = NodePath("Body/Zombie_dolphinrider_outerarm_upper:position")
tracks/274/interp = 1
tracks/274/loop_wrap = true
tracks/274/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(42.1, 48.8), Vector2(41.4, 49.3), Vector2(40.5, 49.8), Vector2(40, 49.9), Vector2(39.5, 50), Vector2(39, 50.1), Vector2(38.6, 50.3), Vector2(38.1, 50.4), Vector2(38.3, 50.3), Vector2(38.6, 50.1), Vector2(39.4, 49.9), Vector2(40, 49.6), Vector2(40.8, 49.3), Vector2(41.4, 49), Vector2(42.1, 48.8), Vector2(43.8, 48.5), Vector2(44.3, 48.3), Vector2(45, 47.9), Vector2(45.5, 47.4), Vector2(46.1, 46.9), Vector2(47, 46.2), Vector2(47.9, 45.5), Vector2(48.8, 44.9), Vector2(49.4, 44.6), Vector2(49.9, 44.4), Vector2(50.5, 44.1), Vector2(51, 44), Vector2(46.4, 46.3), Vector2(41.9, 48.5), Vector2(38.6, 51.4), Vector2(35.5, 54.5), Vector2(37.4, 54.4), Vector2(39.1, 54.1), Vector2(39.7, 53.2), Vector2(40.1, 52.1), Vector2(41.1, 51), Vector2(42.4, 49.9), Vector2(43.4, 48.8), Vector2(44.5, 47.6), Vector2(45.8, 46.6), Vector2(46.6, 45.6), Vector2(47.6, 44.6), Vector2(48.7, 43.7), Vector2(49.8, 42.7), Vector2(45.9, 45.7), Vector2(41.9, 48.5), Vector2(39.1, 52.1), Vector2(36.2, 56), Vector2(37.4, 54.4), Vector2(38.6, 53), Vector2(39.9, 51.9), Vector2(41.3, 50.8), Vector2(42.7, 49.6), Vector2(43.8, 48.5), Vector2(49.8, 50.5), Vector2(49.6, 50), Vector2(49.5, 49.6), Vector2(49.4, 49.2), Vector2(49.5, 48.8), Vector2(50.3, 48.3), Vector2(51.1, 47.8), Vector2(52, 47.3), Vector2(53, 46.8), Vector2(53.8, 46.8), Vector2(54.5, 46.8), Vector2(55.2, 46.6), Vector2(50.8, 49), Vector2(46.5, 51.4), Vector2(43, 54.8), Vector2(39.5, 58), Vector2(40.5, 57.1), Vector2(41.2, 56.4), Vector2(42.4, 55.5), Vector2(43.4, 54.4), Vector2(45, 53.4), Vector2(46.6, 52.4), Vector2(48.4, 51.4), Vector2(50, 50.4), Vector2(51.7, 49.4), Vector2(53.4, 49.5), Vector2(55.1, 49.5), Vector2(56.8, 49.8), Vector2(58.5, 50), Vector2(54.3, 51.7), Vector2(50, 53.6), Vector2(45.9, 55.6), Vector2(41.1, 58.9), Vector2(42.2, 57.3), Vector2(43.6, 55.9), Vector2(45.1, 54.5), Vector2(46.6, 53.1), Vector2(48.1, 51.7), Vector2(49.8, 50.5), Vector2(42.1, 48.8), Vector2(39.7, 49.3), Vector2(37.6, 50.1), Vector2(35.6, 51), Vector2(34, 52), Vector2(32.4, 53), Vector2(31.4, 54), Vector2(36.3, 51.8), Vector2(43.3, 50.3), Vector2(51.9, 50.2), Vector2(58.1, 52.4), Vector2(64.4, 58), Vector2(69.8, 60.5), Vector2(73.2, 63.8), Vector2(70.6, 60.7), Vector2(63.8, 54.5), Vector2(55.4, 51.9), Vector2(48, 49.1), Vector2(42.1, 48.8), Vector2(36.6, 53.8), Vector2(32.5, 59.5), Vector2(30.1, 65.4), Vector2(25.4, 54.3), Vector2(24.6, 44.4), Vector2(22.6, 24.6), Vector2(16.9, 12.4), Vector2(12.2, 1.2), Vector2(8.3, -8.8), Vector2(6.5, -10.5), Vector2(4.6, -12.2), Vector2(2.7, -11.4), Vector2(0.8, -10.5), Vector2(-0.8, -9.8), Vector2(-2.6, -8.8), Vector2(-11, 18), Vector2(-19.2, 45), Vector2(-27.5, 71.9), Vector2(-28.8, 73.7), Vector2(-25.8, 77.3), Vector2(-25.3, 75.7), Vector2(-24.7, 74.3), Vector2(-23.3, 74.1), Vector2(-21.9, 73.8), Vector2(-20.5, 73.5), Vector2(-19.1, 73.3), Vector2(-19.1, 73.3), Vector2(-19.8, 73.1), Vector2(-20.4, 72.9), Vector2(-19.7, 73.1), Vector2(-19.1, 73.3), Vector2(-19.7, 74.2), Vector2(-20.3, 75.1), Vector2(-27.2, 46.4), Vector2(-34, 17.7), Vector2(-49.6, -5.6), Vector2(-65.4, -29.2), Vector2(-75.4, -26.9), Vector2(-85.3, -24.6), Vector2(-95.3, -22.2), Vector2(-106, 4.6), Vector2(-116.6, 31.7), Vector2(-120, 44.1), Vector2(-123.2, 57.2), Vector2(-124.8, 70.8), Vector2(-125.8, 84.5), Vector2(-122.8, 97.2), Vector2(-119.7, 110), Vector2(-120.6, 112.7), Vector2(-121.5, 115.5), Vector2(-124.2, 112.3), Vector2(-126.5, 109.5), Vector2(-127.1, 109.1), Vector2(-127.4, 109), Vector2(46.4, 49.2), Vector2(47.3, 49.1), Vector2(48.1, 49), Vector2(49.1, 48.9), Vector2(50.1, 48.8), Vector2(51, 48.6), Vector2(51.9, 48.6), Vector2(52.9, 48.5), Vector2(53.8, 48.5), Vector2(54.7, 48.5), Vector2(55.6, 48.5), Vector2(56.6, 48.5), Vector2(54, 49.1), Vector2(51.5, 50.2), Vector2(49, 51.5), Vector2(46.1, 53.2), Vector2(45.4, 53), Vector2(44.7, 53), Vector2(45.4, 52.2), Vector2(46, 51.5), Vector2(46.5, 51.2), Vector2(46.9, 51.1), Vector2(46.6, 50.1), Vector2(46.5, 49.5), Vector2(46.4, 49.2), Vector2(47.5, 49), Vector2(48.6, 48.8), Vector2(49.8, 48.5), Vector2(51, 48.4), Vector2(52.1, 48.1), Vector2(53.4, 47.9), Vector2(54.5, 47.6), Vector2(50.9, 48.6), Vector2(47.4, 49.7), Vector2(44, 50.9), Vector2(40.5, 52.1), Vector2(41.5, 51.5), Vector2(42.3, 50.9), Vector2(43.3, 50.5), Vector2(44.3, 50), Vector2(45.3, 49.5), Vector2(46.4, 49.2), Vector2(46.4, 49.2), Vector2(47.3, 49.1), Vector2(48.1, 49), Vector2(49.1, 48.9), Vector2(50.1, 48.8), Vector2(51, 48.6), Vector2(51.9, 48.6), Vector2(52.9, 48.5), Vector2(53.8, 48.5), Vector2(54.7, 48.5), Vector2(55.6, 48.5), Vector2(56.6, 48.5), Vector2(53.5, 49.1), Vector2(50.5, 49.8), Vector2(47.4, 50.6), Vector2(44.3, 51.4), Vector2(44.3, 51.9), Vector2(44.1, 52.4), Vector2(44.8, 52), Vector2(45.5, 51.6), Vector2(46.1, 51.4), Vector2(46.9, 51.1), Vector2(47.4, 50.6), Vector2(47.9, 50.3), Vector2(48.4, 49.9), Vector2(49.2, 49.5), Vector2(50.1, 49), Vector2(51, 48.6), Vector2(51.9, 48.4), Vector2(52.8, 48), Vector2(53.7, 47.8), Vector2(54.5, 47.6), Vector2(50.9, 48.6), Vector2(47.4, 49.7), Vector2(44, 50.9), Vector2(40.5, 52.1), Vector2(41.5, 51.5), Vector2(42.3, 50.9), Vector2(43.3, 50.5), Vector2(44.3, 50), Vector2(45.3, 49.5), Vector2(46.4, 49.2)]
}
tracks/275/type = "value"
tracks/275/imported = false
tracks/275/enabled = true
tracks/275/path = NodePath("Body/Zombie_dolphinrider_outerarm_upper:rotation")
tracks/275/interp = 1
tracks/275/loop_wrap = true
tracks/275/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.015708, -0.038397, -0.024435, -0.012217, 0.0, 0.008727, 0.020944, 0.05236, 0.083776, 0.066323, 0.048869, 0.031416, 0.013963, 0.0, -0.024435, -0.024435, -0.024435, -0.024435, -0.027925, -0.033161, -0.041888, -0.050615, -0.050615, -0.050615, -0.055851, -0.057596, -0.041888, -0.027925, 0.10472, 0.240855, 0.298451, 0.359538, 0.345575, 0.336849, 0.293215, 0.253073, 0.211185, 0.171042, 0.1309, 0.057596, -0.003491, -0.073304, -0.144862, -0.085521, -0.027925, 0.040143, 0.109956, 0.07854, 0.048869, 0.027925, 0.008727, -0.003491, -0.024435, 0.734784, 0.678933, 0.624828, 0.568977, 0.516617, 0.511381, 0.511381, 0.507891, 0.506145, 0.511381, 0.516617, 0.523599, 0.455531, 0.387463, 0.397935, 0.410152, 0.502655, 0.598648, 0.647517, 0.694641, 0.731293, 0.76969, 0.809833, 0.84823, 0.886627, 0.972148, 1.05942, 1.14668, 1.23046, 1.15541, 1.08036, 1.00706, 0.932006, 0.855211, 0.830777, 0.804597, 0.783653, 0.757473, 0.734784, 0.0, -0.125664, -0.253073, -0.382227, -0.509636, -0.640536, -0.76969, -0.39619, -0.024435, 0.342085, 0.82205, 1.30027, 1.78896, 2.17468, 1.87623, 1.36485, 0.853466, 0.424115, 0.0, -0.31765, -0.642281, -0.966912, -0.44855, 0.062832, 0.581195, 0.280998, -0.012217, -0.314159, -0.39968, -0.485202, -0.535816, -0.588176, -0.637045, -0.69115, -0.755728, -0.820305, -0.883137, -0.338594, 0.200713, 0.328122, 0.453786, 0.472984, 0.493928, 0.516617, 0.535816, 0.535816, 0.446804, 0.361283, 0.446804, 0.535816, 0.507891, 0.481711, 0.560251, 0.6353, 0.595157, 0.555015, 0.467748, 0.385718, 0.301942, 0.403171, 0.506145, 0.296706, 0.087266, -0.116937, -0.324631, -0.256563, -0.188496, -0.282743, -0.382227, -0.169297, 0.038397, 0.197222, 0.357792, 0.357792, 0.389208, 0.420624, 0.455531, 0.485202, 0.520108, 0.551524, 0.586431, 0.617847, 0.651008, 0.682424, 0.71733, 0.888373, 1.05942, 1.22871, 1.39626, 1.39103, 1.38405, 1.24791, 1.10828, 0.970403, 0.832522, 0.673697, 0.516617, 0.357792, 0.354302, 0.354302, 0.354302, 0.354302, 0.354302, 0.354302, 0.357792, 0.267035, 0.176278, 0.087266, 0.0, 0.057596, 0.118682, 0.176278, 0.235619, 0.296706, 0.357792, 0.357792, 0.389208, 0.420624, 0.455531, 0.485202, 0.520108, 0.551524, 0.586431, 0.617847, 0.651008, 0.682424, 0.71733, 0.804597, 0.891863, 0.980875, 1.06814, 1.0856, 1.09781, 1.03323, 0.966912, 0.897099, 0.832522, 0.773181, 0.71384, 0.654498, 0.612611, 0.568977, 0.525344, 0.485202, 0.441568, 0.397935, 0.357792, 0.267035, 0.176278, 0.087266, 0.0, 0.057596, 0.118682, 0.176278, 0.235619, 0.296706, 0.357792]
}
tracks/276/type = "value"
tracks/276/imported = false
tracks/276/enabled = true
tracks/276/path = NodePath("Body/Zombie_dolphinrider_outerarm_upper:scale")
tracks/276/interp = 1
tracks/276/loop_wrap = true
tracks/276/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.794, 0.794), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.8, 0.8), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.796, 0.796), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.796, 0.796), Vector2(0.794, 0.794), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.795, 0.795), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.793, 0.793), Vector2(0.794, 0.794), Vector2(0.795, 0.795), Vector2(0.797, 0.797), Vector2(0.8, 0.8), Vector2(0.799, 0.799), Vector2(0.799, 0.799), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.797, 0.797), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.795, 0.795), Vector2(0.844, 0.795), Vector2(0.895, 0.795), Vector2(0.862, 0.796), Vector2(0.83, 0.796), Vector2(0.798, 0.798), Vector2(0.798, 0.798), Vector2(0.8, 0.8), Vector2(0.798, 0.798), Vector2(0.797, 0.797), Vector2(0.798, 0.798), Vector2(0.796, 0.796), Vector2(0.796, 0.796), Vector2(0.795, 0.795), Vector2(0.794, 0.794), Vector2(0.794, 0.794), Vector2(0.793, 0.793), Vector2(0.792, 0.792), Vector2(0.792, 0.792), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.791, 0.791), Vector2(0.792, 0.792), Vector2(0.789, 0.789), Vector2(0.788, 0.788), Vector2(0.788, 0.788), Vector2(0.787, 0.787), Vector2(0.787, 0.787), Vector2(0.786, 0.786), Vector2(0.786, 0.786), Vector2(0.784, 0.784), Vector2(0.784, 0.784), Vector2(0.783, 0.783), Vector2(0.784, 0.784), Vector2(0.784, 0.784), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.783, 0.783), Vector2(0.784, 0.784), Vector2(0.783, 0.783), Vector2(0.784, 0.784), Vector2(0.782, 0.782), Vector2(0.782, 0.782), Vector2(0.781, 0.781), Vector2(0.782, 0.782), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.78, 0.78), Vector2(0.779, 0.779), Vector2(0.781, 0.781), Vector2(0.779, 0.779), Vector2(0.779, 0.779), Vector2(0.778, 0.778), Vector2(0.778, 0.778), Vector2(0.777, 0.777), Vector2(0.776, 0.776), Vector2(0.775, 0.775), Vector2(0.776, 0.776), Vector2(0.775, 0.775), Vector2(0.775, 0.775), Vector2(0.775, 0.775), Vector2(0.775, 0.775), Vector2(0.775, 0.775), Vector2(0.774, 0.774), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.772, 0.772), Vector2(0.772, 0.772), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.774, 0.774), Vector2(0.772, 0.772), Vector2(0.772, 0.772), Vector2(0.771, 0.771), Vector2(0.771, 0.771), Vector2(0.771, 0.771), Vector2(0.771, 0.771), Vector2(0.77, 0.77), Vector2(0.771, 0.771), Vector2(0.771, 0.771), Vector2(0.772, 0.772), Vector2(0.772, 0.772), Vector2(0.773, 0.773), Vector2(0.775, 0.775), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.775, 0.775), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.775, 0.775), Vector2(0.775, 0.775), Vector2(0.774, 0.774), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.772, 0.772), Vector2(0.772, 0.772), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.774, 0.774), Vector2(0.772, 0.772), Vector2(0.771, 0.771), Vector2(0.77, 0.77), Vector2(0.77, 0.77), Vector2(0.769, 0.769), Vector2(0.77, 0.77), Vector2(0.77, 0.77), Vector2(0.77, 0.77), Vector2(0.771, 0.771), Vector2(0.772, 0.772), Vector2(0.771, 0.771), Vector2(0.771, 0.771), Vector2(0.772, 0.772), Vector2(0.771, 0.771), Vector2(0.772, 0.772), Vector2(0.772, 0.772), Vector2(0.773, 0.773), Vector2(0.773, 0.773), Vector2(0.774, 0.774), Vector2(0.775, 0.775), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.774, 0.774), Vector2(0.775, 0.775)]
}
tracks/277/type = "value"
tracks/277/imported = false
tracks/277/enabled = true
tracks/277/path = NodePath("Body/Zombie_dolphinrider_outerarm_upper:skew")
tracks/277/interp = 1
tracks/277/loop_wrap = true
tracks/277/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, -2e-07, 4e-07, -3e-07, 0.0, -4e-07, 0.0, -1e-07, -2e-07, -5e-07, 2e-07, -1e-07, -4e-07, 0.0, 4e-07, 4e-07, 4e-07, 4e-07, -3e-07, -3e-07, 1e-07, 5e-07, 5e-07, 5e-07, 5e-07, 1e-07, 1e-07, -3e-07, -2e-07, 4e-07, 3e-07, -2e-07, 2e-07, -5e-07, 3e-07, -3e-07, -2e-07, 3e-07, -3e-07, -1e-07, 3e-07, 2e-07, -3e-07, -1e-07, -3e-07, -4e-07, -3e-07, -2e-07, 2e-07, 3e-07, -4e-07, 3e-07, 4e-07, -4e-07, 1e-07, -1e-07, 3e-07, 4e-07, 5e-07, 5e-07, -2e-07, 5e-07, 5e-07, 4e-07, -2e-07, -1e-07, 1e-07, 1e-07, 4e-07, -2e-07, -1e-07, 1e-07, 0.0, -1e-07, 2e-07, -2e-07, 0.0, 2e-07, 4e-07, -2e-07, 3e-07, 1e-07, -1e-07, -2e-07, 0.0, -2e-07, 3e-07, -3e-07, -2e-07, -2e-07, -1e-07, -4e-07, 0.0, 3e-07, 3e-07, -1e-07, -1e-07, 2e-07, -2e-07, 3e-07, 4e-07, -5e-07, 1e-07, 3e-07, -0.0383968, -0.0733036, -0.0733039, -0.0575954, -0.0436332, -0.0209439, 0.0, 1e-07, -2e-07, -4e-07, 4e-07, -1e-07, -4e-07, 0.0, -3e-07, -3e-07, -4e-07, 5e-07, -1e-07, 1e-07, -2e-07, -4e-07, 4e-07, 3e-07, 4e-07, 1e-07, -1e-07, -1e-07, -4e-07, 2e-07, 2e-07, 4e-07, 1e-07, 1e-07, 3e-07, 1e-07, 3e-07, 1e-07, -2e-07, -1e-07, -3e-07, -2e-07, 3e-07, -3e-07, 2e-07, -2e-07, 0.0, 1e-07, 5e-07, 0.0, 5e-07, -1e-07, -2e-07, -4e-07, 4e-07, -3e-07, -1e-07, 1e-07, 2e-07, 2e-07, 5e-07, 5e-07, 4e-07, 3e-07, -1e-07, -5e-07, 1e-07, 0.0, -4e-07, -5e-07, -2e-07, -3e-07, 3e-07, -4e-07, -2e-07, -2e-07, 4e-07, 4e-07, 1e-07, 4e-07, 1e-07, 0.0, 0.0, 1e-07, 4e-07, 5e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, -2e-07, 5e-07, 4e-07, 3e-07, 5e-07, 0.0, -1e-07, 4e-07, 3e-07, 4e-07, 0.0, 5e-07, 5e-07, 4e-07, 3e-07, -1e-07, -5e-07, 1e-07, 0.0, -4e-07, -5e-07, -2e-07, -3e-07, 3e-07, -2e-07, 2e-07, 0.0, 5e-07, -2e-07, 1e-07, -1e-07, 4e-07, 2e-07, 0.0, -2e-07, -3e-07, 5e-07, -4e-07, 3e-07, 1e-07, -5e-07, 3e-07, 1e-07, 5e-07, 4e-07, 3e-07, 5e-07, 0.0, -1e-07, 4e-07, 3e-07, 4e-07, 0.0, 5e-07]
}
tracks/278/type = "value"
tracks/278/imported = false
tracks/278/enabled = true
tracks/278/path = NodePath("Body/Zombie_dolphinrider_outerarm_upper:texture")
tracks/278/interp = 1
tracks/278/loop_wrap = true
tracks/278/keys = {
"times": PackedFloat32Array(0, 20.75),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [ExtResource("26_fuck"), ExtResource("26_fuck")]
}
tracks/279/type = "value"
tracks/279/imported = false
tracks/279/enabled = true
tracks/279/path = NodePath("Body/Zombie_dolphinrider_outerarm_upper:self_modulate")
tracks/279/interp = 1
tracks/279/loop_wrap = true
tracks/279/keys = {
"times": PackedFloat32Array(0, 0.083333, 0.166667, 0.25, 0.333333, 0.416667, 0.5, 0.583333, 0.666667, 0.75, 0.833333, 0.916667, 1, 1.08333, 1.16667, 1.25, 1.33333, 1.41667, 1.5, 1.58333, 1.66667, 1.75, 1.83333, 1.91667, 2, 2.08333, 2.16667, 2.25, 2.33333, 2.41667, 2.5, 2.58333, 2.66667, 2.75, 2.83333, 2.91667, 3, 3.08333, 3.16667, 3.25, 3.33333, 3.41667, 3.5, 3.58333, 3.66667, 3.75, 3.83333, 3.91667, 4, 4.08333, 4.16667, 4.25, 4.33333, 4.41667, 4.5, 4.58333, 4.66667, 4.75, 4.83333, 4.91667, 5, 5.08333, 5.16667, 5.25, 5.33333, 5.41667, 5.5, 5.58333, 5.66667, 5.75, 5.83333, 5.91667, 6, 6.08333, 6.16667, 6.25, 6.33333, 6.41667, 6.5, 6.58333, 6.66667, 6.75, 6.83333, 6.91667, 7, 7.08333, 7.16667, 7.25, 7.33333, 7.41667, 7.5, 7.58333, 7.66667, 7.75, 7.83333, 7.91667, 8, 8.08333, 8.16667, 8.25, 8.33333, 8.41667, 8.5, 8.58333, 8.66667, 8.75, 8.83333, 8.91667, 9, 9.08333, 9.16667, 9.25, 9.33333, 9.41667, 9.5, 9.58333, 9.66667, 9.75, 9.83333, 9.91667, 10, 10.0833, 10.1667, 10.25, 10.3333, 10.4167, 10.5, 10.5833, 10.6667, 10.75, 10.8333, 10.9167, 11, 11.0833, 11.1667, 11.25, 11.3333, 11.4167, 11.5, 11.5833, 11.6667, 11.75, 11.8333, 11.9167, 12, 12.0833, 12.1667, 12.25, 12.3333, 12.4167, 12.5, 12.5833, 12.6667, 12.75, 12.8333, 12.9167, 13, 13.0833, 13.1667, 13.25, 13.3333, 13.4167, 13.5, 13.5833, 13.6667, 13.75, 13.8333, 13.9167, 14, 14.0833, 14.1667, 14.25, 14.3333, 14.4167, 14.5, 14.5833, 14.6667, 14.75, 14.8333, 14.9167, 15, 15.0833, 15.1667, 15.25, 15.3333, 15.4167, 15.5, 15.5833, 15.6667, 15.75, 15.8333, 15.9167, 16, 16.0833, 16.1667, 16.25, 16.3333, 16.4167, 16.5, 16.5833, 16.6667, 16.75, 16.8333, 16.9167, 17, 17.0833, 17.1667, 17.25, 17.3333, 17.4167, 17.5, 17.5833, 17.6667, 17.75, 17.8333, 17.9167, 18, 18.0833, 18.1667, 18.25, 18.3333, 18.4167, 18.5, 18.5833, 18.6667, 18.75, 18.8333, 18.9167, 19, 19.0833, 19.1667, 19.25, 19.3333, 19.4167, 19.5, 19.5833, 19.6667, 19.75, 19.8333, 19.9167, 20, 20.0833, 20.1667, 20.25, 20.3333, 20.4167, 20.5, 20.5833, 20.6667, 20.75),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1)]
}
